/*! For license information please see controllers.js.LICENSE.txt */
(self.webpackChunk=self.webpackChunk||[]).push([[301],{77:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["stateRulesBlock"];static outlets=["kanban"];board=null;kanbanOutletConnected(e,t){this.board=e;var n=this;this.board.registerBeforeDrop(((e,t)=>n.checkRules(e,t)))}checkRules(e,t){return console.log({recId:e,toCol:t}),!0}}window.Controllers||(window.Controllers={}),window.Controllers["recommendation-kanban"]=i},167:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static values={url:String};connect(){this.element.removeAttribute("oninput"),this.element.removeAttribute("oninvalid"),this.element.addEventListener("change",this.checkEmail.bind(this))}disconnect(e){this.element.removeEventListener("change",this.checkEmail.bind(this))}optionsForFetch(){return{headers:{"X-Requested-With":"XMLHttpRequest",Accept:"application/json"}}}checkEmail(e){var t=this.element.value;if(""==t)return this.element.classList.remove("is-invalid"),this.element.classList.remove("is-valid"),void this.element.setCustomValidity("");var n=this.element.dataset.originalValue.toLowerCase();if(t.toLowerCase()==n)return this.element.classList.add("is-valid"),void this.element.classList.remove("is-invalid");var r=this.urlValue+"?nostack=yes&email="+encodeURIComponent(t);fetch(r,this.optionsForFetch()).then((e=>e.json())).then((e=>{e?(this.element.classList.add("is-invalid"),this.element.classList.remove("is-valid"),this.element.setCustomValidity("This email address is already taken.")):(this.element.classList.add("is-valid"),this.element.classList.remove("is-invalid"),this.element.setCustomValidity(""))}))}}window.Controllers||(window.Controllers={}),window.Controllers["member-unique-email"]=i},251:function(e,t){t.read=function(e,t,n,r,i){var a,s,o=8*i-r-1,l=(1<<o)-1,u=l>>1,c=-7,d=n?i-1:0,h=n?-1:1,p=e[t+d];for(d+=h,a=p&(1<<-c)-1,p>>=-c,c+=o;c>0;a=256*a+e[t+d],d+=h,c-=8);for(s=a&(1<<-c)-1,a>>=-c,c+=r;c>0;s=256*s+e[t+d],d+=h,c-=8);if(0===a)a=1-u;else{if(a===l)return s?NaN:1/0*(p?-1:1);s+=Math.pow(2,r),a-=u}return(p?-1:1)*s*Math.pow(2,a-r)},t.write=function(e,t,n,r,i,a){var s,o,l,u=8*a-i-1,c=(1<<u)-1,d=c>>1,h=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:a-1,f=r?1:-1,g=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(o=isNaN(t)?1:0,s=c):(s=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-s))<1&&(s--,l*=2),(t+=s+d>=1?h/l:h*Math.pow(2,1-d))*l>=2&&(s++,l/=2),s+d>=c?(o=0,s=c):s+d>=1?(o=(t*l-1)*Math.pow(2,i),s+=d):(o=t*Math.pow(2,d-1)*Math.pow(2,i),s=0));i>=8;e[n+p]=255&o,p+=f,o/=256,i-=8);for(s=s<<i|o,u+=i;u>0;e[n+p]=255&s,p+=f,s/=256,u-=8);e[n+p-f]|=128*g}},318:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{allCheckboxes;connect(){const e=this.element.querySelector(".form-check.form-switch").cloneNode(!0);e.querySelector('input[type="checkbox"]').setAttribute("data-select-all","true"),e.querySelector('input[type="checkbox"]').setAttribute("aria-label","Select All"),e.querySelector("label").innerText="Select All";const t=this.element.querySelector(".form-check.form-switch");t.parentNode.insertBefore(e,t),this.allCheckboxes=this.element.querySelectorAll('input[type="checkbox"]'),this.allCheckboxes.forEach((e=>{e.addEventListener("change",this.updateSelectAll.bind(this))}))}updateSelectAll(e){const t=this.element.querySelector('input[type="checkbox"][data-select-all]');if(e.target===t)this.allCheckboxes.forEach((e=>{e!==t&&(e.checked=t.checked)}));else{const e=Array.from(this.allCheckboxes).every((e=>e.checked&&e!==t));t.checked=e}}}window.Controllers||(window.Controllers={}),window.Controllers["select-all-switch"]=i},1154:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["deputyDescBlock","deputyDesc","id","emailAddress","emailAddressBlock"];static outlets=["outlet-btn"];setId(e){this.idTarget.value=e.detail.id,this.deputyDescTarget.value=e.detail.deputy_description,this.emailAddressTarget.value=e.detail.email_address,"1"==e.detail.is_deputy?(this.deputyDescBlockTarget.classList.remove("d-none"),this.deputyDescTarget.value=e.detail.deputy_description.replace(/:/g,"").trim()):this.deputyDescBlockTarget.classList.add("d-none"),""!=e.detail.email_address?this.emailAddressBlockTarget.classList.remove("d-none"):this.emailAddressBlockTarget.classList.add("d-none")}outletBtnOutletConnected(e,t){e.addListener(this.setId.bind(this))}outletBtnOutletDisconnected(e){e.removeListener(this.setId.bind(this))}}window.Controllers||(window.Controllers={}),window.Controllers["officers-edit-officer"]=i},1275:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["rowCheckbox"];static outlets=["outlet-btn"];checked(e){let t=[];this.outletBtnOutlet.btnDataValue={},this.rowCheckboxTargets.forEach((e=>{e.checked&&t.push(e.value)})),t.length>0&&(this.outletBtnOutlet.btnDataValue={ids:t})}connect(){}}window.Controllers||(window.Controllers={}),window.Controllers["awards-rec-table"]=i},1436:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["new","formValue","displayList"];initialize(){this.items=[]}add(e){if(e.preventDefault(),!this.newTarget.value)return;if(this.items.includes(this.newTarget.value))return;let t=this.newTarget.value;this.items.push(t),this.createListItem(KMP_utils.sanitizeString(t)),this.formValueTarget.value=JSON.stringify(this.items),this.newTarget.value=""}remove(e){e.preventDefault();let t=e.target.getAttribute("data-id");this.items=this.items.filter((e=>e!==t)),this.formValueTarget.value=JSON.stringify(this.items),e.target.parentElement.remove()}connect(){this.formValueTarget.value&&this.formValueTarget.value.length>0&&(this.items=JSON.parse(this.formValueTarget.value),this.items.forEach((e=>{this.createListItem(e)})))}createListItem(e){let t=document.createElement("button");t.innerHTML="Remove",t.setAttribute("data-action","awards-award-form#remove"),t.setAttribute("data-id",e),t.setAttribute("class","btn btn-danger btn-sm"),t.setAttribute("type","button");let n=document.createElement("div");n.setAttribute("class","input-group mb-1");let r=document.createElement("span");r.innerHTML=e,r.setAttribute("class","form-control"),n.appendChild(r),n.appendChild(t),this.displayListTarget.appendChild(n)}}window.Controllers||(window.Controllers={}),window.Controllers["awards-award-form"]=i},1446:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["warrantPeriods","departments","showBtn"];checkEnable(){this.warrantPeriodsTarget.value>0&&this.departmentsTarget.value>0?this.showBtnTarget.disabled=!1:this.showBtnTarget.disabled=!0}connect(){}}window.Controllers||(window.Controllers={}),window.Controllers["officer-roster-search"]=i},1654:function(e,t,n){"use strict";var r=n(8287).hp;!function(){try{if(typeof document<"u"){var e=document.createElement("style");e.appendChild(document.createTextNode('@font-face{font-family:Material Icons Outlined;font-style:normal;font-weight:400;font-display:block;src:url(data:font/woff2;base64,) format("woff2"),url(data:font/woff;base64,) format("woff")}.material-icons-outlined{font-family:Material Icons Outlined;font-weight:400;font-style:normal;font-size:24px;line-height:1;letter-spacing:normal;text-transform:none;display:inline-block;white-space:nowrap;word-wrap:normal;direction:ltr;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-rendering:optimizeLegibility;font-feature-settings:"liga"}.guifierObjectContainerbody{display:grid;grid-template-columns:1fr 1fr;grid-gap:var(--primary-grid-gap);padding:var(--primary-padding)}.guifierObjectLabelContainer{display:flex}.guifierObjectFieldContainer{position:relative}.guifierObjectLabelTextPart{display:flex;justify-content:flex-start;align-items:center;gap:5px;transition:.3s;transform-origin:left bottom;transform:translateY(0);font-weight:700}.guifierDescriptionSymbol{display:flex;justify-content:center;align-items:center;border-radius:100%;border:var(--second-border);width:20px;height:20px;font-size:small;font-weight:bolder;color:var(--second-color);cursor:pointer}.descriptionTooltipRefrence{position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none}.guifierObjectLabelContainer:hover~.guifierDescriptionTooltip{opacity:1}.guifierObjectFieldContainer:hover>.guifierObjectLabelContainer>.guifierObjectLabelTextPart{transform:translateY(-7px)}.guifierObjectLabelButtonsPart{position:relative}.fieldButtons{position:absolute;display:flex;z-index:1;gap:5px;bottom:0px;left:0;padding-bottom:3px;padding-left:10px;pointer-events:none}.fieldButtons>*{color:var(--third-color);border:var(--second-border);padding:5px;border-radius:100%;opacity:0;transform:translateY(75%);transition:.2s ease;cursor:pointer;font-size:large}.guifierMainWrapper{position:relative;height:100%}.guifierContainer{display:flex;flex-direction:column;height:100%;border:var(--primary-border);border-radius:var(--primary-border-radius)}.guifierContainerHeader{position:relative;display:flex;justify-content:space-between;font-size:larger;color:var(--third-color);padding:var(--header-horizontal-padding) var(--primary-grid-gap);padding-right:15px}.guifierContainerHeader .guifierDescriptionTooltip{width:95%}.guifierContainerHeader:hover .guifierDescriptionTooltip{opacity:1}.guifierContainerHeaderButtons{display:flex;align-items:center;font-size:xx-large;gap:10px}.guifierContainerHeaderButtons>*{font-size:25px;cursor:pointer;opacity:0;transform:translateY(75%);transition:.2s ease}.guifierContainerCollapseButton{opacity:1;transform:translateY(0)}.guifierContainerHeaderKeyName{display:flex;align-items:center;gap:5px;font-weight:700}.guifierEmptyContentContianer{display:flex;flex-direction:row;grid-column:span 2;height:175px}.emptyContentContianerWrapper{display:flex;flex-direction:column;justify-content:center;align-items:center;flex:1;padding:0px var(--primary-padding);grid-column:span 2}.guifierArrayContainerbody .emptyContentContianerWrapper{padding:var(--primary-padding)}.guifierEmptyTitle{margin:0;color:var(--third-color);font-size:large}.guifierEmptyParagraph{text-align:center;max-width:375px;margin-top:7.5px;margin-bottom:7.5px;color:#00000080;font-size:medium}.guifierEmptyButton{display:flex;align-items:center;gap:5px;background-color:var(--primary-color);padding:5px 10px 5px 19px;border-radius:var(--primary-border-radius);color:#fff;cursor:pointer;font-weight:700;font-size:small;margin-top:15px}.guifierEmptyButton:hover{background-color:#1d5dffec;background:linear-gradient(rgba(255,255,255,.1),rgba(255,255,255,.1)),linear-gradient(var(--primary-color),var(--primary-color))}.guifierObjectLabelContainer{color:var(--third-color);font-size:medium;margin:3px}.guifierDialogBackgroundContainer{position:absolute;display:flex;justify-content:center;align-items:center;background-color:#ffffff80;top:0;bottom:0;width:100%;height:100%;z-index:1000;transition:.15s;opacity:1;backdrop-filter:blur(2px);border-radius:var(--primary-border-radius);padding:20px}.guifierDialogContainer{display:flex;flex-direction:column;justify-content:space-between;width:100%;height:100%;max-width:450px;max-height:550px;background-color:#fff;box-shadow:#fff 0 0 100px;border:var(--primary-border);border-radius:var(--primary-border-radius)}.guifierDialogContainerTitle{position:relative;display:flex;justify-content:center;align-items:center;font-size:larger;border-bottom:var(--primary-border);padding:15px;gap:5px}.guifierDialogContainerBody{overflow:auto;flex:1}.guifierDialogFooter{display:flex;justify-content:space-evenly;gap:20px;padding:15px;border-top:var(--primary-border)}.guifierDialogButton{display:flex;justify-content:center;align-items:center;padding:12.5px 35px;border-radius:var(--primary-border-radius);cursor:pointer;font-size:15px;font-weight:700}.guifierDialogCancelButton{border:var(--primary-border);background-color:var(--fourth-color);color:var(--third-color)}.guifierDialogCancelButton:hover{background-color:#eeeff3}.guifierDialogConfirmButton{background-color:var(--primary-color);color:#fff}.guifierDialogConfirmButton:hover{background-color:#366fff}.guifierArrayContainerbody{display:flex;flex-direction:column;flex:1;overflow-x:hidden}.guifierArrayFieldContainer{display:flex;align-items:stretch;transition:.15s;border-bottom:1px solid rgba(0,0,0,.075);padding-right:var(--primary-padding);opacity:1;height:100%}.guifierArrayfieldInnerContainer{display:flex;align-items:center;flex:1;width:100%;margin-bottom:var(--second-padding);margin-top:var(--second-padding)}.guifierArrayCollapsibleElement{display:flex;align-items:center;flex:1;justify-content:space-between;height:100%;color:var(--third-color)}.guifierFieldLabelName{display:flex;align-items:center;font-size:larger;height:45px}.guifierArrayLabelContainer{position:relative;display:flex;height:100%;flex-direction:column;align-items:center;justify-content:flex-start;transform:translate(-50%);padding-right:var(--primary-border-width)}.guifierArrayLabelContainerForUpperLevel{transform:none;width:70px}.guifierArrayLabelLineForUpperLevel{position:absolute;width:50%;transform:translate(-50%);border-bottom:var(--primary-dashed-border);margin-left:6px;margin-top:calc(var(--primary-padding) + 12.5px)}.guifierArrayIndexLabel{position:relative;z-index:1;display:flex;justify-content:center;align-items:center;height:35px;width:35px;margin-top:15px;background-color:#fff;border:var(--primary-border);border-radius:100%;color:var(--third-color);background-color:var(--fourth-color);font-weight:700}.guifierArrayMainContainerbody{display:flex}.guifierArrayLevelsContainer{display:flex;height:100%}.guifierArrayLevelElement{width:35px;height:100%;background-color:transparent;border-right:var(--primary-dashed-border)}.guifierArrayLevelElement:first-of-type{width:35px;height:100%;background-color:transparent;border-right:var(--primary-dashed-border)}.guifierCollapsibleElementContent{display:flex;position:relative;z-index:1;height:100%;border-bottom:1px solid rgba(0,0,0,.075)}.guifierCollapsibleElementInnerContentContainer{padding:20px 20px 20px 35px;flex:1}.guifierArrayFieldDeleteButton{display:flex;align-items:flex-start;color:var(--third-color);width:0px;padding-left:0;transition:.3s;opacity:0;cursor:pointer;margin-top:var(--primary-padding)}.guifierArrayFieldContainer:hover .guifierArrayFieldDeleteButton{padding-left:var(--second-padding);width:34px;opacity:1}.guifierContainerFieldType{height:66px}.guifierTextField{padding:7.5px 15px;border-radius:var(--primary-border-radius);border:var(--primary-border);outline:3px solid transparent;transition:.15s;width:100%;height:45px;font-size:medium}.guifierTextField:focus{border:2px solid var(--primary-color);outline:3px solid var(--second-color)}.guifierNumberInputContainer{display:flex;gap:6px;position:relative;flex:1}.guifierNumberField{padding:7.5px 15px;border-radius:var(--primary-border-radius);border:var(--primary-border);outline:3px solid transparent;transition:.15s;width:100%;height:45px;font-size:medium}.guifierNumberField:focus{border:2px solid var(--primary-color);outline:3px solid var(--second-color)}.guifierNumberField::-webkit-inner-spin-button,.guifierNumberField::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.guifierNumberField{appearance:textfield;-moz-appearance:textfield}.guifierButtonsContainer{display:flex;flex-direction:column-reverse;flex:1}.guifierNumberButton{display:flex;flex:1;justify-content:center;align-items:center;width:30px;color:#888e9d;cursor:pointer;border:var(--primary-border)}.guifierNumberButton:first-child{border-radius:0 0 var(--primary-border-radius) var(--primary-border-radius)}.guifierNumberButton:last-child{border-radius:var(--primary-border-radius) var(--primary-border-radius) 0 0;border-bottom:none}.guifierNumberButton span{font-size:small}.guifierBooleanField{display:flex;gap:2px;height:45px;padding:4px;border:var(--primary-border);border-radius:var(--primary-border-radius);width:fit-content;color:#00000080;overflow:hidden;font-size:medium}.guifierBooleanElement{display:flex;justify-content:center;align-items:center;padding:0 10px;border-radius:var(--primary-border-radius);border:2px solid transparent;transition:.15s;cursor:pointer}.guifierBooleanTrueElementSelect{background-color:#bcffc3;border:2px solid #A0E4A7}.guifierBooleanFalseElementSelect{background-color:#ffbcbc;border:2px solid #E4A0A0}.guifierNullField{display:flex;align-items:center;justify-content:center;color:#888e9d;border-radius:var(--primary-border-radius);border:var(--primary-border);height:45px;width:fit-content;padding:20px;gap:7.5px}.guifierCardsContainer{display:grid;grid-template-columns:1fr 1fr;gap:10px}.guifierCard{box-sizing:content-box!important;display:flex;flex-direction:column;justify-content:center;align-items:center;border:var(--primary-border);border-radius:var(--primary-border-radius);padding:15px;height:75px;cursor:pointer;transition:.15s;outline:3px solid transparent}.guifierCard:hover{border-color:#00000040;background-color:#00000006}.cardIconElement .material-icons-outlined{font-size:40px!important;color:#000000bf}.guifierSelectedCard{border-color:var(--primary-color)!important;outline:3px solid var(--second-color)}.cardTextElement{margin-top:10px}:root{--primary-color: #1D5EFF;--second-color: #B7C7F2;--third-color: #575757;--fourth-color: #F5F7FB;--fifth-color: #FFFFFF;--sixth-color: #CDD0DE;--primary-padding: 20px;--second-padding: 10px;--primary-grid-gap: 20px;--header-horizontal-padding: 15px;--primary-border-radius: 10px;--primary-border-width: 2px;--primary-border: var(--primary-border-width) solid var(--sixth-color);--second-border: 1px solid var(--sixth-color);--primary-dashed-border: var(--primary-border-width) dashed var(--sixth-color);--primary-selected-border: var(--primary-border-width) solid #1D5EFF}.guifierMainWrapper *,.guifierErrorContainer *{box-sizing:border-box;font-family:Roboto,Arial,Helvetica,sans-serif}.material-icons-outlined{font-family:Material Icons Outlined}.material-icons-outlined::selection{background-color:transparent}.guifierFullHeight{height:100%}.guifierHeightZero{height:0!important}.guifierPrimaryBgColor{background-color:var(--fourth-color)}.guifierSecondaryBgColor{background-color:var(--fifth-color)}.guifierPrimaryMarginTop{margin-top:var(--primary-padding)}.guifierPrimaryMarginBottom{margin-bottom:var(--primary-padding)}.guifierPrimaryTextColor{color:var(--third-color)}.guifierPrimaryTextMediumSize{font-size:medium}.guifierRotate{transform:rotate(180deg)}.guifierPrimaryBottomBorder{border-bottom:var(--primary-border)}.guifierNoneDisplay{display:none!important}.guifierOddBackground{background-color:#49494909}.guifierOpacityZero{opacity:0;pointer-events:none}.guifierShowElementWithAnimation{opacity:1;transform:translateY(0)}.guifierRemovePadding{padding:0!important}.guifierErrorContainer{background-color:#ff00001a;border-radius:var(--primary-border-radius);border:2px solid rgba(255,0,0,.25);height:100%}.guifierErrorContainerError{border-bottom:2px solid rgba(255,0,0,.25);padding:var(--primary-padding);font-weight:700;color:maroon}.guifierErrorContainerContent{padding:var(--primary-padding);font-weight:700;color:#b60000}.guifierDescriptionTooltip{position:absolute;bottom:15px;left:15px;width:100%;background-color:#fff;opacity:0;height:fit-content;font-weight:400;font-size:medium;z-index:1;transition:.25s;pointer-events:none;color:var(--third-color);border-radius:var(--primary-border-radius)}.guifierDescriptionTooltip .descriptionHeader{display:flex;align-items:center;gap:7.5px;border:var(--primary-border);padding:7.5px;border-radius:var(--primary-border-radius) var(--primary-border-radius) 0 0;font-weight:700}.guifierDescriptionTooltip .descriptionHeader .guifierDescriptionSymbol{color:#00000080;border-color:#00000080}.guifierDescriptionTooltip .descriptionHeader .descriptionFieldType{color:#7b68ee}.guifierDescriptionTooltip .descriptionBody{border:var(--primary-border);border-top:none;padding:var(--second-padding);border-radius:0 0 var(--primary-border-radius) var(--primary-border-radius)}')),document.head.appendChild(e)}}catch(e){console.error("vite-plugin-css-injected-by-js",e)}}();var i=Object.defineProperty,a=(e,t,n)=>(((e,t,n)=>{t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n})(e,"symbol"!=typeof t?t+"":t,n),n),s=(e,t,n)=>{if(!t.has(e))throw TypeError("Cannot "+n)},o=(e,t,n)=>(s(e,t,"read from private field"),n?n.call(e):t.get(e)),l=(e,t,n)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,n)},u=(e,t,n,r)=>(s(e,t,"write to private field"),r?r.call(e,n):t.set(e,n),n),c=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function d(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var h,p,f={exports:{}};h=f,p=function(){function e(e,t){return null!=t&&e instanceof t}var t,n,i;try{t=Map}catch{t=function(){}}try{n=Set}catch{n=function(){}}try{i=Promise}catch{i=function(){}}function a(s,l,u,c,d){"object"==typeof l&&(u=l.depth,c=l.prototype,d=l.includeNonEnumerable,l=l.circular);var h=[],p=[],f=typeof r<"u";return typeof l>"u"&&(l=!0),typeof u>"u"&&(u=1/0),function s(u,g){if(null===u)return null;if(0===g)return u;var m,v;if("object"!=typeof u)return u;if(e(u,t))m=new t;else if(e(u,n))m=new n;else if(e(u,i))m=new i((function(e,t){u.then((function(t){e(s(t,g-1))}),(function(e){t(s(e,g-1))}))}));else if(a.__isArray(u))m=[];else if(a.__isRegExp(u))m=new RegExp(u.source,o(u)),u.lastIndex&&(m.lastIndex=u.lastIndex);else if(a.__isDate(u))m=new Date(u.getTime());else{if(f&&r.isBuffer(u))return m=r.allocUnsafe?r.allocUnsafe(u.length):new r(u.length),u.copy(m),m;e(u,Error)?m=Object.create(u):typeof c>"u"?(v=Object.getPrototypeOf(u),m=Object.create(v)):(m=Object.create(c),v=c)}if(l){var y=h.indexOf(u);if(-1!=y)return p[y];h.push(u),p.push(m)}for(var b in e(u,t)&&u.forEach((function(e,t){var n=s(t,g-1),r=s(e,g-1);m.set(n,r)})),e(u,n)&&u.forEach((function(e){var t=s(e,g-1);m.add(t)})),u){var w;v&&(w=Object.getOwnPropertyDescriptor(v,b)),(!w||null!=w.set)&&(m[b]=s(u[b],g-1))}if(Object.getOwnPropertySymbols){var x=Object.getOwnPropertySymbols(u);for(b=0;b<x.length;b++){var k=x[b];(A=Object.getOwnPropertyDescriptor(u,k))&&!A.enumerable&&!d||(m[k]=s(u[k],g-1),A.enumerable||Object.defineProperty(m,k,{enumerable:!1}))}}if(d){var T=Object.getOwnPropertyNames(u);for(b=0;b<T.length;b++){var A,C=T[b];(A=Object.getOwnPropertyDescriptor(u,C))&&A.enumerable||(m[C]=s(u[C],g-1),Object.defineProperty(m,C,{enumerable:!1}))}}return m}(s,u)}function s(e){return Object.prototype.toString.call(e)}function o(e){var t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),t}return a.clonePrototype=function(e){if(null===e)return null;var t=function(){};return t.prototype=e,new t},a.__objToStr=s,a.__isDate=function(e){return"object"==typeof e&&"[object Date]"===s(e)},a.__isArray=function(e){return"object"==typeof e&&"[object Array]"===s(e)},a.__isRegExp=function(e){return"object"==typeof e&&"[object RegExp]"===s(e)},a.__getRegExpFlags=o,a}(),h.exports&&(h.exports=p);const g=d(f.exports);var m={},v={};!function(e){const t=":A-Za-z_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD",n="["+t+"]["+(t+"\\-.\\d\\u00B7\\u0300-\\u036F\\u203F-\\u2040")+"]*",r=new RegExp("^"+n+"$");e.isExist=function(e){return typeof e<"u"},e.isEmptyObject=function(e){return 0===Object.keys(e).length},e.merge=function(e,t,n){if(t){const r=Object.keys(t),i=r.length;for(let a=0;a<i;a++)e[r[a]]="strict"===n?[t[r[a]]]:t[r[a]]}},e.getValue=function(t){return e.isExist(t)?t:""},e.isName=function(e){const t=r.exec(e);return!(null===t||typeof t>"u")},e.getAllMatches=function(e,t){const n=[];let r=t.exec(e);for(;r;){const i=[];i.startIndex=t.lastIndex-r[0].length;const a=r.length;for(let e=0;e<a;e++)i.push(r[e]);n.push(i),r=t.exec(e)}return n},e.nameRegexp=n}(v);const y=v,b={allowBooleanAttributes:!1,unpairedTags:[]};function w(e){return" "===e||"\t"===e||"\n"===e||"\r"===e}function x(e,t){const n=t;for(;t<e.length;t++)if("?"==e[t]||" "==e[t]){const r=e.substr(n,t-n);if(t>5&&"xml"===r)return I("InvalidXml","XML declaration allowed only at the start of the document.",D(e,t));if("?"==e[t]&&">"==e[t+1]){t++;break}continue}return t}function k(e,t){if(e.length>t+5&&"-"===e[t+1]&&"-"===e[t+2]){for(t+=3;t<e.length;t++)if("-"===e[t]&&"-"===e[t+1]&&">"===e[t+2]){t+=2;break}}else if(e.length>t+8&&"D"===e[t+1]&&"O"===e[t+2]&&"C"===e[t+3]&&"T"===e[t+4]&&"Y"===e[t+5]&&"P"===e[t+6]&&"E"===e[t+7]){let n=1;for(t+=8;t<e.length;t++)if("<"===e[t])n++;else if(">"===e[t]&&(n--,0===n))break}else if(e.length>t+9&&"["===e[t+1]&&"C"===e[t+2]&&"D"===e[t+3]&&"A"===e[t+4]&&"T"===e[t+5]&&"A"===e[t+6]&&"["===e[t+7])for(t+=8;t<e.length;t++)if("]"===e[t]&&"]"===e[t+1]&&">"===e[t+2]){t+=2;break}return t}m.validate=function(e,t){t=Object.assign({},b,t);const n=[];let r=!1,i=!1;"\ufeff"===e[0]&&(e=e.substr(1));for(let a=0;a<e.length;a++)if("<"===e[a]&&"?"===e[a+1]){if(a+=2,a=x(e,a),a.err)return a}else{if("<"!==e[a]){if(w(e[a]))continue;return I("InvalidChar","char '"+e[a]+"' is not expected.",D(e,a))}{let s=a;if(a++,"!"===e[a]){a=k(e,a);continue}{let o=!1;"/"===e[a]&&(o=!0,a++);let l="";for(;a<e.length&&">"!==e[a]&&" "!==e[a]&&"\t"!==e[a]&&"\n"!==e[a]&&"\r"!==e[a];a++)l+=e[a];if(l=l.trim(),"/"===l[l.length-1]&&(l=l.substring(0,l.length-1),a--),!R(l)){let t;return t=0===l.trim().length?"Invalid space after '<'.":"Tag '"+l+"' is an invalid name.",I("InvalidTag",t,D(e,a))}const u=C(e,a);if(!1===u)return I("InvalidAttr","Attributes for '"+l+"' have open quote.",D(e,a));let c=u.value;if(a=u.index,"/"===c[c.length-1]){const n=a-c.length;c=c.substring(0,c.length-1);const i=S(c,t);if(!0!==i)return I(i.err.code,i.err.msg,D(e,n+i.err.line));r=!0}else if(o){if(!u.tagClosed)return I("InvalidTag","Closing tag '"+l+"' doesn't have proper closing.",D(e,a));if(c.trim().length>0)return I("InvalidTag","Closing tag '"+l+"' can't have attributes or invalid starting.",D(e,s));{const t=n.pop();if(l!==t.tagName){let n=D(e,t.tagStartPos);return I("InvalidTag","Expected closing tag '"+t.tagName+"' (opened in line "+n.line+", col "+n.col+") instead of closing tag '"+l+"'.",D(e,s))}0==n.length&&(i=!0)}}else{const o=S(c,t);if(!0!==o)return I(o.err.code,o.err.msg,D(e,a-c.length+o.err.line));if(!0===i)return I("InvalidXml","Multiple possible root nodes found.",D(e,a));-1!==t.unpairedTags.indexOf(l)||n.push({tagName:l,tagStartPos:s}),r=!0}for(a++;a<e.length;a++)if("<"===e[a]){if("!"===e[a+1]){a++,a=k(e,a);continue}if("?"!==e[a+1])break;if(a=x(e,++a),a.err)return a}else if("&"===e[a]){const t=O(e,a);if(-1==t)return I("InvalidChar","char '&' is not expected.",D(e,a));a=t}else if(!0===i&&!w(e[a]))return I("InvalidXml","Extra text at the end",D(e,a));"<"===e[a]&&a--}}}return r?1==n.length?I("InvalidTag","Unclosed tag '"+n[0].tagName+"'.",D(e,n[0].tagStartPos)):!(n.length>0)||I("InvalidXml","Invalid '"+JSON.stringify(n.map((e=>e.tagName)),null,4).replace(/\r?\n/g,"")+"' found.",{line:1,col:1}):I("InvalidXml","Start tag expected.",1)};const T='"',A="'";function C(e,t){let n="",r="",i=!1;for(;t<e.length;t++){if(e[t]===T||e[t]===A)""===r?r=e[t]:r!==e[t]||(r="");else if(">"===e[t]&&""===r){i=!0;break}n+=e[t]}return""===r&&{value:n,index:t,tagClosed:i}}const E=new RegExp("(\\s*)([^\\s=]+)(\\s*=)?(\\s*(['\"])(([\\s\\S])*?)\\5)?","g");function S(e,t){const n=y.getAllMatches(e,E),r={};for(let e=0;e<n.length;e++){if(0===n[e][1].length)return I("InvalidAttr","Attribute '"+n[e][2]+"' has no space in starting.",N(n[e]));if(void 0!==n[e][3]&&void 0===n[e][4])return I("InvalidAttr","Attribute '"+n[e][2]+"' is without value.",N(n[e]));if(void 0===n[e][3]&&!t.allowBooleanAttributes)return I("InvalidAttr","boolean attribute '"+n[e][2]+"' is not allowed.",N(n[e]));const i=n[e][2];if(!B(i))return I("InvalidAttr","Attribute '"+i+"' is an invalid name.",N(n[e]));if(r.hasOwnProperty(i))return I("InvalidAttr","Attribute '"+i+"' is repeated.",N(n[e]));r[i]=1}return!0}function O(e,t){if(";"===e[++t])return-1;if("#"===e[t])return function(e,t){let n=/\d/;for("x"===e[t]&&(t++,n=/[\da-fA-F]/);t<e.length;t++){if(";"===e[t])return t;if(!e[t].match(n))break}return-1}(e,++t);let n=0;for(;t<e.length;t++,n++)if(!(e[t].match(/\w/)&&n<20)){if(";"===e[t])break;return-1}return t}function I(e,t,n){return{err:{code:e,msg:t,line:n.line||n,col:n.col}}}function B(e){return y.isName(e)}function R(e){return y.isName(e)}function D(e,t){const n=e.substring(0,t).split(/\r?\n/);return{line:n.length,col:n[n.length-1].length+1}}function N(e){return e.startIndex+e[1].length}var L={};const U={preserveOrder:!1,attributeNamePrefix:"@_",attributesGroupName:!1,textNodeName:"#text",ignoreAttributes:!0,removeNSPrefix:!1,allowBooleanAttributes:!1,parseTagValue:!0,parseAttributeValue:!1,trimValues:!0,cdataPropName:!1,numberParseOptions:{hex:!0,leadingZeros:!0,eNotation:!0},tagValueProcessor:function(e,t){return t},attributeValueProcessor:function(e,t){return t},stopNodes:[],alwaysCreateTextNode:!1,isArray:()=>!1,commentPropName:!1,unpairedTags:[],processEntities:!0,htmlEntities:!1,ignoreDeclaration:!1,ignorePiTags:!1,transformTagName:!1,transformAttributeName:!1,updateTag:function(e,t,n){return e}};L.buildOptions=function(e){return Object.assign({},U,e)},L.defaultOptions=U;var P=class{constructor(e){this.tagname=e,this.child=[],this[":@"]={}}add(e,t){"__proto__"===e&&(e="#__proto__"),this.child.push({[e]:t})}addChild(e){"__proto__"===e.tagname&&(e.tagname="#__proto__"),e[":@"]&&Object.keys(e[":@"]).length>0?this.child.push({[e.tagname]:e.child,":@":e[":@"]}):this.child.push({[e.tagname]:e.child})}};const V=v;function j(e,t){let n="";for(;t<e.length&&"'"!==e[t]&&'"'!==e[t];t++)n+=e[t];if(n=n.trim(),-1!==n.indexOf(" "))throw new Error("External entites are not supported");const r=e[t++];let i="";for(;t<e.length&&e[t]!==r;t++)i+=e[t];return[n,i,t]}function F(e,t){return"!"===e[t+1]&&"-"===e[t+2]&&"-"===e[t+3]}function J(e,t){return"!"===e[t+1]&&"E"===e[t+2]&&"N"===e[t+3]&&"T"===e[t+4]&&"I"===e[t+5]&&"T"===e[t+6]&&"Y"===e[t+7]}function Z(e,t){return"!"===e[t+1]&&"E"===e[t+2]&&"L"===e[t+3]&&"E"===e[t+4]&&"M"===e[t+5]&&"E"===e[t+6]&&"N"===e[t+7]&&"T"===e[t+8]}function M(e,t){return"!"===e[t+1]&&"A"===e[t+2]&&"T"===e[t+3]&&"T"===e[t+4]&&"L"===e[t+5]&&"I"===e[t+6]&&"S"===e[t+7]&&"T"===e[t+8]}function W(e,t){return"!"===e[t+1]&&"N"===e[t+2]&&"O"===e[t+3]&&"T"===e[t+4]&&"A"===e[t+5]&&"T"===e[t+6]&&"I"===e[t+7]&&"O"===e[t+8]&&"N"===e[t+9]}function q(e){if(V.isName(e))return e;throw new Error(`Invalid entity name ${e}`)}var X=function(e,t){const n={};if("O"!==e[t+3]||"C"!==e[t+4]||"T"!==e[t+5]||"Y"!==e[t+6]||"P"!==e[t+7]||"E"!==e[t+8])throw new Error("Invalid Tag instead of DOCTYPE");{t+=9;let r=1,i=!1,a=!1,s="";for(;t<e.length;t++)if("<"!==e[t]||a)if(">"===e[t]){if(a?"-"===e[t-1]&&"-"===e[t-2]&&(a=!1,r--):r--,0===r)break}else"["===e[t]?i=!0:s+=e[t];else{if(i&&J(e,t))t+=7,[entityName,val,t]=j(e,t+1),-1===val.indexOf("&")&&(n[q(entityName)]={regx:RegExp(`&${entityName};`,"g"),val:val});else if(i&&Z(e,t))t+=8;else if(i&&M(e,t))t+=8;else if(i&&W(e,t))t+=9;else{if(!F)throw new Error("Invalid DOCTYPE");a=!0}r++,s=""}if(0!==r)throw new Error("Unclosed DOCTYPE")}return{entities:n,i:t}};const z=/^[-+]?0x[a-fA-F0-9]+$/,K=/^([\-\+])?(0*)(\.[0-9]+([eE]\-?[0-9]+)?|[0-9]+(\.[0-9]+([eE]\-?[0-9]+)?)?)$/;!Number.parseInt&&window.parseInt&&(Number.parseInt=window.parseInt),!Number.parseFloat&&window.parseFloat&&(Number.parseFloat=window.parseFloat);const Y={hex:!0,leadingZeros:!0,decimalPoint:".",eNotation:!0};var G=function(e,t={}){if(t=Object.assign({},Y,t),!e||"string"!=typeof e)return e;let n=e.trim();if(void 0!==t.skipLike&&t.skipLike.test(n))return e;if(t.hex&&z.test(n))return Number.parseInt(n,16);{const r=K.exec(n);if(r){const i=r[1],a=r[2];let s=function(e){return e&&-1!==e.indexOf(".")&&(e=e.replace(/0+$/,""),"."===e?e="0":"."===e[0]?e="0"+e:"."===e[e.length-1]&&(e=e.substr(0,e.length-1))),e}(r[3]);const o=r[4]||r[6];if(!t.leadingZeros&&a.length>0&&i&&"."!==n[2])return e;if(!t.leadingZeros&&a.length>0&&!i&&"."!==n[1])return e;{const r=Number(n),l=""+r;return-1!==l.search(/[eE]/)||o?t.eNotation?r:e:-1!==n.indexOf(".")?"0"===l&&""===s||l===s||i&&l==="-"+s?r:e:a?s===l||i+s===l?r:e:n===l||n===i+l?r:e}}return e}};const Q=v,H=P,_=X,$=G;"<((!\\[CDATA\\[([\\s\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\/)(NAME)\\s*>))([^<]*)".replace(/NAME/g,Q.nameRegexp);function ee(e){const t=Object.keys(e);for(let n=0;n<t.length;n++){const r=t[n];this.lastEntities[r]={regex:new RegExp("&"+r+";","g"),val:e[r]}}}function te(e,t,n,r,i,a,s){if(void 0!==e&&(this.options.trimValues&&!r&&(e=e.trim()),e.length>0)){s||(e=this.replaceEntitiesValue(e));const r=this.options.tagValueProcessor(t,e,n,i,a);return null==r?e:typeof r!=typeof e||r!==e?r:this.options.trimValues||e.trim()===e?pe(e,this.options.parseTagValue,this.options.numberParseOptions):e}}function ne(e){if(this.options.removeNSPrefix){const t=e.split(":"),n="/"===e.charAt(0)?"/":"";if("xmlns"===t[0])return"";2===t.length&&(e=n+t[1])}return e}const re=new RegExp("([^\\s=]+)\\s*(=\\s*(['\"])([\\s\\S]*?)\\3)?","gm");function ie(e,t,n){if(!this.options.ignoreAttributes&&"string"==typeof e){const n=Q.getAllMatches(e,re),r=n.length,i={};for(let e=0;e<r;e++){const r=this.resolveNameSpace(n[e][1]);let a=n[e][4],s=this.options.attributeNamePrefix+r;if(r.length)if(this.options.transformAttributeName&&(s=this.options.transformAttributeName(s)),"__proto__"===s&&(s="#__proto__"),void 0!==a){this.options.trimValues&&(a=a.trim()),a=this.replaceEntitiesValue(a);const e=this.options.attributeValueProcessor(r,a,t);i[s]=null==e?a:typeof e!=typeof a||e!==a?e:pe(a,this.options.parseAttributeValue,this.options.numberParseOptions)}else this.options.allowBooleanAttributes&&(i[s]=!0)}if(!Object.keys(i).length)return;if(this.options.attributesGroupName){const e={};return e[this.options.attributesGroupName]=i,e}return i}}const ae=function(e){e=e.replace(/\r\n?/g,"\n");const t=new H("!xml");let n=t,r="",i="";for(let a=0;a<e.length;a++)if("<"===e[a])if("/"===e[a+1]){const t=ce(e,">",a,"Closing Tag is not closed.");let s=e.substring(a+2,t).trim();if(this.options.removeNSPrefix){const e=s.indexOf(":");-1!==e&&(s=s.substr(e+1))}this.options.transformTagName&&(s=this.options.transformTagName(s)),n&&(r=this.saveTextToParentTag(r,n,i));const o=i.substring(i.lastIndexOf(".")+1);if(s&&-1!==this.options.unpairedTags.indexOf(s))throw new Error(`Unpaired tag can not be used as closing tag: </${s}>`);let l=0;o&&-1!==this.options.unpairedTags.indexOf(o)?(l=i.lastIndexOf(".",i.lastIndexOf(".")-1),this.tagsNodeStack.pop()):l=i.lastIndexOf("."),i=i.substring(0,l),n=this.tagsNodeStack.pop(),r="",a=t}else if("?"===e[a+1]){let t=de(e,a,!1,"?>");if(!t)throw new Error("Pi Tag is not closed.");if(r=this.saveTextToParentTag(r,n,i),!(this.options.ignoreDeclaration&&"?xml"===t.tagName||this.options.ignorePiTags)){const e=new H(t.tagName);e.add(this.options.textNodeName,""),t.tagName!==t.tagExp&&t.attrExpPresent&&(e[":@"]=this.buildAttributesMap(t.tagExp,i,t.tagName)),this.addChild(n,e,i)}a=t.closeIndex+1}else if("!--"===e.substr(a+1,3)){const t=ce(e,"--\x3e",a+4,"Comment is not closed.");if(this.options.commentPropName){const s=e.substring(a+4,t-2);r=this.saveTextToParentTag(r,n,i),n.add(this.options.commentPropName,[{[this.options.textNodeName]:s}])}a=t}else if("!D"===e.substr(a+1,2)){const t=_(e,a);this.docTypeEntities=t.entities,a=t.i}else if("!["===e.substr(a+1,2)){const t=ce(e,"]]>",a,"CDATA is not closed.")-2,s=e.substring(a+9,t);if(r=this.saveTextToParentTag(r,n,i),this.options.cdataPropName)n.add(this.options.cdataPropName,[{[this.options.textNodeName]:s}]);else{let e=this.parseTextData(s,n.tagname,i,!0,!1,!0);null==e&&(e=""),n.add(this.options.textNodeName,e)}a=t+2}else{let s=de(e,a,this.options.removeNSPrefix),o=s.tagName,l=s.tagExp,u=s.attrExpPresent,c=s.closeIndex;this.options.transformTagName&&(o=this.options.transformTagName(o)),n&&r&&"!xml"!==n.tagname&&(r=this.saveTextToParentTag(r,n,i,!1));const d=n;if(d&&-1!==this.options.unpairedTags.indexOf(d.tagname)&&(n=this.tagsNodeStack.pop(),i=i.substring(0,i.lastIndexOf("."))),o!==t.tagname&&(i+=i?"."+o:o),this.isItStopNode(this.options.stopNodes,i,o)){let t="";if(l.length>0&&l.lastIndexOf("/")===l.length-1)a=s.closeIndex;else if(-1!==this.options.unpairedTags.indexOf(o))a=s.closeIndex;else{const n=this.readStopNodeData(e,o,c+1);if(!n)throw new Error(`Unexpected end of ${o}`);a=n.i,t=n.tagContent}const r=new H(o);o!==l&&u&&(r[":@"]=this.buildAttributesMap(l,i,o)),t&&(t=this.parseTextData(t,o,i,!0,u,!0,!0)),i=i.substr(0,i.lastIndexOf(".")),r.add(this.options.textNodeName,t),this.addChild(n,r,i)}else{if(l.length>0&&l.lastIndexOf("/")===l.length-1){"/"===o[o.length-1]?(o=o.substr(0,o.length-1),i=i.substr(0,i.length-1),l=o):l=l.substr(0,l.length-1),this.options.transformTagName&&(o=this.options.transformTagName(o));const e=new H(o);o!==l&&u&&(e[":@"]=this.buildAttributesMap(l,i,o)),this.addChild(n,e,i),i=i.substr(0,i.lastIndexOf("."))}else{const e=new H(o);this.tagsNodeStack.push(n),o!==l&&u&&(e[":@"]=this.buildAttributesMap(l,i,o)),this.addChild(n,e,i),n=e}r="",a=c}}else r+=e[a];return t.child};function se(e,t,n){const r=this.options.updateTag(t.tagname,n,t[":@"]);!1===r||("string"==typeof r&&(t.tagname=r),e.addChild(t))}const oe=function(e){if(this.options.processEntities){for(let t in this.docTypeEntities){const n=this.docTypeEntities[t];e=e.replace(n.regx,n.val)}for(let t in this.lastEntities){const n=this.lastEntities[t];e=e.replace(n.regex,n.val)}if(this.options.htmlEntities)for(let t in this.htmlEntities){const n=this.htmlEntities[t];e=e.replace(n.regex,n.val)}e=e.replace(this.ampEntity.regex,this.ampEntity.val)}return e};function le(e,t,n,r){return e&&(void 0===r&&(r=0===Object.keys(t.child).length),void 0!==(e=this.parseTextData(e,t.tagname,n,!1,!!t[":@"]&&0!==Object.keys(t[":@"]).length,r))&&""!==e&&t.add(this.options.textNodeName,e),e=""),e}function ue(e,t,n){const r="*."+n;for(const n in e){const i=e[n];if(r===i||t===i)return!0}return!1}function ce(e,t,n,r){const i=e.indexOf(t,n);if(-1===i)throw new Error(r);return i+t.length-1}function de(e,t,n,r=">"){const i=function(e,t,n=">"){let r,i="";for(let a=t;a<e.length;a++){let t=e[a];if(r)t===r&&(r="");else if('"'===t||"'"===t)r=t;else if(t===n[0]){if(!n[1])return{data:i,index:a};if(e[a+1]===n[1])return{data:i,index:a}}else"\t"===t&&(t=" ");i+=t}}(e,t+1,r);if(!i)return;let a=i.data;const s=i.index,o=a.search(/\s/);let l=a,u=!0;if(-1!==o&&(l=a.substr(0,o).replace(/\s\s*$/,""),a=a.substr(o+1)),n){const e=l.indexOf(":");-1!==e&&(l=l.substr(e+1),u=l!==i.data.substr(e+1))}return{tagName:l,tagExp:a,closeIndex:s,attrExpPresent:u}}function he(e,t,n){const r=n;let i=1;for(;n<e.length;n++)if("<"===e[n])if("/"===e[n+1]){const a=ce(e,">",n,`${t} is not closed`);if(e.substring(n+2,a).trim()===t&&(i--,0===i))return{tagContent:e.substring(r,n),i:a};n=a}else if("?"===e[n+1])n=ce(e,"?>",n+1,"StopNode is not closed.");else if("!--"===e.substr(n+1,3))n=ce(e,"--\x3e",n+3,"StopNode is not closed.");else if("!["===e.substr(n+1,2))n=ce(e,"]]>",n,"StopNode is not closed.")-2;else{const r=de(e,n,">");r&&((r&&r.tagName)===t&&"/"!==r.tagExp[r.tagExp.length-1]&&i++,n=r.closeIndex)}}function pe(e,t,n){if(t&&"string"==typeof e){const t=e.trim();return"true"===t||"false"!==t&&$(e,n)}return Q.isExist(e)?e:""}var fe=class{constructor(e){this.options=e,this.currentNode=null,this.tagsNodeStack=[],this.docTypeEntities={},this.lastEntities={apos:{regex:/&(apos|#39|#x27);/g,val:"'"},gt:{regex:/&(gt|#62|#x3E);/g,val:">"},lt:{regex:/&(lt|#60|#x3C);/g,val:"<"},quot:{regex:/&(quot|#34|#x22);/g,val:'"'}},this.ampEntity={regex:/&(amp|#38|#x26);/g,val:"&"},this.htmlEntities={space:{regex:/&(nbsp|#160);/g,val:" "},cent:{regex:/&(cent|#162);/g,val:"¢"},pound:{regex:/&(pound|#163);/g,val:"£"},yen:{regex:/&(yen|#165);/g,val:"¥"},euro:{regex:/&(euro|#8364);/g,val:"€"},copyright:{regex:/&(copy|#169);/g,val:"©"},reg:{regex:/&(reg|#174);/g,val:"®"},inr:{regex:/&(inr|#8377);/g,val:"₹"}},this.addExternalEntities=ee,this.parseXml=ae,this.parseTextData=te,this.resolveNameSpace=ne,this.buildAttributesMap=ie,this.isItStopNode=ue,this.replaceEntitiesValue=oe,this.readStopNodeData=he,this.saveTextToParentTag=le,this.addChild=se}},ge={};function me(e,t,n){let r;const i={};for(let a=0;a<e.length;a++){const s=e[a],o=ve(s);let l="";if(l=void 0===n?o:n+"."+o,o===t.textNodeName)void 0===r?r=s[o]:r+=""+s[o];else{if(void 0===o)continue;if(s[o]){let e=me(s[o],t,l);const n=be(e,t);s[":@"]?ye(e,s[":@"],l,t):1!==Object.keys(e).length||void 0===e[t.textNodeName]||t.alwaysCreateTextNode?0===Object.keys(e).length&&(t.alwaysCreateTextNode?e[t.textNodeName]="":e=""):e=e[t.textNodeName],void 0!==i[o]&&i.hasOwnProperty(o)?(Array.isArray(i[o])||(i[o]=[i[o]]),i[o].push(e)):t.isArray(o,l,n)?i[o]=[e]:i[o]=e}}}return"string"==typeof r?r.length>0&&(i[t.textNodeName]=r):void 0!==r&&(i[t.textNodeName]=r),i}function ve(e){const t=Object.keys(e);for(let e=0;e<t.length;e++){const n=t[e];if(":@"!==n)return n}}function ye(e,t,n,r){if(t){const i=Object.keys(t),a=i.length;for(let s=0;s<a;s++){const a=i[s];r.isArray(a,n+"."+a,!0,!0)?e[a]=[t[a]]:e[a]=t[a]}}}function be(e,t){const{textNodeName:n}=t,r=Object.keys(e).length;return!(0!==r&&(1!==r||!e[n]&&"boolean"!=typeof e[n]&&0!==e[n]))}ge.prettify=function(e,t){return me(e,t)};const{buildOptions:we}=L,xe=fe,{prettify:ke}=ge,Te=m;var Ae=class{constructor(e){this.externalEntities={},this.options=we(e)}parse(e,t){if("string"!=typeof e){if(!e.toString)throw new Error("XML data is accepted in String or Bytes[] form.");e=e.toString()}if(t){!0===t&&(t={});const n=Te.validate(e,t);if(!0!==n)throw Error(`${n.err.msg}:${n.err.line}:${n.err.col}`)}const n=new xe(this.options);n.addExternalEntities(this.externalEntities);const r=n.parseXml(e);return this.options.preserveOrder||void 0===r?r:ke(r,this.options)}addEntity(e,t){if(-1!==t.indexOf("&"))throw new Error("Entity value can't have '&'");if(-1!==e.indexOf("&")||-1!==e.indexOf(";"))throw new Error("An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'");if("&"===t)throw new Error("An entity with value '&' is not permitted");this.externalEntities[e]=t}};function Ce(e,t,n,r){let i="",a=!1;for(let s=0;s<e.length;s++){const o=e[s],l=Ee(o);let u="";if(u=0===n.length?l:`${n}.${l}`,l===t.textNodeName){let e=o[l];Oe(u,t)||(e=t.tagValueProcessor(l,e),e=Ie(e,t)),a&&(i+=r),i+=e,a=!1;continue}if(l===t.cdataPropName){a&&(i+=r),i+=`<![CDATA[${o[l][0][t.textNodeName]}]]>`,a=!1;continue}if(l===t.commentPropName){i+=r+`\x3c!--${o[l][0][t.textNodeName]}--\x3e`,a=!0;continue}if("?"===l[0]){const e=Se(o[":@"],t),n="?xml"===l?"":r;let s=o[l][0][t.textNodeName];s=0!==s.length?" "+s:"",i+=n+`<${l}${s}${e}?>`,a=!0;continue}let c=r;""!==c&&(c+=t.indentBy);const d=r+`<${l}${Se(o[":@"],t)}`,h=Ce(o[l],t,u,c);-1!==t.unpairedTags.indexOf(l)?t.suppressUnpairedNode?i+=d+">":i+=d+"/>":h&&0!==h.length||!t.suppressEmptyNode?h&&h.endsWith(">")?i+=d+`>${h}${r}</${l}>`:(i+=d+">",h&&""!==r&&(h.includes("/>")||h.includes("</"))?i+=r+t.indentBy+h+r:i+=h,i+=`</${l}>`):i+=d+"/>",a=!0}return i}function Ee(e){const t=Object.keys(e);for(let e=0;e<t.length;e++){const n=t[e];if(":@"!==n)return n}}function Se(e,t){let n="";if(e&&!t.ignoreAttributes)for(let r in e){let i=t.attributeValueProcessor(r,e[r]);i=Ie(i,t),!0===i&&t.suppressBooleanAttributes?n+=` ${r.substr(t.attributeNamePrefix.length)}`:n+=` ${r.substr(t.attributeNamePrefix.length)}="${i}"`}return n}function Oe(e,t){let n=(e=e.substr(0,e.length-t.textNodeName.length-1)).substr(e.lastIndexOf(".")+1);for(let r in t.stopNodes)if(t.stopNodes[r]===e||t.stopNodes[r]==="*."+n)return!0;return!1}function Ie(e,t){if(e&&e.length>0&&t.processEntities)for(let n=0;n<t.entities.length;n++){const r=t.entities[n];e=e.replace(r.regex,r.val)}return e}var Be=function(e,t){let n="";return t.format&&t.indentBy.length>0&&(n="\n"),Ce(e,t,"",n)};const Re=Be,De={attributeNamePrefix:"@_",attributesGroupName:!1,textNodeName:"#text",ignoreAttributes:!0,cdataPropName:!1,format:!1,indentBy:"  ",suppressEmptyNode:!1,suppressUnpairedNode:!0,suppressBooleanAttributes:!0,tagValueProcessor:function(e,t){return t},attributeValueProcessor:function(e,t){return t},preserveOrder:!1,commentPropName:!1,unpairedTags:[],entities:[{regex:new RegExp("&","g"),val:"&amp;"},{regex:new RegExp(">","g"),val:"&gt;"},{regex:new RegExp("<","g"),val:"&lt;"},{regex:new RegExp("'","g"),val:"&apos;"},{regex:new RegExp('"',"g"),val:"&quot;"}],processEntities:!0,stopNodes:[],oneListGroup:!1};function Ne(e){this.options=Object.assign({},De,e),this.options.ignoreAttributes||this.options.attributesGroupName?this.isAttribute=function(){return!1}:(this.attrPrefixLen=this.options.attributeNamePrefix.length,this.isAttribute=Pe),this.processTextOrObjNode=Le,this.options.format?(this.indentate=Ue,this.tagEndChar=">\n",this.newLine="\n"):(this.indentate=function(){return""},this.tagEndChar=">",this.newLine="")}function Le(e,t,n){const r=this.j2x(e,n+1);return void 0!==e[this.options.textNodeName]&&1===Object.keys(e).length?this.buildTextValNode(e[this.options.textNodeName],t,r.attrStr,n):this.buildObjectNode(r.val,t,r.attrStr,n)}function Ue(e){return this.options.indentBy.repeat(e)}function Pe(e){return!!e.startsWith(this.options.attributeNamePrefix)&&e.substr(this.attrPrefixLen)}Ne.prototype.build=function(e){return this.options.preserveOrder?Re(e,this.options):(Array.isArray(e)&&this.options.arrayNodeName&&this.options.arrayNodeName.length>1&&(e={[this.options.arrayNodeName]:e}),this.j2x(e,0).val)},Ne.prototype.j2x=function(e,t){let n="",r="";for(let i in e)if(!(typeof e[i]>"u"))if(null===e[i])"?"===i[0]?r+=this.indentate(t)+"<"+i+"?"+this.tagEndChar:r+=this.indentate(t)+"<"+i+"/"+this.tagEndChar;else if(e[i]instanceof Date)r+=this.buildTextValNode(e[i],i,"",t);else if("object"!=typeof e[i]){const a=this.isAttribute(i);if(a)n+=this.buildAttrPairStr(a,""+e[i]);else if(i===this.options.textNodeName){let t=this.options.tagValueProcessor(i,""+e[i]);r+=this.replaceEntitiesValue(t)}else r+=this.buildTextValNode(e[i],i,"",t)}else if(Array.isArray(e[i])){const n=e[i].length;let a="";for(let s=0;s<n;s++){const n=e[i][s];typeof n>"u"||(null===n?"?"===i[0]?r+=this.indentate(t)+"<"+i+"?"+this.tagEndChar:r+=this.indentate(t)+"<"+i+"/"+this.tagEndChar:"object"==typeof n?this.options.oneListGroup?a+=this.j2x(n,t+1).val:a+=this.processTextOrObjNode(n,i,t):a+=this.buildTextValNode(n,i,"",t))}this.options.oneListGroup&&(a=this.buildObjectNode(a,i,"",t)),r+=a}else if(this.options.attributesGroupName&&i===this.options.attributesGroupName){const t=Object.keys(e[i]),r=t.length;for(let a=0;a<r;a++)n+=this.buildAttrPairStr(t[a],""+e[i][t[a]])}else r+=this.processTextOrObjNode(e[i],i,t);return{attrStr:n,val:r}},Ne.prototype.buildAttrPairStr=function(e,t){return t=this.options.attributeValueProcessor(e,""+t),t=this.replaceEntitiesValue(t),this.options.suppressBooleanAttributes&&"true"===t?" "+e:" "+e+'="'+t+'"'},Ne.prototype.buildObjectNode=function(e,t,n,r){if(""===e)return"?"===t[0]?this.indentate(r)+"<"+t+n+"?"+this.tagEndChar:this.indentate(r)+"<"+t+n+this.closeTag(t)+this.tagEndChar;{let i="</"+t+this.tagEndChar,a="";return"?"===t[0]&&(a="?",i=""),n&&-1===e.indexOf("<")?this.indentate(r)+"<"+t+n+a+">"+e+i:!1!==this.options.commentPropName&&t===this.options.commentPropName&&0===a.length?this.indentate(r)+`\x3c!--${e}--\x3e`+this.newLine:this.indentate(r)+"<"+t+n+a+this.tagEndChar+e+this.indentate(r)+i}},Ne.prototype.closeTag=function(e){let t="";return-1!==this.options.unpairedTags.indexOf(e)?this.options.suppressUnpairedNode||(t="/"):t=this.options.suppressEmptyNode?"/":`></${e}`,t},Ne.prototype.buildTextValNode=function(e,t,n,r){if(!1!==this.options.cdataPropName&&t===this.options.cdataPropName)return this.indentate(r)+`<![CDATA[${e}]]>`+this.newLine;if(!1!==this.options.commentPropName&&t===this.options.commentPropName)return this.indentate(r)+`\x3c!--${e}--\x3e`+this.newLine;if("?"===t[0])return this.indentate(r)+"<"+t+n+"?"+this.tagEndChar;{let i=this.options.tagValueProcessor(t,e);return i=this.replaceEntitiesValue(i),""===i?this.indentate(r)+"<"+t+n+this.closeTag(t)+this.tagEndChar:this.indentate(r)+"<"+t+n+">"+i+"</"+t+this.tagEndChar}},Ne.prototype.replaceEntitiesValue=function(e){if(e&&e.length>0&&this.options.processEntities)for(let t=0;t<this.options.entities.length;t++){const n=this.options.entities[t];e=e.replace(n.regex,n.val)}return e};var Ve={XMLParser:Ae,XMLValidator:m,XMLBuilder:Ne};class je extends Error{constructor(e,t){const[n,r]=function(e,t){let n=e.slice(0,t).split(/\r\n|\n|\r/g);return[n.length,n.pop().length+1]}(t.toml,t.ptr),i=function(e,t,n){let r=e.split(/\r\n|\n|\r/g),i="",a=1+(0|Math.log10(t+1));for(let e=t-1;e<=t+1;e++){let s=r[e-1];s&&(i+=e.toString().padEnd(a," "),i+=":  ",i+=s,i+="\n",e===t&&(i+=" ".repeat(a+n+2),i+="^\n"))}return i}(t.toml,n,r);super(`Invalid TOML document: ${e}\n\n${i}`,t),a(this,"line"),a(this,"column"),a(this,"codeblock"),this.line=n,this.column=r,this.codeblock=i}}function Fe(e,t=0,n=e.length){let r=e.indexOf("\n",t);return"\r"===e[r-1]&&r--,r<=n?r:-1}function Je(e,t){for(let n=t;n<e.length;n++){let r=e[n];if("\n"===r)return n;if("\r"===r&&"\n"===e[n+1])return n+1;if(r<" "&&"\t"!==r||""===r)throw new je("control characters are not allowed in comments",{toml:e,ptr:t})}return e.length}function Ze(e,t,n,r){let i;for(;" "===(i=e[t])||"\t"===i||!n&&("\n"===i||"\r"===i&&"\n"===e[t+1]);)t++;return r||"#"!==i?t:Ze(e,Je(e,t),n)}function Me(e,t,n,r,i=!1){if(!r)return(t=Fe(e,t))<0?e.length:t;for(let a=t;a<e.length;a++){let t=e[a];if("#"===t)a=Fe(e,a);else{if(t===n)return a+1;if(t===r)return a;if(i&&("\n"===t||"\r"===t&&"\n"===e[a+1]))return a}}throw new je("cannot find end of structure",{toml:e,ptr:t})}function We(e,t){let n=e[t],r=n===e[t+1]&&e[t+1]===e[t+2]?e.slice(t,t+3):n;t+=r.length-1;do{t=e.indexOf(r,++t)}while(t>-1&&"'"!==n&&"\\"===e[t-1]&&"\\"!==e[t-2]);return t>-1&&(t+=r.length,r.length>1&&(e[t]===n&&t++,e[t]===n&&t++)),t}let qe=/^(\d{4}-\d{2}-\d{2})?[T ]?(?:(\d{2}):\d{2}:\d{2}(?:\.\d+)?)?(Z|[-+]\d{2}:\d{2})?$/i;var Xe,ze,Ke;const Ye=class extends Date{constructor(e){let t=!0,n=!0,r="Z";if("string"==typeof e){let i=e.match(qe);i?(i[1]||(t=!1,e=`0000-01-01T${e}`),n=!!i[2],i[2]&&+i[2]>23?e="":(r=i[3]||null,e=e.toUpperCase(),!r&&n&&(e+="Z"))):e=""}super(e),l(this,Xe,!1),l(this,ze,!1),l(this,Ke,null),isNaN(this.getTime())||(u(this,Xe,t),u(this,ze,n),u(this,Ke,r))}isDateTime(){return o(this,Xe)&&o(this,ze)}isLocal(){return!o(this,Xe)||!o(this,ze)||!o(this,Ke)}isDate(){return o(this,Xe)&&!o(this,ze)}isTime(){return o(this,ze)&&!o(this,Xe)}isValid(){return o(this,Xe)||o(this,ze)}toISOString(){let e=super.toISOString();if(this.isDate())return e.slice(0,10);if(this.isTime())return e.slice(11,23);if(null===o(this,Ke))return e.slice(0,-1);if("Z"===o(this,Ke))return e;let t=60*+o(this,Ke).slice(1,3)+ +o(this,Ke).slice(4,6);return t="-"===o(this,Ke)[0]?t:-t,new Date(this.getTime()-6e4*t).toISOString().slice(0,-1)+o(this,Ke)}static wrapAsOffsetDateTime(e,t="Z"){let n=new Ye(e);return u(n,Ke,t),n}static wrapAsLocalDateTime(e){let t=new Ye(e);return u(t,Ke,null),t}static wrapAsLocalDate(e){let t=new Ye(e);return u(t,ze,!1),u(t,Ke,null),t}static wrapAsLocalTime(e){let t=new Ye(e);return u(t,Xe,!1),u(t,Ke,null),t}};let Ge=Ye;Xe=new WeakMap,ze=new WeakMap,Ke=new WeakMap;let Qe=/^((0x[0-9a-fA-F](_?[0-9a-fA-F])*)|(([+-]|0[ob])?\d(_?\d)*))$/,He=/^[+-]?\d(_?\d)*(\.\d(_?\d)*)?([eE][+-]?\d(_?\d)*)?$/,_e=/^[+-]?0[0-9_]/,$e=/^[0-9a-f]{4,8}$/i,et={b:"\b",t:"\t",n:"\n",f:"\f",r:"\r",'"':'"',"\\":"\\"};function tt(e,t=0,n=e.length){let r="'"===e[t],i=e[t++]===e[t]&&e[t]===e[t+1];i&&(n-=2,"\r"===e[t+=2]&&t++,"\n"===e[t]&&t++);let a,s=0,o="",l=t;for(;t<n-1;){let n=e[t++];if("\n"===n||"\r"===n&&"\n"===e[t]){if(!i)throw new je("newlines are not allowed in strings",{toml:e,ptr:t-1})}else if(n<" "&&"\t"!==n||""===n)throw new je("control characters are not allowed in strings",{toml:e,ptr:t-1});if(a){if(a=!1,"u"===n||"U"===n){let r=e.slice(t,t+="u"===n?4:8);if(!$e.test(r))throw new je("invalid unicode escape",{toml:e,ptr:s});try{o+=String.fromCodePoint(parseInt(r,16))}catch{throw new je("invalid unicode escape",{toml:e,ptr:s})}}else if(!i||"\n"!==n&&" "!==n&&"\t"!==n&&"\r"!==n){if(!(n in et))throw new je("unrecognized escape sequence",{toml:e,ptr:s});o+=et[n]}else{if("\n"!==e[t=Ze(e,t-1,!0)]&&"\r"!==e[t])throw new je("invalid escape: only line-ending whitespace may be escaped",{toml:e,ptr:s});t=Ze(e,t)}l=t}else!r&&"\\"===n&&(s=t-1,a=!0,o+=e.slice(l,s))}return o+e.slice(l,n-1)}function nt(e,t,n){if("true"===e)return!0;if("false"===e)return!1;if("-inf"===e)return-1/0;if("inf"===e||"+inf"===e)return 1/0;if("nan"===e||"+nan"===e||"-nan"===e)return NaN;if("-0"===e)return 0;let r;if((r=Qe.test(e))||He.test(e)){if(_e.test(e))throw new je("leading zeroes are not allowed",{toml:t,ptr:n});let i=+e.replace(/_/g,"");if(isNaN(i))throw new je("invalid number",{toml:t,ptr:n});if(r&&!Number.isSafeInteger(i))throw new je("integer value cannot be represented losslessly",{toml:t,ptr:n});return i}let i=new Ge(e);if(!i.isValid())throw new je("invalid value",{toml:t,ptr:n});return i}function rt(e,t,n){let r,i=e[t];if("["===i||"{"===i){let[r,a]="["===i?function(e,t){let n,r=[];for(t++;"]"!==(n=e[t++])&&n;){if(","===n)throw new je("expected value, found comma",{toml:e,ptr:t-1});if("#"===n)t=Je(e,t);else if(" "!==n&&"\t"!==n&&"\n"!==n&&"\r"!==n){let n=rt(e,t-1,"]");r.push(n[0]),t=n[1]}}if(!n)throw new je("unfinished array encountered",{toml:e,ptr:t});return[r,t]}(e,t):function(e,t){let n,r={},i=new Set,a=0;for(t++;"}"!==(n=e[t++])&&n;){if("\n"===n)throw new je("newlines are not allowed in inline tables",{toml:e,ptr:t-1});if("#"===n)throw new je("inline tables cannot contain comments",{toml:e,ptr:t-1});if(","===n)throw new je("expected key-value, found comma",{toml:e,ptr:t-1});if(" "!==n&&"\t"!==n){let n,s=r,o=!1,[l,u]=at(e,t-1);for(let r=0;r<l.length;r++){if(r&&(s=o?s[n]:s[n]={}),n=l[r],(o=Object.hasOwn(s,n))&&("object"!=typeof s[n]||i.has(s[n])))throw new je("trying to redefine an already defined value",{toml:e,ptr:t});!o&&"__proto__"===n&&Object.defineProperty(s,n,{enumerable:!0,configurable:!0,writable:!0})}if(o)throw new je("trying to redefine an already defined value",{toml:e,ptr:t});let[c,d]=rt(e,u,"}");i.add(c),s[n]=c,a=","===e[(t=d)-1]?t-1:0}}if(a)throw new je("trailing commas are not allowed in inline tables",{toml:e,ptr:a});if(!n)throw new je("unfinished table encountered",{toml:e,ptr:t});return[r,t]}(e,t),s=Me(e,a,",",n);if("}"===n){let t=Fe(e,a,s);if(t>-1)throw new je("newlines are not allowed in inline tables",{toml:e,ptr:t})}return[r,s]}if('"'===i||"'"===i){r=We(e,t);let i=tt(e,t,r);if(n){if(r=Ze(e,r,"]"!==n),e[r]&&","!==e[r]&&e[r]!==n&&"\n"!==e[r]&&"\r"!==e[r])throw new je("unexpected character encountered",{toml:e,ptr:r});r+=+(","===e[r])}return[i,r]}r=Me(e,t,",",n);let a=function(e,t,n,r){let i=e.slice(t,n),a=i.indexOf("#");a>-1&&(Je(e,a),i=i.slice(0,a));let s=i.trimEnd();if(!r){let n=i.indexOf("\n",s.length);if(n>-1)throw new je("newlines are not allowed in inline tables",{toml:e,ptr:t+n})}return[s,a]}(e,t,r-+(","===e[r-1]),"]"===n);if(!a[0])throw new je("incomplete key-value declaration: no value specified",{toml:e,ptr:t});return n&&a[1]>-1&&(r=Ze(e,t+a[1]),r+=+(","===e[r])),[nt(a[0],e,t),r]}let it=/^[a-zA-Z0-9-_]+[ \t]*$/;function at(e,t,n="="){let r=t-1,i=[],a=e.indexOf(n,t);if(a<0)throw new je("incomplete key-value: cannot find end of key",{toml:e,ptr:t});do{let s=e[t=++r];if(" "!==s&&"\t"!==s)if('"'===s||"'"===s){if(s===e[t+1]&&s===e[t+2])throw new je("multiline strings are not allowed in keys",{toml:e,ptr:t});let o=We(e,t);if(o<0)throw new je("unfinished string encountered",{toml:e,ptr:t});r=e.indexOf(".",o);let l=e.slice(o,r<0||r>a?a:r),u=Fe(l);if(u>-1)throw new je("newlines are not allowed in keys",{toml:e,ptr:t+r+u});if(l.trimStart())throw new je("found extra tokens after the string part",{toml:e,ptr:o});if(a<o&&(a=e.indexOf(n,o),a<0))throw new je("incomplete key-value: cannot find end of key",{toml:e,ptr:t});i.push(tt(e,t,o))}else{r=e.indexOf(".",t);let n=e.slice(t,r<0||r>a?a:r);if(!it.test(n))throw new je("only letter, numbers, dashes and underscores are allowed in keys",{toml:e,ptr:t});i.push(n.trimEnd())}}while(r+1&&r<a);return[i,Ze(e,a+1,!0,!0)]}function st(e,t,n,r){var i,a;let s,o,l=t,u=n,c=!1;for(let t=0;t<e.length;t++){if(t){if(l=c?l[s]:l[s]={},u=(o=u[s]).c,0===r&&(1===o.t||2===o.t))return null;if(2===o.t){let e=l.length-1;l=l[e],u=u[e].c}}if(s=e[t],(c=Object.hasOwn(l,s))&&0===(null==(i=u[s])?void 0:i.t)&&null!=(a=u[s])&&a.d)return null;c||("__proto__"===s&&(Object.defineProperty(l,s,{enumerable:!0,configurable:!0,writable:!0}),Object.defineProperty(u,s,{enumerable:!0,configurable:!0,writable:!0})),u[s]={t:t<e.length-1&&2===r?3:r,d:!1,i:0,c:{}})}if(o=u[s],o.t!==r&&(1!==r||3!==o.t)||(2===r&&(o.d||(o.d=!0,l[s]=[]),l[s].push(l={}),o.c[o.i++]=o={t:1,d:!1,i:0,c:{}}),o.d))return null;if(o.d=!0,1===r)l=c?l[s]:l[s]={};else if(0===r&&c)return null;return[s,l,o.c]}const ot=/^[a-z0-9-_]+$/i;function lt(e){let t=typeof e;if("object"===t){if(Array.isArray(e))return"array";if(e instanceof Date)return"date"}return t}function ut(e){for(let t=0;t<e.length;t++)if("object"!==lt(e[t]))return!1;return 0!=e.length}function ct(e){return JSON.stringify(e).replace(/\x7f/g,"\\u007f")}function dt(e,t=lt(e)){if("number"===t)return isNaN(e)?"nan":e===1/0?"inf":e===-1/0?"-inf":e.toString();if("bigint"===t||"boolean"===t)return e.toString();if("string"===t)return ct(e);if("date"===t){if(isNaN(e.getTime()))throw new TypeError("cannot serialize invalid date");return e.toISOString()}return"object"===t?function(e){let t=Object.keys(e);if(0===t.length)return"{}";let n="{ ";for(let r=0;r<t.length;r++){let i=t[r];r&&(n+=", "),n+=ot.test(i)?i:ct(i),n+=" = ",n+=dt(e[i])}return n+" }"}(e):"array"===t?function(e){if(0===e.length)return"[]";let t="[ ";for(let n=0;n<e.length;n++){if(n&&(t+=", "),null===e[n]||void 0===e[n])throw new TypeError("arrays cannot contain null or undefined values");t+=dt(e[n])}return t+" ]"}(e):void 0}function ht(e,t){let n="";for(let r=0;r<e.length;r++)n+=`[[${t}]]\n`,n+=pt(e[r],t),n+="\n\n";return n}function pt(e,t=""){let n="",r="",i=Object.keys(e);for(let a=0;a<i.length;a++){let s=i[a];if(null!==e[s]&&void 0!==e[s]){let i=lt(e[s]);if("symbol"===i||"function"===i)throw new TypeError(`cannot serialize values of type '${i}'`);let a=ot.test(s)?s:ct(s);if("array"===i&&ut(e[s]))r+=ht(e[s],t?`${t}.${a}`:a);else if("object"===i){let n=t?`${t}.${a}`:a;r+=`[${n}]\n`,r+=pt(e[s],n),r+="\n\n"}else n+=a,n+=" = ",n+=dt(e[s],i),n+="\n"}}return`${n}\n${r}`.trim()}var ft,gt;!function(e){e.assertEqual=e=>e,e.assertIs=function(e){},e.assertNever=function(e){throw new Error},e.arrayToEnum=e=>{const t={};for(const n of e)t[n]=n;return t},e.getValidEnumValues=t=>{const n=e.objectKeys(t).filter((e=>"number"!=typeof t[t[e]])),r={};for(const e of n)r[e]=t[e];return e.objectValues(r)},e.objectValues=t=>e.objectKeys(t).map((function(e){return t[e]})),e.objectKeys="function"==typeof Object.keys?e=>Object.keys(e):e=>{const t=[];for(const n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.push(n);return t},e.find=(e,t)=>{for(const n of e)if(t(n))return n},e.isInteger="function"==typeof Number.isInteger?e=>Number.isInteger(e):e=>"number"==typeof e&&isFinite(e)&&Math.floor(e)===e,e.joinValues=function(e,t=" | "){return e.map((e=>"string"==typeof e?`'${e}'`:e)).join(t)},e.jsonStringifyReplacer=(e,t)=>"bigint"==typeof t?t.toString():t}(ft||(ft={})),function(e){e.mergeShapes=(e,t)=>({...e,...t})}(gt||(gt={}));const mt=ft.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),vt=e=>{switch(typeof e){case"undefined":return mt.undefined;case"string":return mt.string;case"number":return isNaN(e)?mt.nan:mt.number;case"boolean":return mt.boolean;case"function":return mt.function;case"bigint":return mt.bigint;case"symbol":return mt.symbol;case"object":return Array.isArray(e)?mt.array:null===e?mt.null:e.then&&"function"==typeof e.then&&e.catch&&"function"==typeof e.catch?mt.promise:typeof Map<"u"&&e instanceof Map?mt.map:typeof Set<"u"&&e instanceof Set?mt.set:typeof Date<"u"&&e instanceof Date?mt.date:mt.object;default:return mt.unknown}},yt=ft.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]);class bt extends Error{constructor(e){super(),this.issues=[],this.addIssue=e=>{this.issues=[...this.issues,e]},this.addIssues=(e=[])=>{this.issues=[...this.issues,...e]};const t=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,t):this.__proto__=t,this.name="ZodError",this.issues=e}get errors(){return this.issues}format(e){const t=e||function(e){return e.message},n={_errors:[]},r=e=>{for(const i of e.issues)if("invalid_union"===i.code)i.unionErrors.map(r);else if("invalid_return_type"===i.code)r(i.returnTypeError);else if("invalid_arguments"===i.code)r(i.argumentsError);else if(0===i.path.length)n._errors.push(t(i));else{let e=n,r=0;for(;r<i.path.length;){const n=i.path[r];r===i.path.length-1?(e[n]=e[n]||{_errors:[]},e[n]._errors.push(t(i))):e[n]=e[n]||{_errors:[]},e=e[n],r++}}};return r(this),n}toString(){return this.message}get message(){return JSON.stringify(this.issues,ft.jsonStringifyReplacer,2)}get isEmpty(){return 0===this.issues.length}flatten(e=e=>e.message){const t={},n=[];for(const r of this.issues)r.path.length>0?(t[r.path[0]]=t[r.path[0]]||[],t[r.path[0]].push(e(r))):n.push(e(r));return{formErrors:n,fieldErrors:t}}get formErrors(){return this.flatten()}}bt.create=e=>new bt(e);const wt=(e,t)=>{let n;switch(e.code){case yt.invalid_type:n=e.received===mt.undefined?"Required":`Expected ${e.expected}, received ${e.received}`;break;case yt.invalid_literal:n=`Invalid literal value, expected ${JSON.stringify(e.expected,ft.jsonStringifyReplacer)}`;break;case yt.unrecognized_keys:n=`Unrecognized key(s) in object: ${ft.joinValues(e.keys,", ")}`;break;case yt.invalid_union:n="Invalid input";break;case yt.invalid_union_discriminator:n=`Invalid discriminator value. Expected ${ft.joinValues(e.options)}`;break;case yt.invalid_enum_value:n=`Invalid enum value. Expected ${ft.joinValues(e.options)}, received '${e.received}'`;break;case yt.invalid_arguments:n="Invalid function arguments";break;case yt.invalid_return_type:n="Invalid function return type";break;case yt.invalid_date:n="Invalid date";break;case yt.invalid_string:"object"==typeof e.validation?"includes"in e.validation?(n=`Invalid input: must include "${e.validation.includes}"`,"number"==typeof e.validation.position&&(n=`${n} at one or more positions greater than or equal to ${e.validation.position}`)):"startsWith"in e.validation?n=`Invalid input: must start with "${e.validation.startsWith}"`:"endsWith"in e.validation?n=`Invalid input: must end with "${e.validation.endsWith}"`:ft.assertNever(e.validation):n="regex"!==e.validation?`Invalid ${e.validation}`:"Invalid";break;case yt.too_small:n="array"===e.type?`Array must contain ${e.exact?"exactly":e.inclusive?"at least":"more than"} ${e.minimum} element(s)`:"string"===e.type?`String must contain ${e.exact?"exactly":e.inclusive?"at least":"over"} ${e.minimum} character(s)`:"number"===e.type?`Number must be ${e.exact?"exactly equal to ":e.inclusive?"greater than or equal to ":"greater than "}${e.minimum}`:"date"===e.type?`Date must be ${e.exact?"exactly equal to ":e.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(e.minimum))}`:"Invalid input";break;case yt.too_big:n="array"===e.type?`Array must contain ${e.exact?"exactly":e.inclusive?"at most":"less than"} ${e.maximum} element(s)`:"string"===e.type?`String must contain ${e.exact?"exactly":e.inclusive?"at most":"under"} ${e.maximum} character(s)`:"number"===e.type?`Number must be ${e.exact?"exactly":e.inclusive?"less than or equal to":"less than"} ${e.maximum}`:"bigint"===e.type?`BigInt must be ${e.exact?"exactly":e.inclusive?"less than or equal to":"less than"} ${e.maximum}`:"date"===e.type?`Date must be ${e.exact?"exactly":e.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(e.maximum))}`:"Invalid input";break;case yt.custom:n="Invalid input";break;case yt.invalid_intersection_types:n="Intersection results could not be merged";break;case yt.not_multiple_of:n=`Number must be a multiple of ${e.multipleOf}`;break;case yt.not_finite:n="Number must be finite";break;default:n=t.defaultError,ft.assertNever(e)}return{message:n}};let xt=wt;function kt(){return xt}const Tt=e=>{const{data:t,path:n,errorMaps:r,issueData:i}=e,a=[...n,...i.path||[]],s={...i,path:a};let o="";const l=r.filter((e=>!!e)).slice().reverse();for(const e of l)o=e(s,{data:t,defaultError:o}).message;return{...i,path:a,message:i.message||o}};function At(e,t){const n=Tt({issueData:t,data:e.data,path:e.path,errorMaps:[e.common.contextualErrorMap,e.schemaErrorMap,kt(),wt].filter((e=>!!e))});e.common.issues.push(n)}class Ct{constructor(){this.value="valid"}dirty(){"valid"===this.value&&(this.value="dirty")}abort(){"aborted"!==this.value&&(this.value="aborted")}static mergeArray(e,t){const n=[];for(const r of t){if("aborted"===r.status)return Et;"dirty"===r.status&&e.dirty(),n.push(r.value)}return{status:e.value,value:n}}static async mergeObjectAsync(e,t){const n=[];for(const e of t)n.push({key:await e.key,value:await e.value});return Ct.mergeObjectSync(e,n)}static mergeObjectSync(e,t){const n={};for(const r of t){const{key:t,value:i}=r;if("aborted"===t.status||"aborted"===i.status)return Et;"dirty"===t.status&&e.dirty(),"dirty"===i.status&&e.dirty(),(typeof i.value<"u"||r.alwaysSet)&&(n[t.value]=i.value)}return{status:e.value,value:n}}}const Et=Object.freeze({status:"aborted"}),St=e=>({status:"valid",value:e}),Ot=e=>"aborted"===e.status,It=e=>"dirty"===e.status,Bt=e=>"valid"===e.status,Rt=e=>typeof Promise<"u"&&e instanceof Promise;var Dt;!function(e){e.errToObj=e=>"string"==typeof e?{message:e}:e||{},e.toString=e=>"string"==typeof e?e:null==e?void 0:e.message}(Dt||(Dt={}));class Nt{constructor(e,t,n,r){this._cachedPath=[],this.parent=e,this.data=t,this._path=n,this._key=r}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}}const Lt=(e,t)=>{if(Bt(t))return{success:!0,data:t.value};if(!e.common.issues.length)throw new Error("Validation failed but no issues detected.");return{success:!1,get error(){if(this._error)return this._error;const t=new bt(e.common.issues);return this._error=t,this._error}}};function Ut(e){if(!e)return{};const{errorMap:t,invalid_type_error:n,required_error:r,description:i}=e;if(t&&(n||r))throw new Error('Can\'t use "invalid_type_error" or "required_error" in conjunction with custom error map.');return t?{errorMap:t,description:i}:{errorMap:(e,t)=>"invalid_type"!==e.code?{message:t.defaultError}:typeof t.data>"u"?{message:r??t.defaultError}:{message:n??t.defaultError},description:i}}class Pt{constructor(e){this.spa=this.safeParseAsync,this._def=e,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this)}get description(){return this._def.description}_getType(e){return vt(e.data)}_getOrReturnCtx(e,t){return t||{common:e.parent.common,data:e.data,parsedType:vt(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}_processInputParams(e){return{status:new Ct,ctx:{common:e.parent.common,data:e.data,parsedType:vt(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}}_parseSync(e){const t=this._parse(e);if(Rt(t))throw new Error("Synchronous parse encountered promise.");return t}_parseAsync(e){const t=this._parse(e);return Promise.resolve(t)}parse(e,t){const n=this.safeParse(e,t);if(n.success)return n.data;throw n.error}safeParse(e,t){var n;const r={common:{issues:[],async:null!==(n=null==t?void 0:t.async)&&void 0!==n&&n,contextualErrorMap:null==t?void 0:t.errorMap},path:(null==t?void 0:t.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:vt(e)},i=this._parseSync({data:e,path:r.path,parent:r});return Lt(r,i)}async parseAsync(e,t){const n=await this.safeParseAsync(e,t);if(n.success)return n.data;throw n.error}async safeParseAsync(e,t){const n={common:{issues:[],contextualErrorMap:null==t?void 0:t.errorMap,async:!0},path:(null==t?void 0:t.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:vt(e)},r=this._parse({data:e,path:n.path,parent:n}),i=await(Rt(r)?r:Promise.resolve(r));return Lt(n,i)}refine(e,t){const n=e=>"string"==typeof t||typeof t>"u"?{message:t}:"function"==typeof t?t(e):t;return this._refinement(((t,r)=>{const i=e(t),a=()=>r.addIssue({code:yt.custom,...n(t)});return typeof Promise<"u"&&i instanceof Promise?i.then((e=>!!e||(a(),!1))):!!i||(a(),!1)}))}refinement(e,t){return this._refinement(((n,r)=>!!e(n)||(r.addIssue("function"==typeof t?t(n,r):t),!1)))}_refinement(e){return new Tn({schema:this,typeName:Rn.ZodEffects,effect:{type:"refinement",refinement:e}})}superRefine(e){return this._refinement(e)}optional(){return An.create(this,this._def)}nullable(){return Cn.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return on.create(this,this._def)}promise(){return kn.create(this,this._def)}or(e){return cn.create([this,e],this._def)}and(e){return hn.create(this,e,this._def)}transform(e){return new Tn({...Ut(this._def),schema:this,typeName:Rn.ZodEffects,effect:{type:"transform",transform:e}})}default(e){const t="function"==typeof e?e:()=>e;return new En({...Ut(this._def),innerType:this,defaultValue:t,typeName:Rn.ZodDefault})}brand(){return new In({typeName:Rn.ZodBranded,type:this,...Ut(this._def)})}catch(e){const t="function"==typeof e?e:()=>e;return new Sn({...Ut(this._def),innerType:this,catchValue:t,typeName:Rn.ZodCatch})}describe(e){return new(0,this.constructor)({...this._def,description:e})}pipe(e){return Bn.create(this,e)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}}const Vt=/^c[^\s-]{8,}$/i,jt=/^[a-z][a-z0-9]*$/,Ft=/[0-9A-HJKMNP-TV-Z]{26}/,Jt=/^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i,Zt=/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\])|(\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\.[A-Za-z]{2,})+))$/,Mt=/^(\p{Extended_Pictographic}|\p{Emoji_Component})+$/u,Wt=/^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/,qt=/^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,Xt=e=>e.precision?e.offset?new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{${e.precision}}(([+-]\\d{2}(:?\\d{2})?)|Z)$`):new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{${e.precision}}Z$`):0===e.precision?e.offset?new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(([+-]\\d{2}(:?\\d{2})?)|Z)$"):new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$"):e.offset?new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(([+-]\\d{2}(:?\\d{2})?)|Z)$"):new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$");function zt(e,t){return!(("v4"!==t&&t||!Wt.test(e))&&("v6"!==t&&t||!qt.test(e)))}class Kt extends Pt{constructor(){super(...arguments),this._regex=(e,t,n)=>this.refinement((t=>e.test(t)),{validation:t,code:yt.invalid_string,...Dt.errToObj(n)}),this.nonempty=e=>this.min(1,Dt.errToObj(e)),this.trim=()=>new Kt({...this._def,checks:[...this._def.checks,{kind:"trim"}]}),this.toLowerCase=()=>new Kt({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]}),this.toUpperCase=()=>new Kt({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}_parse(e){if(this._def.coerce&&(e.data=String(e.data)),this._getType(e)!==mt.string){const t=this._getOrReturnCtx(e);return At(t,{code:yt.invalid_type,expected:mt.string,received:t.parsedType}),Et}const t=new Ct;let n;for(const r of this._def.checks)if("min"===r.kind)e.data.length<r.value&&(n=this._getOrReturnCtx(e,n),At(n,{code:yt.too_small,minimum:r.value,type:"string",inclusive:!0,exact:!1,message:r.message}),t.dirty());else if("max"===r.kind)e.data.length>r.value&&(n=this._getOrReturnCtx(e,n),At(n,{code:yt.too_big,maximum:r.value,type:"string",inclusive:!0,exact:!1,message:r.message}),t.dirty());else if("length"===r.kind){const i=e.data.length>r.value,a=e.data.length<r.value;(i||a)&&(n=this._getOrReturnCtx(e,n),i?At(n,{code:yt.too_big,maximum:r.value,type:"string",inclusive:!0,exact:!0,message:r.message}):a&&At(n,{code:yt.too_small,minimum:r.value,type:"string",inclusive:!0,exact:!0,message:r.message}),t.dirty())}else if("email"===r.kind)Zt.test(e.data)||(n=this._getOrReturnCtx(e,n),At(n,{validation:"email",code:yt.invalid_string,message:r.message}),t.dirty());else if("emoji"===r.kind)Mt.test(e.data)||(n=this._getOrReturnCtx(e,n),At(n,{validation:"emoji",code:yt.invalid_string,message:r.message}),t.dirty());else if("uuid"===r.kind)Jt.test(e.data)||(n=this._getOrReturnCtx(e,n),At(n,{validation:"uuid",code:yt.invalid_string,message:r.message}),t.dirty());else if("cuid"===r.kind)Vt.test(e.data)||(n=this._getOrReturnCtx(e,n),At(n,{validation:"cuid",code:yt.invalid_string,message:r.message}),t.dirty());else if("cuid2"===r.kind)jt.test(e.data)||(n=this._getOrReturnCtx(e,n),At(n,{validation:"cuid2",code:yt.invalid_string,message:r.message}),t.dirty());else if("ulid"===r.kind)Ft.test(e.data)||(n=this._getOrReturnCtx(e,n),At(n,{validation:"ulid",code:yt.invalid_string,message:r.message}),t.dirty());else if("url"===r.kind)try{new URL(e.data)}catch{n=this._getOrReturnCtx(e,n),At(n,{validation:"url",code:yt.invalid_string,message:r.message}),t.dirty()}else"regex"===r.kind?(r.regex.lastIndex=0,r.regex.test(e.data)||(n=this._getOrReturnCtx(e,n),At(n,{validation:"regex",code:yt.invalid_string,message:r.message}),t.dirty())):"trim"===r.kind?e.data=e.data.trim():"includes"===r.kind?e.data.includes(r.value,r.position)||(n=this._getOrReturnCtx(e,n),At(n,{code:yt.invalid_string,validation:{includes:r.value,position:r.position},message:r.message}),t.dirty()):"toLowerCase"===r.kind?e.data=e.data.toLowerCase():"toUpperCase"===r.kind?e.data=e.data.toUpperCase():"startsWith"===r.kind?e.data.startsWith(r.value)||(n=this._getOrReturnCtx(e,n),At(n,{code:yt.invalid_string,validation:{startsWith:r.value},message:r.message}),t.dirty()):"endsWith"===r.kind?e.data.endsWith(r.value)||(n=this._getOrReturnCtx(e,n),At(n,{code:yt.invalid_string,validation:{endsWith:r.value},message:r.message}),t.dirty()):"datetime"===r.kind?Xt(r).test(e.data)||(n=this._getOrReturnCtx(e,n),At(n,{code:yt.invalid_string,validation:"datetime",message:r.message}),t.dirty()):"ip"===r.kind?zt(e.data,r.version)||(n=this._getOrReturnCtx(e,n),At(n,{validation:"ip",code:yt.invalid_string,message:r.message}),t.dirty()):ft.assertNever(r);return{status:t.value,value:e.data}}_addCheck(e){return new Kt({...this._def,checks:[...this._def.checks,e]})}email(e){return this._addCheck({kind:"email",...Dt.errToObj(e)})}url(e){return this._addCheck({kind:"url",...Dt.errToObj(e)})}emoji(e){return this._addCheck({kind:"emoji",...Dt.errToObj(e)})}uuid(e){return this._addCheck({kind:"uuid",...Dt.errToObj(e)})}cuid(e){return this._addCheck({kind:"cuid",...Dt.errToObj(e)})}cuid2(e){return this._addCheck({kind:"cuid2",...Dt.errToObj(e)})}ulid(e){return this._addCheck({kind:"ulid",...Dt.errToObj(e)})}ip(e){return this._addCheck({kind:"ip",...Dt.errToObj(e)})}datetime(e){var t;return"string"==typeof e?this._addCheck({kind:"datetime",precision:null,offset:!1,message:e}):this._addCheck({kind:"datetime",precision:typeof(null==e?void 0:e.precision)>"u"?null:null==e?void 0:e.precision,offset:null!==(t=null==e?void 0:e.offset)&&void 0!==t&&t,...Dt.errToObj(null==e?void 0:e.message)})}regex(e,t){return this._addCheck({kind:"regex",regex:e,...Dt.errToObj(t)})}includes(e,t){return this._addCheck({kind:"includes",value:e,position:null==t?void 0:t.position,...Dt.errToObj(null==t?void 0:t.message)})}startsWith(e,t){return this._addCheck({kind:"startsWith",value:e,...Dt.errToObj(t)})}endsWith(e,t){return this._addCheck({kind:"endsWith",value:e,...Dt.errToObj(t)})}min(e,t){return this._addCheck({kind:"min",value:e,...Dt.errToObj(t)})}max(e,t){return this._addCheck({kind:"max",value:e,...Dt.errToObj(t)})}length(e,t){return this._addCheck({kind:"length",value:e,...Dt.errToObj(t)})}get isDatetime(){return!!this._def.checks.find((e=>"datetime"===e.kind))}get isEmail(){return!!this._def.checks.find((e=>"email"===e.kind))}get isURL(){return!!this._def.checks.find((e=>"url"===e.kind))}get isEmoji(){return!!this._def.checks.find((e=>"emoji"===e.kind))}get isUUID(){return!!this._def.checks.find((e=>"uuid"===e.kind))}get isCUID(){return!!this._def.checks.find((e=>"cuid"===e.kind))}get isCUID2(){return!!this._def.checks.find((e=>"cuid2"===e.kind))}get isULID(){return!!this._def.checks.find((e=>"ulid"===e.kind))}get isIP(){return!!this._def.checks.find((e=>"ip"===e.kind))}get minLength(){let e=null;for(const t of this._def.checks)"min"===t.kind&&(null===e||t.value>e)&&(e=t.value);return e}get maxLength(){let e=null;for(const t of this._def.checks)"max"===t.kind&&(null===e||t.value<e)&&(e=t.value);return e}}function Yt(e,t){const n=(e.toString().split(".")[1]||"").length,r=(t.toString().split(".")[1]||"").length,i=n>r?n:r;return parseInt(e.toFixed(i).replace(".",""))%parseInt(t.toFixed(i).replace(".",""))/Math.pow(10,i)}Kt.create=e=>{var t;return new Kt({checks:[],typeName:Rn.ZodString,coerce:null!==(t=null==e?void 0:e.coerce)&&void 0!==t&&t,...Ut(e)})};class Gt extends Pt{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf}_parse(e){if(this._def.coerce&&(e.data=Number(e.data)),this._getType(e)!==mt.number){const t=this._getOrReturnCtx(e);return At(t,{code:yt.invalid_type,expected:mt.number,received:t.parsedType}),Et}let t;const n=new Ct;for(const r of this._def.checks)"int"===r.kind?ft.isInteger(e.data)||(t=this._getOrReturnCtx(e,t),At(t,{code:yt.invalid_type,expected:"integer",received:"float",message:r.message}),n.dirty()):"min"===r.kind?(r.inclusive?e.data<r.value:e.data<=r.value)&&(t=this._getOrReturnCtx(e,t),At(t,{code:yt.too_small,minimum:r.value,type:"number",inclusive:r.inclusive,exact:!1,message:r.message}),n.dirty()):"max"===r.kind?(r.inclusive?e.data>r.value:e.data>=r.value)&&(t=this._getOrReturnCtx(e,t),At(t,{code:yt.too_big,maximum:r.value,type:"number",inclusive:r.inclusive,exact:!1,message:r.message}),n.dirty()):"multipleOf"===r.kind?0!==Yt(e.data,r.value)&&(t=this._getOrReturnCtx(e,t),At(t,{code:yt.not_multiple_of,multipleOf:r.value,message:r.message}),n.dirty()):"finite"===r.kind?Number.isFinite(e.data)||(t=this._getOrReturnCtx(e,t),At(t,{code:yt.not_finite,message:r.message}),n.dirty()):ft.assertNever(r);return{status:n.value,value:e.data}}gte(e,t){return this.setLimit("min",e,!0,Dt.toString(t))}gt(e,t){return this.setLimit("min",e,!1,Dt.toString(t))}lte(e,t){return this.setLimit("max",e,!0,Dt.toString(t))}lt(e,t){return this.setLimit("max",e,!1,Dt.toString(t))}setLimit(e,t,n,r){return new Gt({...this._def,checks:[...this._def.checks,{kind:e,value:t,inclusive:n,message:Dt.toString(r)}]})}_addCheck(e){return new Gt({...this._def,checks:[...this._def.checks,e]})}int(e){return this._addCheck({kind:"int",message:Dt.toString(e)})}positive(e){return this._addCheck({kind:"min",value:0,inclusive:!1,message:Dt.toString(e)})}negative(e){return this._addCheck({kind:"max",value:0,inclusive:!1,message:Dt.toString(e)})}nonpositive(e){return this._addCheck({kind:"max",value:0,inclusive:!0,message:Dt.toString(e)})}nonnegative(e){return this._addCheck({kind:"min",value:0,inclusive:!0,message:Dt.toString(e)})}multipleOf(e,t){return this._addCheck({kind:"multipleOf",value:e,message:Dt.toString(t)})}finite(e){return this._addCheck({kind:"finite",message:Dt.toString(e)})}safe(e){return this._addCheck({kind:"min",inclusive:!0,value:Number.MIN_SAFE_INTEGER,message:Dt.toString(e)})._addCheck({kind:"max",inclusive:!0,value:Number.MAX_SAFE_INTEGER,message:Dt.toString(e)})}get minValue(){let e=null;for(const t of this._def.checks)"min"===t.kind&&(null===e||t.value>e)&&(e=t.value);return e}get maxValue(){let e=null;for(const t of this._def.checks)"max"===t.kind&&(null===e||t.value<e)&&(e=t.value);return e}get isInt(){return!!this._def.checks.find((e=>"int"===e.kind||"multipleOf"===e.kind&&ft.isInteger(e.value)))}get isFinite(){let e=null,t=null;for(const n of this._def.checks){if("finite"===n.kind||"int"===n.kind||"multipleOf"===n.kind)return!0;"min"===n.kind?(null===t||n.value>t)&&(t=n.value):"max"===n.kind&&(null===e||n.value<e)&&(e=n.value)}return Number.isFinite(t)&&Number.isFinite(e)}}Gt.create=e=>new Gt({checks:[],typeName:Rn.ZodNumber,coerce:(null==e?void 0:e.coerce)||!1,...Ut(e)});class Qt extends Pt{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte}_parse(e){if(this._def.coerce&&(e.data=BigInt(e.data)),this._getType(e)!==mt.bigint){const t=this._getOrReturnCtx(e);return At(t,{code:yt.invalid_type,expected:mt.bigint,received:t.parsedType}),Et}let t;const n=new Ct;for(const r of this._def.checks)"min"===r.kind?(r.inclusive?e.data<r.value:e.data<=r.value)&&(t=this._getOrReturnCtx(e,t),At(t,{code:yt.too_small,type:"bigint",minimum:r.value,inclusive:r.inclusive,message:r.message}),n.dirty()):"max"===r.kind?(r.inclusive?e.data>r.value:e.data>=r.value)&&(t=this._getOrReturnCtx(e,t),At(t,{code:yt.too_big,type:"bigint",maximum:r.value,inclusive:r.inclusive,message:r.message}),n.dirty()):"multipleOf"===r.kind?e.data%r.value!==BigInt(0)&&(t=this._getOrReturnCtx(e,t),At(t,{code:yt.not_multiple_of,multipleOf:r.value,message:r.message}),n.dirty()):ft.assertNever(r);return{status:n.value,value:e.data}}gte(e,t){return this.setLimit("min",e,!0,Dt.toString(t))}gt(e,t){return this.setLimit("min",e,!1,Dt.toString(t))}lte(e,t){return this.setLimit("max",e,!0,Dt.toString(t))}lt(e,t){return this.setLimit("max",e,!1,Dt.toString(t))}setLimit(e,t,n,r){return new Qt({...this._def,checks:[...this._def.checks,{kind:e,value:t,inclusive:n,message:Dt.toString(r)}]})}_addCheck(e){return new Qt({...this._def,checks:[...this._def.checks,e]})}positive(e){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!1,message:Dt.toString(e)})}negative(e){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!1,message:Dt.toString(e)})}nonpositive(e){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!0,message:Dt.toString(e)})}nonnegative(e){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!0,message:Dt.toString(e)})}multipleOf(e,t){return this._addCheck({kind:"multipleOf",value:e,message:Dt.toString(t)})}get minValue(){let e=null;for(const t of this._def.checks)"min"===t.kind&&(null===e||t.value>e)&&(e=t.value);return e}get maxValue(){let e=null;for(const t of this._def.checks)"max"===t.kind&&(null===e||t.value<e)&&(e=t.value);return e}}Qt.create=e=>{var t;return new Qt({checks:[],typeName:Rn.ZodBigInt,coerce:null!==(t=null==e?void 0:e.coerce)&&void 0!==t&&t,...Ut(e)})};class Ht extends Pt{_parse(e){if(this._def.coerce&&(e.data=!!e.data),this._getType(e)!==mt.boolean){const t=this._getOrReturnCtx(e);return At(t,{code:yt.invalid_type,expected:mt.boolean,received:t.parsedType}),Et}return St(e.data)}}Ht.create=e=>new Ht({typeName:Rn.ZodBoolean,coerce:(null==e?void 0:e.coerce)||!1,...Ut(e)});class _t extends Pt{_parse(e){if(this._def.coerce&&(e.data=new Date(e.data)),this._getType(e)!==mt.date){const t=this._getOrReturnCtx(e);return At(t,{code:yt.invalid_type,expected:mt.date,received:t.parsedType}),Et}if(isNaN(e.data.getTime())){return At(this._getOrReturnCtx(e),{code:yt.invalid_date}),Et}const t=new Ct;let n;for(const r of this._def.checks)"min"===r.kind?e.data.getTime()<r.value&&(n=this._getOrReturnCtx(e,n),At(n,{code:yt.too_small,message:r.message,inclusive:!0,exact:!1,minimum:r.value,type:"date"}),t.dirty()):"max"===r.kind?e.data.getTime()>r.value&&(n=this._getOrReturnCtx(e,n),At(n,{code:yt.too_big,message:r.message,inclusive:!0,exact:!1,maximum:r.value,type:"date"}),t.dirty()):ft.assertNever(r);return{status:t.value,value:new Date(e.data.getTime())}}_addCheck(e){return new _t({...this._def,checks:[...this._def.checks,e]})}min(e,t){return this._addCheck({kind:"min",value:e.getTime(),message:Dt.toString(t)})}max(e,t){return this._addCheck({kind:"max",value:e.getTime(),message:Dt.toString(t)})}get minDate(){let e=null;for(const t of this._def.checks)"min"===t.kind&&(null===e||t.value>e)&&(e=t.value);return null!=e?new Date(e):null}get maxDate(){let e=null;for(const t of this._def.checks)"max"===t.kind&&(null===e||t.value<e)&&(e=t.value);return null!=e?new Date(e):null}}_t.create=e=>new _t({checks:[],coerce:(null==e?void 0:e.coerce)||!1,typeName:Rn.ZodDate,...Ut(e)});class $t extends Pt{_parse(e){if(this._getType(e)!==mt.symbol){const t=this._getOrReturnCtx(e);return At(t,{code:yt.invalid_type,expected:mt.symbol,received:t.parsedType}),Et}return St(e.data)}}$t.create=e=>new $t({typeName:Rn.ZodSymbol,...Ut(e)});class en extends Pt{_parse(e){if(this._getType(e)!==mt.undefined){const t=this._getOrReturnCtx(e);return At(t,{code:yt.invalid_type,expected:mt.undefined,received:t.parsedType}),Et}return St(e.data)}}en.create=e=>new en({typeName:Rn.ZodUndefined,...Ut(e)});class tn extends Pt{_parse(e){if(this._getType(e)!==mt.null){const t=this._getOrReturnCtx(e);return At(t,{code:yt.invalid_type,expected:mt.null,received:t.parsedType}),Et}return St(e.data)}}tn.create=e=>new tn({typeName:Rn.ZodNull,...Ut(e)});class nn extends Pt{constructor(){super(...arguments),this._any=!0}_parse(e){return St(e.data)}}nn.create=e=>new nn({typeName:Rn.ZodAny,...Ut(e)});class rn extends Pt{constructor(){super(...arguments),this._unknown=!0}_parse(e){return St(e.data)}}rn.create=e=>new rn({typeName:Rn.ZodUnknown,...Ut(e)});class an extends Pt{_parse(e){const t=this._getOrReturnCtx(e);return At(t,{code:yt.invalid_type,expected:mt.never,received:t.parsedType}),Et}}an.create=e=>new an({typeName:Rn.ZodNever,...Ut(e)});class sn extends Pt{_parse(e){if(this._getType(e)!==mt.undefined){const t=this._getOrReturnCtx(e);return At(t,{code:yt.invalid_type,expected:mt.void,received:t.parsedType}),Et}return St(e.data)}}sn.create=e=>new sn({typeName:Rn.ZodVoid,...Ut(e)});class on extends Pt{_parse(e){const{ctx:t,status:n}=this._processInputParams(e),r=this._def;if(t.parsedType!==mt.array)return At(t,{code:yt.invalid_type,expected:mt.array,received:t.parsedType}),Et;if(null!==r.exactLength){const e=t.data.length>r.exactLength.value,i=t.data.length<r.exactLength.value;(e||i)&&(At(t,{code:e?yt.too_big:yt.too_small,minimum:i?r.exactLength.value:void 0,maximum:e?r.exactLength.value:void 0,type:"array",inclusive:!0,exact:!0,message:r.exactLength.message}),n.dirty())}if(null!==r.minLength&&t.data.length<r.minLength.value&&(At(t,{code:yt.too_small,minimum:r.minLength.value,type:"array",inclusive:!0,exact:!1,message:r.minLength.message}),n.dirty()),null!==r.maxLength&&t.data.length>r.maxLength.value&&(At(t,{code:yt.too_big,maximum:r.maxLength.value,type:"array",inclusive:!0,exact:!1,message:r.maxLength.message}),n.dirty()),t.common.async)return Promise.all([...t.data].map(((e,n)=>r.type._parseAsync(new Nt(t,e,t.path,n))))).then((e=>Ct.mergeArray(n,e)));const i=[...t.data].map(((e,n)=>r.type._parseSync(new Nt(t,e,t.path,n))));return Ct.mergeArray(n,i)}get element(){return this._def.type}min(e,t){return new on({...this._def,minLength:{value:e,message:Dt.toString(t)}})}max(e,t){return new on({...this._def,maxLength:{value:e,message:Dt.toString(t)}})}length(e,t){return new on({...this._def,exactLength:{value:e,message:Dt.toString(t)}})}nonempty(e){return this.min(1,e)}}function ln(e){if(e instanceof un){const t={};for(const n in e.shape){const r=e.shape[n];t[n]=An.create(ln(r))}return new un({...e._def,shape:()=>t})}return e instanceof on?new on({...e._def,type:ln(e.element)}):e instanceof An?An.create(ln(e.unwrap())):e instanceof Cn?Cn.create(ln(e.unwrap())):e instanceof pn?pn.create(e.items.map((e=>ln(e)))):e}on.create=(e,t)=>new on({type:e,minLength:null,maxLength:null,exactLength:null,typeName:Rn.ZodArray,...Ut(t)});class un extends Pt{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend}_getCached(){if(null!==this._cached)return this._cached;const e=this._def.shape(),t=ft.objectKeys(e);return this._cached={shape:e,keys:t}}_parse(e){if(this._getType(e)!==mt.object){const t=this._getOrReturnCtx(e);return At(t,{code:yt.invalid_type,expected:mt.object,received:t.parsedType}),Et}const{status:t,ctx:n}=this._processInputParams(e),{shape:r,keys:i}=this._getCached(),a=[];if(!(this._def.catchall instanceof an&&"strip"===this._def.unknownKeys))for(const e in n.data)i.includes(e)||a.push(e);const s=[];for(const e of i){const t=r[e],i=n.data[e];s.push({key:{status:"valid",value:e},value:t._parse(new Nt(n,i,n.path,e)),alwaysSet:e in n.data})}if(this._def.catchall instanceof an){const e=this._def.unknownKeys;if("passthrough"===e)for(const e of a)s.push({key:{status:"valid",value:e},value:{status:"valid",value:n.data[e]}});else if("strict"===e)a.length>0&&(At(n,{code:yt.unrecognized_keys,keys:a}),t.dirty());else if("strip"!==e)throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else{const e=this._def.catchall;for(const t of a){const r=n.data[t];s.push({key:{status:"valid",value:t},value:e._parse(new Nt(n,r,n.path,t)),alwaysSet:t in n.data})}}return n.common.async?Promise.resolve().then((async()=>{const e=[];for(const t of s){const n=await t.key;e.push({key:n,value:await t.value,alwaysSet:t.alwaysSet})}return e})).then((e=>Ct.mergeObjectSync(t,e))):Ct.mergeObjectSync(t,s)}get shape(){return this._def.shape()}strict(e){return Dt.errToObj,new un({...this._def,unknownKeys:"strict",...void 0!==e?{errorMap:(t,n)=>{var r,i,a,s;const o=null!==(a=null===(i=(r=this._def).errorMap)||void 0===i?void 0:i.call(r,t,n).message)&&void 0!==a?a:n.defaultError;return"unrecognized_keys"===t.code?{message:null!==(s=Dt.errToObj(e).message)&&void 0!==s?s:o}:{message:o}}}:{}})}strip(){return new un({...this._def,unknownKeys:"strip"})}passthrough(){return new un({...this._def,unknownKeys:"passthrough"})}extend(e){return new un({...this._def,shape:()=>({...this._def.shape(),...e})})}merge(e){return new un({unknownKeys:e._def.unknownKeys,catchall:e._def.catchall,shape:()=>({...this._def.shape(),...e._def.shape()}),typeName:Rn.ZodObject})}setKey(e,t){return this.augment({[e]:t})}catchall(e){return new un({...this._def,catchall:e})}pick(e){const t={};return ft.objectKeys(e).forEach((n=>{e[n]&&this.shape[n]&&(t[n]=this.shape[n])})),new un({...this._def,shape:()=>t})}omit(e){const t={};return ft.objectKeys(this.shape).forEach((n=>{e[n]||(t[n]=this.shape[n])})),new un({...this._def,shape:()=>t})}deepPartial(){return ln(this)}partial(e){const t={};return ft.objectKeys(this.shape).forEach((n=>{const r=this.shape[n];e&&!e[n]?t[n]=r:t[n]=r.optional()})),new un({...this._def,shape:()=>t})}required(e){const t={};return ft.objectKeys(this.shape).forEach((n=>{if(e&&!e[n])t[n]=this.shape[n];else{let e=this.shape[n];for(;e instanceof An;)e=e._def.innerType;t[n]=e}})),new un({...this._def,shape:()=>t})}keyof(){return bn(ft.objectKeys(this.shape))}}un.create=(e,t)=>new un({shape:()=>e,unknownKeys:"strip",catchall:an.create(),typeName:Rn.ZodObject,...Ut(t)}),un.strictCreate=(e,t)=>new un({shape:()=>e,unknownKeys:"strict",catchall:an.create(),typeName:Rn.ZodObject,...Ut(t)}),un.lazycreate=(e,t)=>new un({shape:e,unknownKeys:"strip",catchall:an.create(),typeName:Rn.ZodObject,...Ut(t)});class cn extends Pt{_parse(e){const{ctx:t}=this._processInputParams(e),n=this._def.options;if(t.common.async)return Promise.all(n.map((async e=>{const n={...t,common:{...t.common,issues:[]},parent:null};return{result:await e._parseAsync({data:t.data,path:t.path,parent:n}),ctx:n}}))).then((function(e){for(const t of e)if("valid"===t.result.status)return t.result;for(const n of e)if("dirty"===n.result.status)return t.common.issues.push(...n.ctx.common.issues),n.result;const n=e.map((e=>new bt(e.ctx.common.issues)));return At(t,{code:yt.invalid_union,unionErrors:n}),Et}));{let e;const r=[];for(const i of n){const n={...t,common:{...t.common,issues:[]},parent:null},a=i._parseSync({data:t.data,path:t.path,parent:n});if("valid"===a.status)return a;"dirty"===a.status&&!e&&(e={result:a,ctx:n}),n.common.issues.length&&r.push(n.common.issues)}if(e)return t.common.issues.push(...e.ctx.common.issues),e.result;const i=r.map((e=>new bt(e)));return At(t,{code:yt.invalid_union,unionErrors:i}),Et}}get options(){return this._def.options}}cn.create=(e,t)=>new cn({options:e,typeName:Rn.ZodUnion,...Ut(t)});function dn(e,t){const n=vt(e),r=vt(t);if(e===t)return{valid:!0,data:e};if(n===mt.object&&r===mt.object){const n=ft.objectKeys(t),r=ft.objectKeys(e).filter((e=>-1!==n.indexOf(e))),i={...e,...t};for(const n of r){const r=dn(e[n],t[n]);if(!r.valid)return{valid:!1};i[n]=r.data}return{valid:!0,data:i}}if(n===mt.array&&r===mt.array){if(e.length!==t.length)return{valid:!1};const n=[];for(let r=0;r<e.length;r++){const i=dn(e[r],t[r]);if(!i.valid)return{valid:!1};n.push(i.data)}return{valid:!0,data:n}}return n===mt.date&&r===mt.date&&+e==+t?{valid:!0,data:e}:{valid:!1}}class hn extends Pt{_parse(e){const{status:t,ctx:n}=this._processInputParams(e),r=(e,r)=>{if(Ot(e)||Ot(r))return Et;const i=dn(e.value,r.value);return i.valid?((It(e)||It(r))&&t.dirty(),{status:t.value,value:i.data}):(At(n,{code:yt.invalid_intersection_types}),Et)};return n.common.async?Promise.all([this._def.left._parseAsync({data:n.data,path:n.path,parent:n}),this._def.right._parseAsync({data:n.data,path:n.path,parent:n})]).then((([e,t])=>r(e,t))):r(this._def.left._parseSync({data:n.data,path:n.path,parent:n}),this._def.right._parseSync({data:n.data,path:n.path,parent:n}))}}hn.create=(e,t,n)=>new hn({left:e,right:t,typeName:Rn.ZodIntersection,...Ut(n)});class pn extends Pt{_parse(e){const{status:t,ctx:n}=this._processInputParams(e);if(n.parsedType!==mt.array)return At(n,{code:yt.invalid_type,expected:mt.array,received:n.parsedType}),Et;if(n.data.length<this._def.items.length)return At(n,{code:yt.too_small,minimum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),Et;!this._def.rest&&n.data.length>this._def.items.length&&(At(n,{code:yt.too_big,maximum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),t.dirty());const r=[...n.data].map(((e,t)=>{const r=this._def.items[t]||this._def.rest;return r?r._parse(new Nt(n,e,n.path,t)):null})).filter((e=>!!e));return n.common.async?Promise.all(r).then((e=>Ct.mergeArray(t,e))):Ct.mergeArray(t,r)}get items(){return this._def.items}rest(e){return new pn({...this._def,rest:e})}}pn.create=(e,t)=>{if(!Array.isArray(e))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new pn({items:e,typeName:Rn.ZodTuple,rest:null,...Ut(t)})};class fn extends Pt{_parse(e){const{status:t,ctx:n}=this._processInputParams(e);if(n.parsedType!==mt.map)return At(n,{code:yt.invalid_type,expected:mt.map,received:n.parsedType}),Et;const r=this._def.keyType,i=this._def.valueType,a=[...n.data.entries()].map((([e,t],a)=>({key:r._parse(new Nt(n,e,n.path,[a,"key"])),value:i._parse(new Nt(n,t,n.path,[a,"value"]))})));if(n.common.async){const e=new Map;return Promise.resolve().then((async()=>{for(const n of a){const r=await n.key,i=await n.value;if("aborted"===r.status||"aborted"===i.status)return Et;("dirty"===r.status||"dirty"===i.status)&&t.dirty(),e.set(r.value,i.value)}return{status:t.value,value:e}}))}{const e=new Map;for(const n of a){const r=n.key,i=n.value;if("aborted"===r.status||"aborted"===i.status)return Et;("dirty"===r.status||"dirty"===i.status)&&t.dirty(),e.set(r.value,i.value)}return{status:t.value,value:e}}}}fn.create=(e,t,n)=>new fn({valueType:t,keyType:e,typeName:Rn.ZodMap,...Ut(n)});class gn extends Pt{_parse(e){const{status:t,ctx:n}=this._processInputParams(e);if(n.parsedType!==mt.set)return At(n,{code:yt.invalid_type,expected:mt.set,received:n.parsedType}),Et;const r=this._def;null!==r.minSize&&n.data.size<r.minSize.value&&(At(n,{code:yt.too_small,minimum:r.minSize.value,type:"set",inclusive:!0,exact:!1,message:r.minSize.message}),t.dirty()),null!==r.maxSize&&n.data.size>r.maxSize.value&&(At(n,{code:yt.too_big,maximum:r.maxSize.value,type:"set",inclusive:!0,exact:!1,message:r.maxSize.message}),t.dirty());const i=this._def.valueType;function a(e){const n=new Set;for(const r of e){if("aborted"===r.status)return Et;"dirty"===r.status&&t.dirty(),n.add(r.value)}return{status:t.value,value:n}}const s=[...n.data.values()].map(((e,t)=>i._parse(new Nt(n,e,n.path,t))));return n.common.async?Promise.all(s).then((e=>a(e))):a(s)}min(e,t){return new gn({...this._def,minSize:{value:e,message:Dt.toString(t)}})}max(e,t){return new gn({...this._def,maxSize:{value:e,message:Dt.toString(t)}})}size(e,t){return this.min(e,t).max(e,t)}nonempty(e){return this.min(1,e)}}gn.create=(e,t)=>new gn({valueType:e,minSize:null,maxSize:null,typeName:Rn.ZodSet,...Ut(t)});class mn extends Pt{constructor(){super(...arguments),this.validate=this.implement}_parse(e){const{ctx:t}=this._processInputParams(e);if(t.parsedType!==mt.function)return At(t,{code:yt.invalid_type,expected:mt.function,received:t.parsedType}),Et;function n(e,n){return Tt({data:e,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,kt(),wt].filter((e=>!!e)),issueData:{code:yt.invalid_arguments,argumentsError:n}})}function r(e,n){return Tt({data:e,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,kt(),wt].filter((e=>!!e)),issueData:{code:yt.invalid_return_type,returnTypeError:n}})}const i={errorMap:t.common.contextualErrorMap},a=t.data;return this._def.returns instanceof kn?St((async(...e)=>{const t=new bt([]),s=await this._def.args.parseAsync(e,i).catch((r=>{throw t.addIssue(n(e,r)),t})),o=await a(...s);return await this._def.returns._def.type.parseAsync(o,i).catch((e=>{throw t.addIssue(r(o,e)),t}))})):St(((...e)=>{const t=this._def.args.safeParse(e,i);if(!t.success)throw new bt([n(e,t.error)]);const s=a(...t.data),o=this._def.returns.safeParse(s,i);if(!o.success)throw new bt([r(s,o.error)]);return o.data}))}parameters(){return this._def.args}returnType(){return this._def.returns}args(...e){return new mn({...this._def,args:pn.create(e).rest(rn.create())})}returns(e){return new mn({...this._def,returns:e})}implement(e){return this.parse(e)}strictImplement(e){return this.parse(e)}static create(e,t,n){return new mn({args:e||pn.create([]).rest(rn.create()),returns:t||rn.create(),typeName:Rn.ZodFunction,...Ut(n)})}}class vn extends Pt{get schema(){return this._def.getter()}_parse(e){const{ctx:t}=this._processInputParams(e);return this._def.getter()._parse({data:t.data,path:t.path,parent:t})}}vn.create=(e,t)=>new vn({getter:e,typeName:Rn.ZodLazy,...Ut(t)});class yn extends Pt{_parse(e){if(e.data!==this._def.value){const t=this._getOrReturnCtx(e);return At(t,{received:t.data,code:yt.invalid_literal,expected:this._def.value}),Et}return{status:"valid",value:e.data}}get value(){return this._def.value}}function bn(e,t){return new wn({values:e,typeName:Rn.ZodEnum,...Ut(t)})}yn.create=(e,t)=>new yn({value:e,typeName:Rn.ZodLiteral,...Ut(t)});class wn extends Pt{_parse(e){if("string"!=typeof e.data){const t=this._getOrReturnCtx(e),n=this._def.values;return At(t,{expected:ft.joinValues(n),received:t.parsedType,code:yt.invalid_type}),Et}if(-1===this._def.values.indexOf(e.data)){const t=this._getOrReturnCtx(e),n=this._def.values;return At(t,{received:t.data,code:yt.invalid_enum_value,options:n}),Et}return St(e.data)}get options(){return this._def.values}get enum(){const e={};for(const t of this._def.values)e[t]=t;return e}get Values(){const e={};for(const t of this._def.values)e[t]=t;return e}get Enum(){const e={};for(const t of this._def.values)e[t]=t;return e}extract(e){return wn.create(e)}exclude(e){return wn.create(this.options.filter((t=>!e.includes(t))))}}wn.create=bn;class xn extends Pt{_parse(e){const t=ft.getValidEnumValues(this._def.values),n=this._getOrReturnCtx(e);if(n.parsedType!==mt.string&&n.parsedType!==mt.number){const e=ft.objectValues(t);return At(n,{expected:ft.joinValues(e),received:n.parsedType,code:yt.invalid_type}),Et}if(-1===t.indexOf(e.data)){const e=ft.objectValues(t);return At(n,{received:n.data,code:yt.invalid_enum_value,options:e}),Et}return St(e.data)}get enum(){return this._def.values}}xn.create=(e,t)=>new xn({values:e,typeName:Rn.ZodNativeEnum,...Ut(t)});class kn extends Pt{unwrap(){return this._def.type}_parse(e){const{ctx:t}=this._processInputParams(e);if(t.parsedType!==mt.promise&&!1===t.common.async)return At(t,{code:yt.invalid_type,expected:mt.promise,received:t.parsedType}),Et;const n=t.parsedType===mt.promise?t.data:Promise.resolve(t.data);return St(n.then((e=>this._def.type.parseAsync(e,{path:t.path,errorMap:t.common.contextualErrorMap}))))}}kn.create=(e,t)=>new kn({type:e,typeName:Rn.ZodPromise,...Ut(t)});class Tn extends Pt{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===Rn.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(e){const{status:t,ctx:n}=this._processInputParams(e),r=this._def.effect||null;if("preprocess"===r.type){const e=r.transform(n.data);return n.common.async?Promise.resolve(e).then((e=>this._def.schema._parseAsync({data:e,path:n.path,parent:n}))):this._def.schema._parseSync({data:e,path:n.path,parent:n})}const i={addIssue:e=>{At(n,e),e.fatal?t.abort():t.dirty()},get path(){return n.path}};if(i.addIssue=i.addIssue.bind(i),"refinement"===r.type){const e=e=>{const t=r.refinement(e,i);if(n.common.async)return Promise.resolve(t);if(t instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return e};if(!1===n.common.async){const r=this._def.schema._parseSync({data:n.data,path:n.path,parent:n});return"aborted"===r.status?Et:("dirty"===r.status&&t.dirty(),e(r.value),{status:t.value,value:r.value})}return this._def.schema._parseAsync({data:n.data,path:n.path,parent:n}).then((n=>"aborted"===n.status?Et:("dirty"===n.status&&t.dirty(),e(n.value).then((()=>({status:t.value,value:n.value}))))))}if("transform"===r.type){if(!1===n.common.async){const e=this._def.schema._parseSync({data:n.data,path:n.path,parent:n});if(!Bt(e))return e;const a=r.transform(e.value,i);if(a instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return{status:t.value,value:a}}return this._def.schema._parseAsync({data:n.data,path:n.path,parent:n}).then((e=>Bt(e)?Promise.resolve(r.transform(e.value,i)).then((e=>({status:t.value,value:e}))):e))}ft.assertNever(r)}}Tn.create=(e,t,n)=>new Tn({schema:e,typeName:Rn.ZodEffects,effect:t,...Ut(n)}),Tn.createWithPreprocess=(e,t,n)=>new Tn({schema:t,effect:{type:"preprocess",transform:e},typeName:Rn.ZodEffects,...Ut(n)});class An extends Pt{_parse(e){return this._getType(e)===mt.undefined?St(void 0):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}}An.create=(e,t)=>new An({innerType:e,typeName:Rn.ZodOptional,...Ut(t)});class Cn extends Pt{_parse(e){return this._getType(e)===mt.null?St(null):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}}Cn.create=(e,t)=>new Cn({innerType:e,typeName:Rn.ZodNullable,...Ut(t)});class En extends Pt{_parse(e){const{ctx:t}=this._processInputParams(e);let n=t.data;return t.parsedType===mt.undefined&&(n=this._def.defaultValue()),this._def.innerType._parse({data:n,path:t.path,parent:t})}removeDefault(){return this._def.innerType}}En.create=(e,t)=>new En({innerType:e,typeName:Rn.ZodDefault,defaultValue:"function"==typeof t.default?t.default:()=>t.default,...Ut(t)});class Sn extends Pt{_parse(e){const{ctx:t}=this._processInputParams(e),n={...t,common:{...t.common,issues:[]}},r=this._def.innerType._parse({data:n.data,path:n.path,parent:{...n}});return Rt(r)?r.then((e=>({status:"valid",value:"valid"===e.status?e.value:this._def.catchValue({get error(){return new bt(n.common.issues)},input:n.data})}))):{status:"valid",value:"valid"===r.status?r.value:this._def.catchValue({get error(){return new bt(n.common.issues)},input:n.data})}}removeCatch(){return this._def.innerType}}Sn.create=(e,t)=>new Sn({innerType:e,typeName:Rn.ZodCatch,catchValue:"function"==typeof t.catch?t.catch:()=>t.catch,...Ut(t)});class On extends Pt{_parse(e){if(this._getType(e)!==mt.nan){const t=this._getOrReturnCtx(e);return At(t,{code:yt.invalid_type,expected:mt.nan,received:t.parsedType}),Et}return{status:"valid",value:e.data}}}On.create=e=>new On({typeName:Rn.ZodNaN,...Ut(e)});class In extends Pt{_parse(e){const{ctx:t}=this._processInputParams(e),n=t.data;return this._def.type._parse({data:n,path:t.path,parent:t})}unwrap(){return this._def.type}}class Bn extends Pt{_parse(e){const{status:t,ctx:n}=this._processInputParams(e);if(n.common.async)return(async()=>{const e=await this._def.in._parseAsync({data:n.data,path:n.path,parent:n});return"aborted"===e.status?Et:"dirty"===e.status?(t.dirty(),(e=>({status:"dirty",value:e}))(e.value)):this._def.out._parseAsync({data:e.value,path:n.path,parent:n})})();{const e=this._def.in._parseSync({data:n.data,path:n.path,parent:n});return"aborted"===e.status?Et:"dirty"===e.status?(t.dirty(),{status:"dirty",value:e.value}):this._def.out._parseSync({data:e.value,path:n.path,parent:n})}}static create(e,t){return new Bn({in:e,out:t,typeName:Rn.ZodPipeline})}}var Rn;un.lazycreate,function(e){e.ZodString="ZodString",e.ZodNumber="ZodNumber",e.ZodNaN="ZodNaN",e.ZodBigInt="ZodBigInt",e.ZodBoolean="ZodBoolean",e.ZodDate="ZodDate",e.ZodSymbol="ZodSymbol",e.ZodUndefined="ZodUndefined",e.ZodNull="ZodNull",e.ZodAny="ZodAny",e.ZodUnknown="ZodUnknown",e.ZodNever="ZodNever",e.ZodVoid="ZodVoid",e.ZodArray="ZodArray",e.ZodObject="ZodObject",e.ZodUnion="ZodUnion",e.ZodDiscriminatedUnion="ZodDiscriminatedUnion",e.ZodIntersection="ZodIntersection",e.ZodTuple="ZodTuple",e.ZodRecord="ZodRecord",e.ZodMap="ZodMap",e.ZodSet="ZodSet",e.ZodFunction="ZodFunction",e.ZodLazy="ZodLazy",e.ZodLiteral="ZodLiteral",e.ZodEnum="ZodEnum",e.ZodEffects="ZodEffects",e.ZodNativeEnum="ZodNativeEnum",e.ZodOptional="ZodOptional",e.ZodNullable="ZodNullable",e.ZodDefault="ZodDefault",e.ZodCatch="ZodCatch",e.ZodPromise="ZodPromise",e.ZodBranded="ZodBranded",e.ZodPipeline="ZodPipeline"}(Rn||(Rn={}));const Dn=Kt.create;Gt.create,On.create,Qt.create;const Nn=Ht.create;_t.create,$t.create,en.create,tn.create;const Ln=nn.create;rn.create,an.create,sn.create;const Un=on.create,Pn=un.create;un.strictCreate,cn.create,hn.create,pn.create,fn.create,gn.create;const Vn=mn.create;vn.create,yn.create,wn.create;const jn=xn.create;kn.create,Tn.create,An.create,Cn.create,Tn.createWithPreprocess,Bn.create;var Fn=(e=>(e.Js="js",e.Json="json",e.Yaml="yaml",e.Xml="xml",e.Toml="toml",e))(Fn||{}),Jn=(e=>(e.String="string",e.Number="number",e.Boolean="boolean",e.Object="object",e.Array="array",e.Null="null",e.Undefined="undefined",e.NaN="NaN",e.Date="Date",e))(Jn||{});const Zn=Pn({elementSelector:Dn(),data:Ln(),dataType:Dn(),rootContainerName:Dn().default("root"),withoutContainer:Nn().default(!1),flipBackgroundColors:Nn().default(!1),expandFieldsToFullWidth:Nn().default(!1),readOnlyMode:Nn().default(!1),onChange:Vn().optional(),xmlRootName:Ln(),fullScreen:Nn().default(!1)}).extend({dataType:jn(Fn)}),Mn={_path:[],_key:"",_valueType:Jn.String,_value:"",_fieldType:void 0},Wn=Math.min,qn=Math.max,Xn=Math.round,zn=e=>({x:e,y:e}),Kn={left:"right",right:"left",bottom:"top",top:"bottom"},Yn={start:"end",end:"start"};function Gn(e,t,n){return qn(e,Wn(t,n))}function Qn(e,t){return"function"==typeof e?e(t):e}function Hn(e){return e.split("-")[0]}function _n(e){return e.split("-")[1]}function $n(e){return"x"===e?"y":"x"}function er(e){return"y"===e?"height":"width"}function tr(e){return["top","bottom"].includes(Hn(e))?"y":"x"}function nr(e){return $n(tr(e))}function rr(e){return e.replace(/start|end/g,(e=>Yn[e]))}function ir(e){return e.replace(/left|right|bottom|top/g,(e=>Kn[e]))}function ar(e){return{...e,top:e.y,left:e.x,right:e.x+e.width,bottom:e.y+e.height}}function sr(e,t,n){let{reference:r,floating:i}=e;const a=tr(t),s=nr(t),o=er(s),l=Hn(t),u="y"===a,c=r.x+r.width/2-i.width/2,d=r.y+r.height/2-i.height/2,h=r[o]/2-i[o]/2;let p;switch(l){case"top":p={x:c,y:r.y-i.height};break;case"bottom":p={x:c,y:r.y+r.height};break;case"right":p={x:r.x+r.width,y:d};break;case"left":p={x:r.x-i.width,y:d};break;default:p={x:r.x,y:r.y}}switch(_n(t)){case"start":p[s]-=h*(n&&u?-1:1);break;case"end":p[s]+=h*(n&&u?-1:1)}return p}async function or(e,t){var n;void 0===t&&(t={});const{x:r,y:i,platform:a,rects:s,elements:o,strategy:l}=e,{boundary:u="clippingAncestors",rootBoundary:c="viewport",elementContext:d="floating",altBoundary:h=!1,padding:p=0}=Qn(t,e),f=function(e){return"number"!=typeof e?function(e){return{top:0,right:0,bottom:0,left:0,...e}}(e):{top:e,right:e,bottom:e,left:e}}(p),g=o[h?"floating"===d?"reference":"floating":d],m=ar(await a.getClippingRect({element:null==(n=await(null==a.isElement?void 0:a.isElement(g)))||n?g:g.contextElement||await(null==a.getDocumentElement?void 0:a.getDocumentElement(o.floating)),boundary:u,rootBoundary:c,strategy:l})),v="floating"===d?{...s.floating,x:r,y:i}:s.reference,y=await(null==a.getOffsetParent?void 0:a.getOffsetParent(o.floating)),b=await(null==a.isElement?void 0:a.isElement(y))&&await(null==a.getScale?void 0:a.getScale(y))||{x:1,y:1},w=ar(a.convertOffsetParentRelativeRectToViewportRelativeRect?await a.convertOffsetParentRelativeRectToViewportRelativeRect({rect:v,offsetParent:y,strategy:l}):v);return{top:(m.top-w.top+f.top)/b.y,bottom:(w.bottom-m.bottom+f.bottom)/b.y,left:(m.left-w.left+f.left)/b.x,right:(w.right-m.right+f.right)/b.x}}const lr=function(e){return void 0===e&&(e=0),{name:"offset",options:e,async fn(t){var n,r;const{x:i,y:a,placement:s,middlewareData:o}=t,l=await async function(e,t){const{placement:n,platform:r,elements:i}=e,a=await(null==r.isRTL?void 0:r.isRTL(i.floating)),s=Hn(n),o=_n(n),l="y"===tr(n),u=["left","top"].includes(s)?-1:1,c=a&&l?-1:1,d=Qn(t,e);let{mainAxis:h,crossAxis:p,alignmentAxis:f}="number"==typeof d?{mainAxis:d,crossAxis:0,alignmentAxis:null}:{mainAxis:0,crossAxis:0,alignmentAxis:null,...d};return o&&"number"==typeof f&&(p="end"===o?-1*f:f),l?{x:p*c,y:h*u}:{x:h*u,y:p*c}}(t,e);return s===(null==(n=o.offset)?void 0:n.placement)&&null!=(r=o.arrow)&&r.alignmentOffset?{}:{x:i+l.x,y:a+l.y,data:{...l,placement:s}}}}};function ur(e){return hr(e)?(e.nodeName||"").toLowerCase():"#document"}function cr(e){var t;return(null==e||null==(t=e.ownerDocument)?void 0:t.defaultView)||window}function dr(e){var t;return null==(t=(hr(e)?e.ownerDocument:e.document)||window.document)?void 0:t.documentElement}function hr(e){return e instanceof Node||e instanceof cr(e).Node}function pr(e){return e instanceof Element||e instanceof cr(e).Element}function fr(e){return e instanceof HTMLElement||e instanceof cr(e).HTMLElement}function gr(e){return!(typeof ShadowRoot>"u")&&(e instanceof ShadowRoot||e instanceof cr(e).ShadowRoot)}function mr(e){const{overflow:t,overflowX:n,overflowY:r,display:i}=xr(e);return/auto|scroll|overlay|hidden|clip/.test(t+r+n)&&!["inline","contents"].includes(i)}function vr(e){return["table","td","th"].includes(ur(e))}function yr(e){const t=br(),n=xr(e);return"none"!==n.transform||"none"!==n.perspective||!!n.containerType&&"normal"!==n.containerType||!t&&!!n.backdropFilter&&"none"!==n.backdropFilter||!t&&!!n.filter&&"none"!==n.filter||["transform","perspective","filter"].some((e=>(n.willChange||"").includes(e)))||["paint","layout","strict","content"].some((e=>(n.contain||"").includes(e)))}function br(){return!(typeof CSS>"u"||!CSS.supports)&&CSS.supports("-webkit-backdrop-filter","none")}function wr(e){return["html","body","#document"].includes(ur(e))}function xr(e){return cr(e).getComputedStyle(e)}function kr(e){return pr(e)?{scrollLeft:e.scrollLeft,scrollTop:e.scrollTop}:{scrollLeft:e.pageXOffset,scrollTop:e.pageYOffset}}function Tr(e){if("html"===ur(e))return e;const t=e.assignedSlot||e.parentNode||gr(e)&&e.host||dr(e);return gr(t)?t.host:t}function Ar(e){const t=Tr(e);return wr(t)?e.ownerDocument?e.ownerDocument.body:e.body:fr(t)&&mr(t)?t:Ar(t)}function Cr(e,t,n){var r;void 0===t&&(t=[]),void 0===n&&(n=!0);const i=Ar(e),a=i===(null==(r=e.ownerDocument)?void 0:r.body),s=cr(i);return a?t.concat(s,s.visualViewport||[],mr(i)?i:[],s.frameElement&&n?Cr(s.frameElement):[]):t.concat(i,Cr(i,[],n))}function Er(e){const t=xr(e);let n=parseFloat(t.width)||0,r=parseFloat(t.height)||0;const i=fr(e),a=i?e.offsetWidth:n,s=i?e.offsetHeight:r,o=Xn(n)!==a||Xn(r)!==s;return o&&(n=a,r=s),{width:n,height:r,$:o}}function Sr(e){return pr(e)?e:e.contextElement}function Or(e){const t=Sr(e);if(!fr(t))return zn(1);const n=t.getBoundingClientRect(),{width:r,height:i,$:a}=Er(t);let s=(a?Xn(n.width):n.width)/r,o=(a?Xn(n.height):n.height)/i;return(!s||!Number.isFinite(s))&&(s=1),(!o||!Number.isFinite(o))&&(o=1),{x:s,y:o}}const Ir=zn(0);function Br(e){const t=cr(e);return br()&&t.visualViewport?{x:t.visualViewport.offsetLeft,y:t.visualViewport.offsetTop}:Ir}function Rr(e,t,n,r){void 0===t&&(t=!1),void 0===n&&(n=!1);const i=e.getBoundingClientRect(),a=Sr(e);let s=zn(1);t&&(r?pr(r)&&(s=Or(r)):s=Or(e));const o=function(e,t,n){return void 0===t&&(t=!1),!(!n||t&&n!==cr(e))&&t}(a,n,r)?Br(a):zn(0);let l=(i.left+o.x)/s.x,u=(i.top+o.y)/s.y,c=i.width/s.x,d=i.height/s.y;if(a){const e=cr(a),t=r&&pr(r)?cr(r):r;let n=e.frameElement;for(;n&&r&&t!==e;){const e=Or(n),t=n.getBoundingClientRect(),r=xr(n),i=t.left+(n.clientLeft+parseFloat(r.paddingLeft))*e.x,a=t.top+(n.clientTop+parseFloat(r.paddingTop))*e.y;l*=e.x,u*=e.y,c*=e.x,d*=e.y,l+=i,u+=a,n=cr(n).frameElement}}return ar({width:c,height:d,x:l,y:u})}function Dr(e){return Rr(dr(e)).left+kr(e).scrollLeft}function Nr(e,t,n){let r;if("viewport"===t)r=function(e,t){const n=cr(e),r=dr(e),i=n.visualViewport;let a=r.clientWidth,s=r.clientHeight,o=0,l=0;if(i){a=i.width,s=i.height;const e=br();(!e||e&&"fixed"===t)&&(o=i.offsetLeft,l=i.offsetTop)}return{width:a,height:s,x:o,y:l}}(e,n);else if("document"===t)r=function(e){const t=dr(e),n=kr(e),r=e.ownerDocument.body,i=qn(t.scrollWidth,t.clientWidth,r.scrollWidth,r.clientWidth),a=qn(t.scrollHeight,t.clientHeight,r.scrollHeight,r.clientHeight);let s=-n.scrollLeft+Dr(e);const o=-n.scrollTop;return"rtl"===xr(r).direction&&(s+=qn(t.clientWidth,r.clientWidth)-i),{width:i,height:a,x:s,y:o}}(dr(e));else if(pr(t))r=function(e,t){const n=Rr(e,!0,"fixed"===t),r=n.top+e.clientTop,i=n.left+e.clientLeft,a=fr(e)?Or(e):zn(1);return{width:e.clientWidth*a.x,height:e.clientHeight*a.y,x:i*a.x,y:r*a.y}}(t,n);else{const n=Br(e);r={...t,x:t.x-n.x,y:t.y-n.y}}return ar(r)}function Lr(e,t){const n=Tr(e);return!(n===t||!pr(n)||wr(n))&&("fixed"===xr(n).position||Lr(n,t))}function Ur(e,t){const n=t.get(e);if(n)return n;let r=Cr(e,[],!1).filter((e=>pr(e)&&"body"!==ur(e))),i=null;const a="fixed"===xr(e).position;let s=a?Tr(e):e;for(;pr(s)&&!wr(s);){const t=xr(s),n=yr(s);!n&&"fixed"===t.position&&(i=null),(a?!n&&!i:!n&&"static"===t.position&&i&&["absolute","fixed"].includes(i.position)||mr(s)&&!n&&Lr(e,s))?r=r.filter((e=>e!==s)):i=t,s=Tr(s)}return t.set(e,r),r}function Pr(e,t,n){const r=fr(t),i=dr(t),a="fixed"===n,s=Rr(e,!0,a,t);let o={scrollLeft:0,scrollTop:0};const l=zn(0);if(r||!r&&!a)if(("body"!==ur(t)||mr(i))&&(o=kr(t)),r){const e=Rr(t,!0,a,t);l.x=e.x+t.clientLeft,l.y=e.y+t.clientTop}else i&&(l.x=Dr(i));return{x:s.left+o.scrollLeft-l.x,y:s.top+o.scrollTop-l.y,width:s.width,height:s.height}}function Vr(e,t){return fr(e)&&"fixed"!==xr(e).position?t?t(e):e.offsetParent:null}function jr(e,t){const n=cr(e);if(!fr(e))return n;let r=Vr(e,t);for(;r&&vr(r)&&"static"===xr(r).position;)r=Vr(r,t);return r&&("html"===ur(r)||"body"===ur(r)&&"static"===xr(r).position&&!yr(r))?n:r||function(e){let t=Tr(e);for(;fr(t)&&!wr(t);){if(yr(t))return t;t=Tr(t)}return null}(e)||n}const Fr={convertOffsetParentRelativeRectToViewportRelativeRect:function(e){let{rect:t,offsetParent:n,strategy:r}=e;const i=fr(n),a=dr(n);if(n===a)return t;let s={scrollLeft:0,scrollTop:0},o=zn(1);const l=zn(0);if((i||!i&&"fixed"!==r)&&(("body"!==ur(n)||mr(a))&&(s=kr(n)),fr(n))){const e=Rr(n);o=Or(n),l.x=e.x+n.clientLeft,l.y=e.y+n.clientTop}return{width:t.width*o.x,height:t.height*o.y,x:t.x*o.x-s.scrollLeft*o.x+l.x,y:t.y*o.y-s.scrollTop*o.y+l.y}},getDocumentElement:dr,getClippingRect:function(e){let{element:t,boundary:n,rootBoundary:r,strategy:i}=e;const a=[..."clippingAncestors"===n?Ur(t,this._c):[].concat(n),r],s=a[0],o=a.reduce(((e,n)=>{const r=Nr(t,n,i);return e.top=qn(r.top,e.top),e.right=Wn(r.right,e.right),e.bottom=Wn(r.bottom,e.bottom),e.left=qn(r.left,e.left),e}),Nr(t,s,i));return{width:o.right-o.left,height:o.bottom-o.top,x:o.left,y:o.top}},getOffsetParent:jr,getElementRects:async function(e){let{reference:t,floating:n,strategy:r}=e;const i=this.getOffsetParent||jr,a=this.getDimensions;return{reference:Pr(t,await i(n),r),floating:{x:0,y:0,...await a(n)}}},getClientRects:function(e){return Array.from(e.getClientRects())},getDimensions:function(e){const{width:t,height:n}=Er(e);return{width:t,height:n}},getScale:Or,isElement:pr,isRTL:function(e){return"rtl"===xr(e).direction}},Jr=function(e){return void 0===e&&(e={}),{name:"shift",options:e,async fn(t){const{x:n,y:r,placement:i}=t,{mainAxis:a=!0,crossAxis:s=!1,limiter:o={fn:e=>{let{x:t,y:n}=e;return{x:t,y:n}}},...l}=Qn(e,t),u={x:n,y:r},c=await or(t,l),d=tr(Hn(i)),h=$n(d);let p=u[h],f=u[d];if(a){const e="y"===h?"bottom":"right";p=Gn(p+c["y"===h?"top":"left"],p,p-c[e])}if(s){const e="y"===d?"bottom":"right";f=Gn(f+c["y"===d?"top":"left"],f,f-c[e])}const g=o.fn({...t,[h]:p,[d]:f});return{...g,data:{x:g.x-n,y:g.y-r}}}}},Zr=function(e){return void 0===e&&(e={}),{name:"flip",options:e,async fn(t){var n,r;const{placement:i,middlewareData:a,rects:s,initialPlacement:o,platform:l,elements:u}=t,{mainAxis:c=!0,crossAxis:d=!0,fallbackPlacements:h,fallbackStrategy:p="bestFit",fallbackAxisSideDirection:f="none",flipAlignment:g=!0,...m}=Qn(e,t);if(null!=(n=a.arrow)&&n.alignmentOffset)return{};const v=Hn(i),y=Hn(o)===o,b=await(null==l.isRTL?void 0:l.isRTL(u.floating)),w=h||(y||!g?[ir(o)]:function(e){const t=ir(e);return[rr(e),t,rr(t)]}(o));!h&&"none"!==f&&w.push(...function(e,t,n,r){const i=_n(e);let a=function(e,t,n){const r=["left","right"],i=["right","left"],a=["top","bottom"],s=["bottom","top"];switch(e){case"top":case"bottom":return n?t?i:r:t?r:i;case"left":case"right":return t?a:s;default:return[]}}(Hn(e),"start"===n,r);return i&&(a=a.map((e=>e+"-"+i)),t&&(a=a.concat(a.map(rr)))),a}(o,g,f,b));const x=[o,...w],k=await or(t,m),T=[];let A=(null==(r=a.flip)?void 0:r.overflows)||[];if(c&&T.push(k[v]),d){const e=function(e,t,n){void 0===n&&(n=!1);const r=_n(e),i=nr(e),a=er(i);let s="x"===i?r===(n?"end":"start")?"right":"left":"start"===r?"bottom":"top";return t.reference[a]>t.floating[a]&&(s=ir(s)),[s,ir(s)]}(i,s,b);T.push(k[e[0]],k[e[1]])}if(A=[...A,{placement:i,overflows:T}],!T.every((e=>e<=0))){var C,E;const e=((null==(C=a.flip)?void 0:C.index)||0)+1,t=x[e];if(t)return{data:{index:e,overflows:A},reset:{placement:t}};let n=null==(E=A.filter((e=>e.overflows[0]<=0)).sort(((e,t)=>e.overflows[1]-t.overflows[1]))[0])?void 0:E.placement;if(!n)switch(p){case"bestFit":{var S;const e=null==(S=A.map((e=>[e.placement,e.overflows.filter((e=>e>0)).reduce(((e,t)=>e+t),0)])).sort(((e,t)=>e[1]-t[1]))[0])?void 0:S[0];e&&(n=e);break}case"initialPlacement":n=o}if(i!==n)return{reset:{placement:n}}}return{}}}},Mr=(e,t,n)=>{const r=new Map,i={platform:Fr,...n},a={...i.platform,_c:r};return(async(e,t,n)=>{const{placement:r="bottom",strategy:i="absolute",middleware:a=[],platform:s}=n,o=a.filter(Boolean),l=await(null==s.isRTL?void 0:s.isRTL(t));let u=await s.getElementRects({reference:e,floating:t,strategy:i}),{x:c,y:d}=sr(u,r,l),h=r,p={},f=0;for(let n=0;n<o.length;n++){const{name:a,fn:g}=o[n],{x:m,y:v,data:y,reset:b}=await g({x:c,y:d,initialPlacement:r,placement:h,strategy:i,middlewareData:p,rects:u,platform:s,elements:{reference:e,floating:t}});c=m??c,d=v??d,p={...p,[a]:{...p[a],...y}},b&&f<=50&&(f++,"object"==typeof b&&(b.placement&&(h=b.placement),b.rects&&(u=!0===b.rects?await s.getElementRects({reference:e,floating:t,strategy:i}):b.rects),({x:c,y:d}=sr(u,h,l))),n=-1)}return{x:c,y:d,placement:h,strategy:i,middlewareData:p}})(e,t,{...i,platform:a})};var Wr={exports:{}};!function(e,t){(function(){var n,r="Expected a function",i="__lodash_hash_undefined__",a="__lodash_placeholder__",s=16,o=32,l=64,u=128,d=256,h=1/0,p=9007199254740991,f=NaN,g=4294967295,m=g-1,v=g>>>1,y=[["ary",u],["bind",1],["bindKey",2],["curry",8],["curryRight",s],["flip",512],["partial",o],["partialRight",l],["rearg",d]],b="[object Arguments]",w="[object Array]",x="[object Boolean]",k="[object Date]",T="[object Error]",A="[object Function]",C="[object GeneratorFunction]",E="[object Map]",S="[object Number]",O="[object Object]",I="[object Promise]",B="[object RegExp]",R="[object Set]",D="[object String]",N="[object Symbol]",L="[object WeakMap]",U="[object ArrayBuffer]",P="[object DataView]",V="[object Float32Array]",j="[object Float64Array]",F="[object Int8Array]",J="[object Int16Array]",Z="[object Int32Array]",M="[object Uint8Array]",W="[object Uint8ClampedArray]",q="[object Uint16Array]",X="[object Uint32Array]",z=/\b__p \+= '';/g,K=/\b(__p \+=) '' \+/g,Y=/(__e\(.*?\)|\b__t\)) \+\n'';/g,G=/&(?:amp|lt|gt|quot|#39);/g,Q=/[&<>"']/g,H=RegExp(G.source),_=RegExp(Q.source),$=/<%-([\s\S]+?)%>/g,ee=/<%([\s\S]+?)%>/g,te=/<%=([\s\S]+?)%>/g,ne=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,re=/^\w*$/,ie=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,ae=/[\\^$.*+?()[\]{}|]/g,se=RegExp(ae.source),oe=/^\s+/,le=/\s/,ue=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,ce=/\{\n\/\* \[wrapped with (.+)\] \*/,de=/,? & /,he=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,pe=/[()=,{}\[\]\/\s]/,fe=/\\(\\)?/g,ge=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,me=/\w*$/,ve=/^[-+]0x[0-9a-f]+$/i,ye=/^0b[01]+$/i,be=/^\[object .+?Constructor\]$/,we=/^0o[0-7]+$/i,xe=/^(?:0|[1-9]\d*)$/,ke=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,Te=/($^)/,Ae=/['\n\r\u2028\u2029\\]/g,Ce="\\ud800-\\udfff",Ee="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",Se="\\u2700-\\u27bf",Oe="a-z\\xdf-\\xf6\\xf8-\\xff",Ie="A-Z\\xc0-\\xd6\\xd8-\\xde",Be="\\ufe0e\\ufe0f",Re="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",De="['’]",Ne="["+Ce+"]",Le="["+Re+"]",Ue="["+Ee+"]",Pe="\\d+",Ve="["+Se+"]",je="["+Oe+"]",Fe="[^"+Ce+Re+Pe+Se+Oe+Ie+"]",Je="\\ud83c[\\udffb-\\udfff]",Ze="[^"+Ce+"]",Me="(?:\\ud83c[\\udde6-\\uddff]){2}",We="[\\ud800-\\udbff][\\udc00-\\udfff]",qe="["+Ie+"]",Xe="\\u200d",ze="(?:"+je+"|"+Fe+")",Ke="(?:"+qe+"|"+Fe+")",Ye="(?:['’](?:d|ll|m|re|s|t|ve))?",Ge="(?:['’](?:D|LL|M|RE|S|T|VE))?",Qe="(?:"+Ue+"|"+Je+")"+"?",He="["+Be+"]?",_e=He+Qe+("(?:"+Xe+"(?:"+[Ze,Me,We].join("|")+")"+He+Qe+")*"),$e="(?:"+[Ve,Me,We].join("|")+")"+_e,et="(?:"+[Ze+Ue+"?",Ue,Me,We,Ne].join("|")+")",tt=RegExp(De,"g"),nt=RegExp(Ue,"g"),rt=RegExp(Je+"(?="+Je+")|"+et+_e,"g"),it=RegExp([qe+"?"+je+"+"+Ye+"(?="+[Le,qe,"$"].join("|")+")",Ke+"+"+Ge+"(?="+[Le,qe+ze,"$"].join("|")+")",qe+"?"+ze+"+"+Ye,qe+"+"+Ge,"\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",Pe,$e].join("|"),"g"),at=RegExp("["+Xe+Ce+Ee+Be+"]"),st=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,ot=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],lt=-1,ut={};ut[V]=ut[j]=ut[F]=ut[J]=ut[Z]=ut[M]=ut[W]=ut[q]=ut[X]=!0,ut[b]=ut[w]=ut[U]=ut[x]=ut[P]=ut[k]=ut[T]=ut[A]=ut[E]=ut[S]=ut[O]=ut[B]=ut[R]=ut[D]=ut[L]=!1;var ct={};ct[b]=ct[w]=ct[U]=ct[P]=ct[x]=ct[k]=ct[V]=ct[j]=ct[F]=ct[J]=ct[Z]=ct[E]=ct[S]=ct[O]=ct[B]=ct[R]=ct[D]=ct[N]=ct[M]=ct[W]=ct[q]=ct[X]=!0,ct[T]=ct[A]=ct[L]=!1;var dt={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},ht=parseFloat,pt=parseInt,ft="object"==typeof c&&c&&c.Object===Object&&c,gt="object"==typeof self&&self&&self.Object===Object&&self,mt=ft||gt||Function("return this")(),vt=t&&!t.nodeType&&t,yt=vt&&e&&!e.nodeType&&e,bt=yt&&yt.exports===vt,wt=bt&&ft.process,xt=function(){try{return yt&&yt.require&&yt.require("util").types||wt&&wt.binding&&wt.binding("util")}catch{}}(),kt=xt&&xt.isArrayBuffer,Tt=xt&&xt.isDate,At=xt&&xt.isMap,Ct=xt&&xt.isRegExp,Et=xt&&xt.isSet,St=xt&&xt.isTypedArray;function Ot(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}function It(e,t,n,r){for(var i=-1,a=null==e?0:e.length;++i<a;){var s=e[i];t(r,s,n(s),e)}return r}function Bt(e,t){for(var n=-1,r=null==e?0:e.length;++n<r&&!1!==t(e[n],n,e););return e}function Rt(e,t){for(var n=null==e?0:e.length;n--&&!1!==t(e[n],n,e););return e}function Dt(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(!t(e[n],n,e))return!1;return!0}function Nt(e,t){for(var n=-1,r=null==e?0:e.length,i=0,a=[];++n<r;){var s=e[n];t(s,n,e)&&(a[i++]=s)}return a}function Lt(e,t){return!!(null==e?0:e.length)&&qt(e,t,0)>-1}function Ut(e,t,n){for(var r=-1,i=null==e?0:e.length;++r<i;)if(n(t,e[r]))return!0;return!1}function Pt(e,t){for(var n=-1,r=null==e?0:e.length,i=Array(r);++n<r;)i[n]=t(e[n],n,e);return i}function Vt(e,t){for(var n=-1,r=t.length,i=e.length;++n<r;)e[i+n]=t[n];return e}function jt(e,t,n,r){var i=-1,a=null==e?0:e.length;for(r&&a&&(n=e[++i]);++i<a;)n=t(n,e[i],i,e);return n}function Ft(e,t,n,r){var i=null==e?0:e.length;for(r&&i&&(n=e[--i]);i--;)n=t(n,e[i],i,e);return n}function Jt(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(t(e[n],n,e))return!0;return!1}var Zt=Yt("length");function Mt(e,t,n){var r;return n(e,(function(e,n,i){if(t(e,n,i))return r=n,!1})),r}function Wt(e,t,n,r){for(var i=e.length,a=n+(r?1:-1);r?a--:++a<i;)if(t(e[a],a,e))return a;return-1}function qt(e,t,n){return t==t?function(e,t,n){for(var r=n-1,i=e.length;++r<i;)if(e[r]===t)return r;return-1}(e,t,n):Wt(e,zt,n)}function Xt(e,t,n,r){for(var i=n-1,a=e.length;++i<a;)if(r(e[i],t))return i;return-1}function zt(e){return e!=e}function Kt(e,t){var n=null==e?0:e.length;return n?Ht(e,t)/n:f}function Yt(e){return function(t){return null==t?n:t[e]}}function Gt(e){return function(t){return null==e?n:e[t]}}function Qt(e,t,n,r,i){return i(e,(function(e,i,a){n=r?(r=!1,e):t(n,e,i,a)})),n}function Ht(e,t){for(var r,i=-1,a=e.length;++i<a;){var s=t(e[i]);s!==n&&(r=r===n?s:r+s)}return r}function _t(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}function $t(e){return e&&e.slice(0,mn(e)+1).replace(oe,"")}function en(e){return function(t){return e(t)}}function tn(e,t){return Pt(t,(function(t){return e[t]}))}function nn(e,t){return e.has(t)}function rn(e,t){for(var n=-1,r=e.length;++n<r&&qt(t,e[n],0)>-1;);return n}function an(e,t){for(var n=e.length;n--&&qt(t,e[n],0)>-1;);return n}var sn=Gt({"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss","Ā":"A","Ă":"A","Ą":"A","ā":"a","ă":"a","ą":"a","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","ć":"c","ĉ":"c","ċ":"c","č":"c","Ď":"D","Đ":"D","ď":"d","đ":"d","Ē":"E","Ĕ":"E","Ė":"E","Ę":"E","Ě":"E","ē":"e","ĕ":"e","ė":"e","ę":"e","ě":"e","Ĝ":"G","Ğ":"G","Ġ":"G","Ģ":"G","ĝ":"g","ğ":"g","ġ":"g","ģ":"g","Ĥ":"H","Ħ":"H","ĥ":"h","ħ":"h","Ĩ":"I","Ī":"I","Ĭ":"I","Į":"I","İ":"I","ĩ":"i","ī":"i","ĭ":"i","į":"i","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","Ļ":"L","Ľ":"L","Ŀ":"L","Ł":"L","ĺ":"l","ļ":"l","ľ":"l","ŀ":"l","ł":"l","Ń":"N","Ņ":"N","Ň":"N","Ŋ":"N","ń":"n","ņ":"n","ň":"n","ŋ":"n","Ō":"O","Ŏ":"O","Ő":"O","ō":"o","ŏ":"o","ő":"o","Ŕ":"R","Ŗ":"R","Ř":"R","ŕ":"r","ŗ":"r","ř":"r","Ś":"S","Ŝ":"S","Ş":"S","Š":"S","ś":"s","ŝ":"s","ş":"s","š":"s","Ţ":"T","Ť":"T","Ŧ":"T","ţ":"t","ť":"t","ŧ":"t","Ũ":"U","Ū":"U","Ŭ":"U","Ů":"U","Ű":"U","Ų":"U","ũ":"u","ū":"u","ŭ":"u","ů":"u","ű":"u","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","Ż":"Z","Ž":"Z","ź":"z","ż":"z","ž":"z","Ĳ":"IJ","ĳ":"ij","Œ":"Oe","œ":"oe","ŉ":"'n","ſ":"s"}),on=Gt({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"});function ln(e){return"\\"+dt[e]}function un(e){return at.test(e)}function cn(e){var t=-1,n=Array(e.size);return e.forEach((function(e,r){n[++t]=[r,e]})),n}function dn(e,t){return function(n){return e(t(n))}}function hn(e,t){for(var n=-1,r=e.length,i=0,s=[];++n<r;){var o=e[n];(o===t||o===a)&&(e[n]=a,s[i++]=n)}return s}function pn(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}function fn(e){return un(e)?function(e){for(var t=rt.lastIndex=0;rt.test(e);)++t;return t}(e):Zt(e)}function gn(e){return un(e)?function(e){return e.match(rt)||[]}(e):function(e){return e.split("")}(e)}function mn(e){for(var t=e.length;t--&&le.test(e.charAt(t)););return t}var vn=Gt({"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"});var yn=function e(t){var c,le=(t=null==t?mt:yn.defaults(mt.Object(),t,yn.pick(mt,ot))).Array,Ce=t.Date,Ee=t.Error,Se=t.Function,Oe=t.Math,Ie=t.Object,Be=t.RegExp,Re=t.String,De=t.TypeError,Ne=le.prototype,Le=Se.prototype,Ue=Ie.prototype,Pe=t["__core-js_shared__"],Ve=Le.toString,je=Ue.hasOwnProperty,Fe=0,Je=(c=/[^.]+$/.exec(Pe&&Pe.keys&&Pe.keys.IE_PROTO||""))?"Symbol(src)_1."+c:"",Ze=Ue.toString,Me=Ve.call(Ie),We=mt._,qe=Be("^"+Ve.call(je).replace(ae,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Xe=bt?t.Buffer:n,ze=t.Symbol,Ke=t.Uint8Array,Ye=Xe?Xe.allocUnsafe:n,Ge=dn(Ie.getPrototypeOf,Ie),Qe=Ie.create,He=Ue.propertyIsEnumerable,_e=Ne.splice,$e=ze?ze.isConcatSpreadable:n,et=ze?ze.iterator:n,rt=ze?ze.toStringTag:n,at=function(){try{var e=pa(Ie,"defineProperty");return e({},"",{}),e}catch{}}(),dt=t.clearTimeout!==mt.clearTimeout&&t.clearTimeout,ft=Ce&&Ce.now!==mt.Date.now&&Ce.now,gt=t.setTimeout!==mt.setTimeout&&t.setTimeout,vt=Oe.ceil,yt=Oe.floor,wt=Ie.getOwnPropertySymbols,xt=Xe?Xe.isBuffer:n,Zt=t.isFinite,Gt=Ne.join,bn=dn(Ie.keys,Ie),wn=Oe.max,xn=Oe.min,kn=Ce.now,Tn=t.parseInt,An=Oe.random,Cn=Ne.reverse,En=pa(t,"DataView"),Sn=pa(t,"Map"),On=pa(t,"Promise"),In=pa(t,"Set"),Bn=pa(t,"WeakMap"),Rn=pa(Ie,"create"),Dn=Bn&&new Bn,Nn={},Ln=Fa(En),Un=Fa(Sn),Pn=Fa(On),Vn=Fa(In),jn=Fa(Bn),Fn=ze?ze.prototype:n,Jn=Fn?Fn.valueOf:n,Zn=Fn?Fn.toString:n;function Mn(e){if(no(e)&&!Xs(e)&&!(e instanceof zn)){if(e instanceof Xn)return e;if(je.call(e,"__wrapped__"))return Ja(e)}return new Xn(e)}var Wn=function(){function e(){}return function(t){if(!to(t))return{};if(Qe)return Qe(t);e.prototype=t;var r=new e;return e.prototype=n,r}}();function qn(){}function Xn(e,t){this.__wrapped__=e,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=n}function zn(e){this.__wrapped__=e,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=g,this.__views__=[]}function Kn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function Yn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function Gn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function Qn(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new Gn;++t<n;)this.add(e[t])}function Hn(e){var t=this.__data__=new Yn(e);this.size=t.size}function _n(e,t){var n=Xs(e),r=!n&&qs(e),i=!n&&!r&&Gs(e),a=!n&&!r&&!i&&co(e),s=n||r||i||a,o=s?_t(e.length,Re):[],l=o.length;for(var u in e)(t||je.call(e,u))&&(!s||!("length"==u||i&&("offset"==u||"parent"==u)||a&&("buffer"==u||"byteLength"==u||"byteOffset"==u)||wa(u,l)))&&o.push(u);return o}function $n(e){var t=e.length;return t?e[Qr(0,t-1)]:n}function er(e,t){return Pa(Ri(e),ur(t,0,e.length))}function tr(e){return Pa(Ri(e))}function nr(e,t,r){(r!==n&&!Zs(e[t],r)||r===n&&!(t in e))&&or(e,t,r)}function rr(e,t,r){var i=e[t];(!je.call(e,t)||!Zs(i,r)||r===n&&!(t in e))&&or(e,t,r)}function ir(e,t){for(var n=e.length;n--;)if(Zs(e[n][0],t))return n;return-1}function ar(e,t,n,r){return fr(e,(function(e,i,a){t(r,e,n(e),a)})),r}function sr(e,t){return e&&Di(t,No(t),e)}function or(e,t,n){"__proto__"==t&&at?at(e,t,{configurable:!0,enumerable:!0,value:n,writable:!0}):e[t]=n}function lr(e,t){for(var r=-1,i=t.length,a=le(i),s=null==e;++r<i;)a[r]=s?n:Oo(e,t[r]);return a}function ur(e,t,r){return e==e&&(r!==n&&(e=e<=r?e:r),t!==n&&(e=e>=t?e:t)),e}function cr(e,t,r,i,a,s){var o,l=1&t,u=2&t,c=4&t;if(r&&(o=a?r(e,i,a,s):r(e)),o!==n)return o;if(!to(e))return e;var d=Xs(e);if(d){if(o=function(e){var t=e.length,n=new e.constructor(t);return t&&"string"==typeof e[0]&&je.call(e,"index")&&(n.index=e.index,n.input=e.input),n}(e),!l)return Ri(e,o)}else{var h=ma(e),p=h==A||h==C;if(Gs(e))return Ci(e,l);if(h==O||h==b||p&&!a){if(o=u||p?{}:ya(e),!l)return u?function(e,t){return Di(e,ga(e),t)}(e,function(e,t){return e&&Di(t,Lo(t),e)}(o,e)):function(e,t){return Di(e,fa(e),t)}(e,sr(o,e))}else{if(!ct[h])return a?e:{};o=function(e,t,n){var r=e.constructor;switch(t){case U:return Ei(e);case x:case k:return new r(+e);case P:return function(e,t){var n=t?Ei(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.byteLength)}(e,n);case V:case j:case F:case J:case Z:case M:case W:case q:case X:return Si(e,n);case E:return new r;case S:case D:return new r(e);case B:return function(e){var t=new e.constructor(e.source,me.exec(e));return t.lastIndex=e.lastIndex,t}(e);case R:return new r;case N:return function(e){return Jn?Ie(Jn.call(e)):{}}(e)}}(e,h,l)}}s||(s=new Hn);var f=s.get(e);if(f)return f;s.set(e,o),oo(e)?e.forEach((function(n){o.add(cr(n,t,r,n,e,s))})):ro(e)&&e.forEach((function(n,i){o.set(i,cr(n,t,r,i,e,s))}));var g=d?n:(c?u?sa:aa:u?Lo:No)(e);return Bt(g||e,(function(n,i){g&&(n=e[i=n]),rr(o,i,cr(n,t,r,i,e,s))})),o}function dr(e,t,r){var i=r.length;if(null==e)return!i;for(e=Ie(e);i--;){var a=r[i],s=t[a],o=e[a];if(o===n&&!(a in e)||!s(o))return!1}return!0}function hr(e,t,i){if("function"!=typeof e)throw new De(r);return Da((function(){e.apply(n,i)}),t)}function pr(e,t,n,r){var i=-1,a=Lt,s=!0,o=e.length,l=[],u=t.length;if(!o)return l;n&&(t=Pt(t,en(n))),r?(a=Ut,s=!1):t.length>=200&&(a=nn,s=!1,t=new Qn(t));e:for(;++i<o;){var c=e[i],d=null==n?c:n(c);if(c=r||0!==c?c:0,s&&d==d){for(var h=u;h--;)if(t[h]===d)continue e;l.push(c)}else a(t,d,r)||l.push(c)}return l}Mn.templateSettings={escape:$,evaluate:ee,interpolate:te,variable:"",imports:{_:Mn}},Mn.prototype=qn.prototype,Mn.prototype.constructor=Mn,Xn.prototype=Wn(qn.prototype),Xn.prototype.constructor=Xn,zn.prototype=Wn(qn.prototype),zn.prototype.constructor=zn,Kn.prototype.clear=function(){this.__data__=Rn?Rn(null):{},this.size=0},Kn.prototype.delete=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t},Kn.prototype.get=function(e){var t=this.__data__;if(Rn){var r=t[e];return r===i?n:r}return je.call(t,e)?t[e]:n},Kn.prototype.has=function(e){var t=this.__data__;return Rn?t[e]!==n:je.call(t,e)},Kn.prototype.set=function(e,t){var r=this.__data__;return this.size+=this.has(e)?0:1,r[e]=Rn&&t===n?i:t,this},Yn.prototype.clear=function(){this.__data__=[],this.size=0},Yn.prototype.delete=function(e){var t=this.__data__,n=ir(t,e);return!(n<0)&&(n==t.length-1?t.pop():_e.call(t,n,1),--this.size,!0)},Yn.prototype.get=function(e){var t=this.__data__,r=ir(t,e);return r<0?n:t[r][1]},Yn.prototype.has=function(e){return ir(this.__data__,e)>-1},Yn.prototype.set=function(e,t){var n=this.__data__,r=ir(n,e);return r<0?(++this.size,n.push([e,t])):n[r][1]=t,this},Gn.prototype.clear=function(){this.size=0,this.__data__={hash:new Kn,map:new(Sn||Yn),string:new Kn}},Gn.prototype.delete=function(e){var t=da(this,e).delete(e);return this.size-=t?1:0,t},Gn.prototype.get=function(e){return da(this,e).get(e)},Gn.prototype.has=function(e){return da(this,e).has(e)},Gn.prototype.set=function(e,t){var n=da(this,e),r=n.size;return n.set(e,t),this.size+=n.size==r?0:1,this},Qn.prototype.add=Qn.prototype.push=function(e){return this.__data__.set(e,i),this},Qn.prototype.has=function(e){return this.__data__.has(e)},Hn.prototype.clear=function(){this.__data__=new Yn,this.size=0},Hn.prototype.delete=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n},Hn.prototype.get=function(e){return this.__data__.get(e)},Hn.prototype.has=function(e){return this.__data__.has(e)},Hn.prototype.set=function(e,t){var n=this.__data__;if(n instanceof Yn){var r=n.__data__;if(!Sn||r.length<199)return r.push([e,t]),this.size=++n.size,this;n=this.__data__=new Gn(r)}return n.set(e,t),this.size=n.size,this};var fr=Ui(kr),gr=Ui(Tr,!0);function mr(e,t){var n=!0;return fr(e,(function(e,r,i){return n=!!t(e,r,i)})),n}function vr(e,t,r){for(var i=-1,a=e.length;++i<a;){var s=e[i],o=t(s);if(null!=o&&(l===n?o==o&&!uo(o):r(o,l)))var l=o,u=s}return u}function yr(e,t){var n=[];return fr(e,(function(e,r,i){t(e,r,i)&&n.push(e)})),n}function br(e,t,n,r,i){var a=-1,s=e.length;for(n||(n=ba),i||(i=[]);++a<s;){var o=e[a];t>0&&n(o)?t>1?br(o,t-1,n,r,i):Vt(i,o):r||(i[i.length]=o)}return i}var wr=Pi(),xr=Pi(!0);function kr(e,t){return e&&wr(e,t,No)}function Tr(e,t){return e&&xr(e,t,No)}function Ar(e,t){return Nt(t,(function(t){return _s(e[t])}))}function Cr(e,t){for(var r=0,i=(t=xi(t,e)).length;null!=e&&r<i;)e=e[ja(t[r++])];return r&&r==i?e:n}function Er(e,t,n){var r=t(e);return Xs(e)?r:Vt(r,n(e))}function Sr(e){return null==e?e===n?"[object Undefined]":"[object Null]":rt&&rt in Ie(e)?function(e){var t=je.call(e,rt),r=e[rt];try{e[rt]=n;var i=!0}catch{}var a=Ze.call(e);return i&&(t?e[rt]=r:delete e[rt]),a}(e):function(e){return Ze.call(e)}(e)}function Or(e,t){return e>t}function Ir(e,t){return null!=e&&je.call(e,t)}function Br(e,t){return null!=e&&t in Ie(e)}function Rr(e,t,r){for(var i=r?Ut:Lt,a=e[0].length,s=e.length,o=s,l=le(s),u=1/0,c=[];o--;){var d=e[o];o&&t&&(d=Pt(d,en(t))),u=xn(d.length,u),l[o]=!r&&(t||a>=120&&d.length>=120)?new Qn(o&&d):n}d=e[0];var h=-1,p=l[0];e:for(;++h<a&&c.length<u;){var f=d[h],g=t?t(f):f;if(f=r||0!==f?f:0,!(p?nn(p,g):i(c,g,r))){for(o=s;--o;){var m=l[o];if(!(m?nn(m,g):i(e[o],g,r)))continue e}p&&p.push(g),c.push(f)}}return c}function Dr(e,t,r){var i=null==(e=Ia(e,t=xi(t,e)))?e:e[ja(Ha(t))];return null==i?n:Ot(i,e,r)}function Nr(e){return no(e)&&Sr(e)==b}function Lr(e,t,r,i,a){return e===t||(null==e||null==t||!no(e)&&!no(t)?e!=e&&t!=t:function(e,t,r,i,a,s){var o=Xs(e),l=Xs(t),u=o?w:ma(e),c=l?w:ma(t),d=(u=u==b?O:u)==O,h=(c=c==b?O:c)==O,p=u==c;if(p&&Gs(e)){if(!Gs(t))return!1;o=!0,d=!1}if(p&&!d)return s||(s=new Hn),o||co(e)?ra(e,t,r,i,a,s):function(e,t,n,r,i,a,s){switch(n){case P:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case U:return!(e.byteLength!=t.byteLength||!a(new Ke(e),new Ke(t)));case x:case k:case S:return Zs(+e,+t);case T:return e.name==t.name&&e.message==t.message;case B:case D:return e==t+"";case E:var o=cn;case R:var l=1&r;if(o||(o=pn),e.size!=t.size&&!l)return!1;var u=s.get(e);if(u)return u==t;r|=2,s.set(e,t);var c=ra(o(e),o(t),r,i,a,s);return s.delete(e),c;case N:if(Jn)return Jn.call(e)==Jn.call(t)}return!1}(e,t,u,r,i,a,s);if(!(1&r)){var f=d&&je.call(e,"__wrapped__"),g=h&&je.call(t,"__wrapped__");if(f||g){var m=f?e.value():e,v=g?t.value():t;return s||(s=new Hn),a(m,v,r,i,s)}}return!!p&&(s||(s=new Hn),function(e,t,r,i,a,s){var o=1&r,l=aa(e),u=l.length,c=aa(t),d=c.length;if(u!=d&&!o)return!1;for(var h=u;h--;){var p=l[h];if(!(o?p in t:je.call(t,p)))return!1}var f=s.get(e),g=s.get(t);if(f&&g)return f==t&&g==e;var m=!0;s.set(e,t),s.set(t,e);for(var v=o;++h<u;){var y=e[p=l[h]],b=t[p];if(i)var w=o?i(b,y,p,t,e,s):i(y,b,p,e,t,s);if(!(w===n?y===b||a(y,b,r,i,s):w)){m=!1;break}v||(v="constructor"==p)}if(m&&!v){var x=e.constructor,k=t.constructor;x!=k&&"constructor"in e&&"constructor"in t&&!("function"==typeof x&&x instanceof x&&"function"==typeof k&&k instanceof k)&&(m=!1)}return s.delete(e),s.delete(t),m}(e,t,r,i,a,s))}(e,t,r,i,Lr,a))}function Ur(e,t,r,i){var a=r.length,s=a,o=!i;if(null==e)return!s;for(e=Ie(e);a--;){var l=r[a];if(o&&l[2]?l[1]!==e[l[0]]:!(l[0]in e))return!1}for(;++a<s;){var u=(l=r[a])[0],c=e[u],d=l[1];if(o&&l[2]){if(c===n&&!(u in e))return!1}else{var h=new Hn;if(i)var p=i(c,d,u,e,t,h);if(!(p===n?Lr(d,c,3,i,h):p))return!1}}return!0}function Pr(e){return!(!to(e)||function(e){return!!Je&&Je in e}(e))&&(_s(e)?qe:be).test(Fa(e))}function Vr(e){return"function"==typeof e?e:null==e?al:"object"==typeof e?Xs(e)?Wr(e[0],e[1]):Mr(e):fl(e)}function jr(e){if(!Ca(e))return bn(e);var t=[];for(var n in Ie(e))je.call(e,n)&&"constructor"!=n&&t.push(n);return t}function Fr(e){if(!to(e))return function(e){var t=[];if(null!=e)for(var n in Ie(e))t.push(n);return t}(e);var t=Ca(e),n=[];for(var r in e)"constructor"==r&&(t||!je.call(e,r))||n.push(r);return n}function Jr(e,t){return e<t}function Zr(e,t){var n=-1,r=Ks(e)?le(e.length):[];return fr(e,(function(e,i,a){r[++n]=t(e,i,a)})),r}function Mr(e){var t=ha(e);return 1==t.length&&t[0][2]?Sa(t[0][0],t[0][1]):function(n){return n===e||Ur(n,e,t)}}function Wr(e,t){return ka(e)&&Ea(t)?Sa(ja(e),t):function(r){var i=Oo(r,e);return i===n&&i===t?Io(r,e):Lr(t,i,3)}}function qr(e,t,r,i,a){e!==t&&wr(t,(function(s,o){if(a||(a=new Hn),to(s))!function(e,t,r,i,a,s,o){var l=Ba(e,r),u=Ba(t,r),c=o.get(u);if(c)return void nr(e,r,c);var d=s?s(l,u,r+"",e,t,o):n,h=d===n;if(h){var p=Xs(u),f=!p&&Gs(u),g=!p&&!f&&co(u);d=u,p||f||g?Xs(l)?d=l:Ys(l)?d=Ri(l):f?(h=!1,d=Ci(u,!0)):g?(h=!1,d=Si(u,!0)):d=[]:ao(u)||qs(u)?(d=l,qs(l)?d=bo(l):(!to(l)||_s(l))&&(d=ya(u))):h=!1}h&&(o.set(u,d),a(d,u,i,s,o),o.delete(u)),nr(e,r,d)}(e,t,o,r,qr,i,a);else{var l=i?i(Ba(e,o),s,o+"",e,t,a):n;l===n&&(l=s),nr(e,o,l)}}),Lo)}function Xr(e,t){var r=e.length;if(r)return wa(t+=t<0?r:0,r)?e[t]:n}function zr(e,t,n){t=t.length?Pt(t,(function(e){return Xs(e)?function(t){return Cr(t,1===e.length?e[0]:e)}:e})):[al];var r=-1;return t=Pt(t,en(ca())),function(e,t){var n=e.length;for(e.sort(t);n--;)e[n]=e[n].value;return e}(Zr(e,(function(e,n,i){return{criteria:Pt(t,(function(t){return t(e)})),index:++r,value:e}})),(function(e,t){return function(e,t,n){for(var r=-1,i=e.criteria,a=t.criteria,s=i.length,o=n.length;++r<s;){var l=Oi(i[r],a[r]);if(l)return r>=o?l:l*("desc"==n[r]?-1:1)}return e.index-t.index}(e,t,n)}))}function Kr(e,t,n){for(var r=-1,i=t.length,a={};++r<i;){var s=t[r],o=Cr(e,s);n(o,s)&&ti(a,xi(s,e),o)}return a}function Yr(e,t,n,r){var i=r?Xt:qt,a=-1,s=t.length,o=e;for(e===t&&(t=Ri(t)),n&&(o=Pt(e,en(n)));++a<s;)for(var l=0,u=t[a],c=n?n(u):u;(l=i(o,c,l,r))>-1;)o!==e&&_e.call(o,l,1),_e.call(e,l,1);return e}function Gr(e,t){for(var n=e?t.length:0,r=n-1;n--;){var i=t[n];if(n==r||i!==a){var a=i;wa(i)?_e.call(e,i,1):pi(e,i)}}return e}function Qr(e,t){return e+yt(An()*(t-e+1))}function Hr(e,t){var n="";if(!e||t<1||t>p)return n;do{t%2&&(n+=e),(t=yt(t/2))&&(e+=e)}while(t);return n}function _r(e,t){return Na(Oa(e,t,al),e+"")}function $r(e){return $n(Mo(e))}function ei(e,t){var n=Mo(e);return Pa(n,ur(t,0,n.length))}function ti(e,t,r,i){if(!to(e))return e;for(var a=-1,s=(t=xi(t,e)).length,o=s-1,l=e;null!=l&&++a<s;){var u=ja(t[a]),c=r;if("__proto__"===u||"constructor"===u||"prototype"===u)return e;if(a!=o){var d=l[u];(c=i?i(d,u,l):n)===n&&(c=to(d)?d:wa(t[a+1])?[]:{})}rr(l,u,c),l=l[u]}return e}var ni=Dn?function(e,t){return Dn.set(e,t),e}:al,ri=at?function(e,t){return at(e,"toString",{configurable:!0,enumerable:!1,value:nl(t),writable:!0})}:al;function ii(e){return Pa(Mo(e))}function ai(e,t,n){var r=-1,i=e.length;t<0&&(t=-t>i?0:i+t),(n=n>i?i:n)<0&&(n+=i),i=t>n?0:n-t>>>0,t>>>=0;for(var a=le(i);++r<i;)a[r]=e[r+t];return a}function si(e,t){var n;return fr(e,(function(e,r,i){return!(n=t(e,r,i))})),!!n}function oi(e,t,n){var r=0,i=null==e?r:e.length;if("number"==typeof t&&t==t&&i<=v){for(;r<i;){var a=r+i>>>1,s=e[a];null!==s&&!uo(s)&&(n?s<=t:s<t)?r=a+1:i=a}return i}return li(e,t,al,n)}function li(e,t,r,i){var a=0,s=null==e?0:e.length;if(0===s)return 0;for(var o=(t=r(t))!=t,l=null===t,u=uo(t),c=t===n;a<s;){var d=yt((a+s)/2),h=r(e[d]),p=h!==n,f=null===h,g=h==h,v=uo(h);if(o)var y=i||g;else y=c?g&&(i||p):l?g&&p&&(i||!f):u?g&&p&&!f&&(i||!v):!f&&!v&&(i?h<=t:h<t);y?a=d+1:s=d}return xn(s,m)}function ui(e,t){for(var n=-1,r=e.length,i=0,a=[];++n<r;){var s=e[n],o=t?t(s):s;if(!n||!Zs(o,l)){var l=o;a[i++]=0===s?0:s}}return a}function ci(e){return"number"==typeof e?e:uo(e)?f:+e}function di(e){if("string"==typeof e)return e;if(Xs(e))return Pt(e,di)+"";if(uo(e))return Zn?Zn.call(e):"";var t=e+"";return"0"==t&&1/e==-h?"-0":t}function hi(e,t,n){var r=-1,i=Lt,a=e.length,s=!0,o=[],l=o;if(n)s=!1,i=Ut;else if(a>=200){var u=t?null:Hi(e);if(u)return pn(u);s=!1,i=nn,l=new Qn}else l=t?[]:o;e:for(;++r<a;){var c=e[r],d=t?t(c):c;if(c=n||0!==c?c:0,s&&d==d){for(var h=l.length;h--;)if(l[h]===d)continue e;t&&l.push(d),o.push(c)}else i(l,d,n)||(l!==o&&l.push(d),o.push(c))}return o}function pi(e,t){return null==(e=Ia(e,t=xi(t,e)))||delete e[ja(Ha(t))]}function fi(e,t,n,r){return ti(e,t,n(Cr(e,t)),r)}function gi(e,t,n,r){for(var i=e.length,a=r?i:-1;(r?a--:++a<i)&&t(e[a],a,e););return n?ai(e,r?0:a,r?a+1:i):ai(e,r?a+1:0,r?i:a)}function mi(e,t){var n=e;return n instanceof zn&&(n=n.value()),jt(t,(function(e,t){return t.func.apply(t.thisArg,Vt([e],t.args))}),n)}function vi(e,t,n){var r=e.length;if(r<2)return r?hi(e[0]):[];for(var i=-1,a=le(r);++i<r;)for(var s=e[i],o=-1;++o<r;)o!=i&&(a[i]=pr(a[i]||s,e[o],t,n));return hi(br(a,1),t,n)}function yi(e,t,r){for(var i=-1,a=e.length,s=t.length,o={};++i<a;){var l=i<s?t[i]:n;r(o,e[i],l)}return o}function bi(e){return Ys(e)?e:[]}function wi(e){return"function"==typeof e?e:al}function xi(e,t){return Xs(e)?e:ka(e,t)?[e]:Va(wo(e))}var ki=_r;function Ti(e,t,r){var i=e.length;return r=r===n?i:r,!t&&r>=i?e:ai(e,t,r)}var Ai=dt||function(e){return mt.clearTimeout(e)};function Ci(e,t){if(t)return e.slice();var n=e.length,r=Ye?Ye(n):new e.constructor(n);return e.copy(r),r}function Ei(e){var t=new e.constructor(e.byteLength);return new Ke(t).set(new Ke(e)),t}function Si(e,t){var n=t?Ei(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.length)}function Oi(e,t){if(e!==t){var r=e!==n,i=null===e,a=e==e,s=uo(e),o=t!==n,l=null===t,u=t==t,c=uo(t);if(!l&&!c&&!s&&e>t||s&&o&&u&&!l&&!c||i&&o&&u||!r&&u||!a)return 1;if(!i&&!s&&!c&&e<t||c&&r&&a&&!i&&!s||l&&r&&a||!o&&a||!u)return-1}return 0}function Ii(e,t,n,r){for(var i=-1,a=e.length,s=n.length,o=-1,l=t.length,u=wn(a-s,0),c=le(l+u),d=!r;++o<l;)c[o]=t[o];for(;++i<s;)(d||i<a)&&(c[n[i]]=e[i]);for(;u--;)c[o++]=e[i++];return c}function Bi(e,t,n,r){for(var i=-1,a=e.length,s=-1,o=n.length,l=-1,u=t.length,c=wn(a-o,0),d=le(c+u),h=!r;++i<c;)d[i]=e[i];for(var p=i;++l<u;)d[p+l]=t[l];for(;++s<o;)(h||i<a)&&(d[p+n[s]]=e[i++]);return d}function Ri(e,t){var n=-1,r=e.length;for(t||(t=le(r));++n<r;)t[n]=e[n];return t}function Di(e,t,r,i){var a=!r;r||(r={});for(var s=-1,o=t.length;++s<o;){var l=t[s],u=i?i(r[l],e[l],l,r,e):n;u===n&&(u=e[l]),a?or(r,l,u):rr(r,l,u)}return r}function Ni(e,t){return function(n,r){var i=Xs(n)?It:ar,a=t?t():{};return i(n,e,ca(r,2),a)}}function Li(e){return _r((function(t,r){var i=-1,a=r.length,s=a>1?r[a-1]:n,o=a>2?r[2]:n;for(s=e.length>3&&"function"==typeof s?(a--,s):n,o&&xa(r[0],r[1],o)&&(s=a<3?n:s,a=1),t=Ie(t);++i<a;){var l=r[i];l&&e(t,l,i,s)}return t}))}function Ui(e,t){return function(n,r){if(null==n)return n;if(!Ks(n))return e(n,r);for(var i=n.length,a=t?i:-1,s=Ie(n);(t?a--:++a<i)&&!1!==r(s[a],a,s););return n}}function Pi(e){return function(t,n,r){for(var i=-1,a=Ie(t),s=r(t),o=s.length;o--;){var l=s[e?o:++i];if(!1===n(a[l],l,a))break}return t}}function Vi(e){return function(t){var r=un(t=wo(t))?gn(t):n,i=r?r[0]:t.charAt(0),a=r?Ti(r,1).join(""):t.slice(1);return i[e]()+a}}function ji(e){return function(t){return jt($o(Xo(t).replace(tt,"")),e,"")}}function Fi(e){return function(){var t=arguments;switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3]);case 5:return new e(t[0],t[1],t[2],t[3],t[4]);case 6:return new e(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new e(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var n=Wn(e.prototype),r=e.apply(n,t);return to(r)?r:n}}function Ji(e){return function(t,r,i){var a=Ie(t);if(!Ks(t)){var s=ca(r,3);t=No(t),r=function(e){return s(a[e],e,a)}}var o=e(t,r,i);return o>-1?a[s?t[o]:o]:n}}function Zi(e){return ia((function(t){var i=t.length,a=i,s=Xn.prototype.thru;for(e&&t.reverse();a--;){var o=t[a];if("function"!=typeof o)throw new De(r);if(s&&!l&&"wrapper"==la(o))var l=new Xn([],!0)}for(a=l?a:i;++a<i;){var u=la(o=t[a]),c="wrapper"==u?oa(o):n;l=c&&Ta(c[0])&&424==c[1]&&!c[4].length&&1==c[9]?l[la(c[0])].apply(l,c[3]):1==o.length&&Ta(o)?l[u]():l.thru(o)}return function(){var e=arguments,n=e[0];if(l&&1==e.length&&Xs(n))return l.plant(n).value();for(var r=0,a=i?t[r].apply(this,e):n;++r<i;)a=t[r].call(this,a);return a}}))}function Mi(e,t,r,i,a,s,o,l,c,d){var h=t&u,p=1&t,f=2&t,g=24&t,m=512&t,v=f?n:Fi(e);return function u(){for(var y=arguments.length,b=le(y),w=y;w--;)b[w]=arguments[w];if(g)var x=ua(u),k=function(e,t){for(var n=e.length,r=0;n--;)e[n]===t&&++r;return r}(b,x);if(i&&(b=Ii(b,i,a,g)),s&&(b=Bi(b,s,o,g)),y-=k,g&&y<d){var T=hn(b,x);return Gi(e,t,Mi,u.placeholder,r,b,T,l,c,d-y)}var A=p?r:this,C=f?A[e]:e;return y=b.length,l?b=function(e,t){for(var r=e.length,i=xn(t.length,r),a=Ri(e);i--;){var s=t[i];e[i]=wa(s,r)?a[s]:n}return e}(b,l):m&&y>1&&b.reverse(),h&&c<y&&(b.length=c),this&&this!==mt&&this instanceof u&&(C=v||Fi(C)),C.apply(A,b)}}function Wi(e,t){return function(n,r){return function(e,t,n,r){return kr(e,(function(e,i,a){t(r,n(e),i,a)})),r}(n,e,t(r),{})}}function qi(e,t){return function(r,i){var a;if(r===n&&i===n)return t;if(r!==n&&(a=r),i!==n){if(a===n)return i;"string"==typeof r||"string"==typeof i?(r=di(r),i=di(i)):(r=ci(r),i=ci(i)),a=e(r,i)}return a}}function Xi(e){return ia((function(t){return t=Pt(t,en(ca())),_r((function(n){var r=this;return e(t,(function(e){return Ot(e,r,n)}))}))}))}function zi(e,t){var r=(t=t===n?" ":di(t)).length;if(r<2)return r?Hr(t,e):t;var i=Hr(t,vt(e/fn(t)));return un(t)?Ti(gn(i),0,e).join(""):i.slice(0,e)}function Ki(e){return function(t,r,i){return i&&"number"!=typeof i&&xa(t,r,i)&&(r=i=n),t=go(t),r===n?(r=t,t=0):r=go(r),function(e,t,n,r){for(var i=-1,a=wn(vt((t-e)/(n||1)),0),s=le(a);a--;)s[r?a:++i]=e,e+=n;return s}(t,r,i=i===n?t<r?1:-1:go(i),e)}}function Yi(e){return function(t,n){return"string"==typeof t&&"string"==typeof n||(t=yo(t),n=yo(n)),e(t,n)}}function Gi(e,t,r,i,a,s,u,c,d,h){var p=8&t;t|=p?o:l,4&(t&=~(p?l:o))||(t&=-4);var f=[e,t,a,p?s:n,p?u:n,p?n:s,p?n:u,c,d,h],g=r.apply(n,f);return Ta(e)&&Ra(g,f),g.placeholder=i,La(g,e,t)}function Qi(e){var t=Oe[e];return function(e,n){if(e=yo(e),(n=null==n?0:xn(mo(n),292))&&Zt(e)){var r=(wo(e)+"e").split("e");return+((r=(wo(t(r[0]+"e"+(+r[1]+n)))+"e").split("e"))[0]+"e"+(+r[1]-n))}return t(e)}}var Hi=In&&1/pn(new In([,-0]))[1]==h?function(e){return new In(e)}:cl;function _i(e){return function(t){var n=ma(t);return n==E?cn(t):n==R?function(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=[e,e]})),n}(t):function(e,t){return Pt(t,(function(t){return[t,e[t]]}))}(t,e(t))}}function $i(e,t,i,c,h,p,f,g){var m=2&t;if(!m&&"function"!=typeof e)throw new De(r);var v=c?c.length:0;if(v||(t&=-97,c=h=n),f=f===n?f:wn(mo(f),0),g=g===n?g:mo(g),v-=h?h.length:0,t&l){var y=c,b=h;c=h=n}var w=m?n:oa(e),x=[e,t,i,c,h,y,b,p,f,g];if(w&&function(e,t){var n=e[1],r=t[1],i=n|r,s=i<131,o=r==u&&8==n||r==u&&n==d&&e[7].length<=t[8]||384==r&&t[7].length<=t[8]&&8==n;if(!s&&!o)return e;1&r&&(e[2]=t[2],i|=1&n?0:4);var l=t[3];if(l){var c=e[3];e[3]=c?Ii(c,l,t[4]):l,e[4]=c?hn(e[3],a):t[4]}l=t[5],l&&(c=e[5],e[5]=c?Bi(c,l,t[6]):l,e[6]=c?hn(e[5],a):t[6]),l=t[7],l&&(e[7]=l),r&u&&(e[8]=null==e[8]?t[8]:xn(e[8],t[8])),null==e[9]&&(e[9]=t[9]),e[0]=t[0],e[1]=i}(x,w),e=x[0],t=x[1],i=x[2],c=x[3],h=x[4],!(g=x[9]=x[9]===n?m?0:e.length:wn(x[9]-v,0))&&24&t&&(t&=-25),t&&1!=t)k=8==t||t==s?function(e,t,r){var i=Fi(e);return function a(){for(var s=arguments.length,o=le(s),l=s,u=ua(a);l--;)o[l]=arguments[l];var c=s<3&&o[0]!==u&&o[s-1]!==u?[]:hn(o,u);return(s-=c.length)<r?Gi(e,t,Mi,a.placeholder,n,o,c,n,n,r-s):Ot(this&&this!==mt&&this instanceof a?i:e,this,o)}}(e,t,g):t!=o&&33!=t||h.length?Mi.apply(n,x):function(e,t,n,r){var i=1&t,a=Fi(e);return function t(){for(var s=-1,o=arguments.length,l=-1,u=r.length,c=le(u+o),d=this&&this!==mt&&this instanceof t?a:e;++l<u;)c[l]=r[l];for(;o--;)c[l++]=arguments[++s];return Ot(d,i?n:this,c)}}(e,t,i,c);else var k=function(e,t,n){var r=1&t,i=Fi(e);return function t(){return(this&&this!==mt&&this instanceof t?i:e).apply(r?n:this,arguments)}}(e,t,i);return La((w?ni:Ra)(k,x),e,t)}function ea(e,t,r,i){return e===n||Zs(e,Ue[r])&&!je.call(i,r)?t:e}function ta(e,t,r,i,a,s){return to(e)&&to(t)&&(s.set(t,e),qr(e,t,n,ta,s),s.delete(t)),e}function na(e){return ao(e)?n:e}function ra(e,t,r,i,a,s){var o=1&r,l=e.length,u=t.length;if(l!=u&&!(o&&u>l))return!1;var c=s.get(e),d=s.get(t);if(c&&d)return c==t&&d==e;var h=-1,p=!0,f=2&r?new Qn:n;for(s.set(e,t),s.set(t,e);++h<l;){var g=e[h],m=t[h];if(i)var v=o?i(m,g,h,t,e,s):i(g,m,h,e,t,s);if(v!==n){if(v)continue;p=!1;break}if(f){if(!Jt(t,(function(e,t){if(!nn(f,t)&&(g===e||a(g,e,r,i,s)))return f.push(t)}))){p=!1;break}}else if(g!==m&&!a(g,m,r,i,s)){p=!1;break}}return s.delete(e),s.delete(t),p}function ia(e){return Na(Oa(e,n,za),e+"")}function aa(e){return Er(e,No,fa)}function sa(e){return Er(e,Lo,ga)}var oa=Dn?function(e){return Dn.get(e)}:cl;function la(e){for(var t=e.name+"",n=Nn[t],r=je.call(Nn,t)?n.length:0;r--;){var i=n[r],a=i.func;if(null==a||a==e)return i.name}return t}function ua(e){return(je.call(Mn,"placeholder")?Mn:e).placeholder}function ca(){var e=Mn.iteratee||sl;return e=e===sl?Vr:e,arguments.length?e(arguments[0],arguments[1]):e}function da(e,t){var n=e.__data__;return function(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}(t)?n["string"==typeof t?"string":"hash"]:n.map}function ha(e){for(var t=No(e),n=t.length;n--;){var r=t[n],i=e[r];t[n]=[r,i,Ea(i)]}return t}function pa(e,t){var r=function(e,t){return null==e?n:e[t]}(e,t);return Pr(r)?r:n}var fa=wt?function(e){return null==e?[]:(e=Ie(e),Nt(wt(e),(function(t){return He.call(e,t)})))}:vl,ga=wt?function(e){for(var t=[];e;)Vt(t,fa(e)),e=Ge(e);return t}:vl,ma=Sr;function va(e,t,n){for(var r=-1,i=(t=xi(t,e)).length,a=!1;++r<i;){var s=ja(t[r]);if(!(a=null!=e&&n(e,s)))break;e=e[s]}return a||++r!=i?a:!!(i=null==e?0:e.length)&&eo(i)&&wa(s,i)&&(Xs(e)||qs(e))}function ya(e){return"function"!=typeof e.constructor||Ca(e)?{}:Wn(Ge(e))}function ba(e){return Xs(e)||qs(e)||!!($e&&e&&e[$e])}function wa(e,t){var n=typeof e;return!!(t=t??p)&&("number"==n||"symbol"!=n&&xe.test(e))&&e>-1&&e%1==0&&e<t}function xa(e,t,n){if(!to(n))return!1;var r=typeof t;return!!("number"==r?Ks(n)&&wa(t,n.length):"string"==r&&t in n)&&Zs(n[t],e)}function ka(e,t){if(Xs(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!uo(e))||(re.test(e)||!ne.test(e)||null!=t&&e in Ie(t))}function Ta(e){var t=la(e),n=Mn[t];if("function"!=typeof n||!(t in zn.prototype))return!1;if(e===n)return!0;var r=oa(n);return!!r&&e===r[0]}(En&&ma(new En(new ArrayBuffer(1)))!=P||Sn&&ma(new Sn)!=E||On&&ma(On.resolve())!=I||In&&ma(new In)!=R||Bn&&ma(new Bn)!=L)&&(ma=function(e){var t=Sr(e),r=t==O?e.constructor:n,i=r?Fa(r):"";if(i)switch(i){case Ln:return P;case Un:return E;case Pn:return I;case Vn:return R;case jn:return L}return t});var Aa=Pe?_s:yl;function Ca(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||Ue)}function Ea(e){return e==e&&!to(e)}function Sa(e,t){return function(r){return null!=r&&(r[e]===t&&(t!==n||e in Ie(r)))}}function Oa(e,t,r){return t=wn(t===n?e.length-1:t,0),function(){for(var n=arguments,i=-1,a=wn(n.length-t,0),s=le(a);++i<a;)s[i]=n[t+i];i=-1;for(var o=le(t+1);++i<t;)o[i]=n[i];return o[t]=r(s),Ot(e,this,o)}}function Ia(e,t){return t.length<2?e:Cr(e,ai(t,0,-1))}function Ba(e,t){if(("constructor"!==t||"function"!=typeof e[t])&&"__proto__"!=t)return e[t]}var Ra=Ua(ni),Da=gt||function(e,t){return mt.setTimeout(e,t)},Na=Ua(ri);function La(e,t,n){var r=t+"";return Na(e,function(e,t){var n=t.length;if(!n)return e;var r=n-1;return t[r]=(n>1?"& ":"")+t[r],t=t.join(n>2?", ":" "),e.replace(ue,"{\n/* [wrapped with "+t+"] */\n")}(r,function(e,t){return Bt(y,(function(n){var r="_."+n[0];t&n[1]&&!Lt(e,r)&&e.push(r)})),e.sort()}(function(e){var t=e.match(ce);return t?t[1].split(de):[]}(r),n)))}function Ua(e){var t=0,r=0;return function(){var i=kn(),a=16-(i-r);if(r=i,a>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(n,arguments)}}function Pa(e,t){var r=-1,i=e.length,a=i-1;for(t=t===n?i:t;++r<t;){var s=Qr(r,a),o=e[s];e[s]=e[r],e[r]=o}return e.length=t,e}var Va=function(e){var t=Us(e,(function(e){return 500===n.size&&n.clear(),e})),n=t.cache;return t}((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(ie,(function(e,n,r,i){t.push(r?i.replace(fe,"$1"):n||e)})),t}));function ja(e){if("string"==typeof e||uo(e))return e;var t=e+"";return"0"==t&&1/e==-h?"-0":t}function Fa(e){if(null!=e){try{return Ve.call(e)}catch{}try{return e+""}catch{}}return""}function Ja(e){if(e instanceof zn)return e.clone();var t=new Xn(e.__wrapped__,e.__chain__);return t.__actions__=Ri(e.__actions__),t.__index__=e.__index__,t.__values__=e.__values__,t}var Za=_r((function(e,t){return Ys(e)?pr(e,br(t,1,Ys,!0)):[]})),Ma=_r((function(e,t){var r=Ha(t);return Ys(r)&&(r=n),Ys(e)?pr(e,br(t,1,Ys,!0),ca(r,2)):[]})),Wa=_r((function(e,t){var r=Ha(t);return Ys(r)&&(r=n),Ys(e)?pr(e,br(t,1,Ys,!0),n,r):[]}));function qa(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var i=null==n?0:mo(n);return i<0&&(i=wn(r+i,0)),Wt(e,ca(t,3),i)}function Xa(e,t,r){var i=null==e?0:e.length;if(!i)return-1;var a=i-1;return r!==n&&(a=mo(r),a=r<0?wn(i+a,0):xn(a,i-1)),Wt(e,ca(t,3),a,!0)}function za(e){return(null==e?0:e.length)?br(e,1):[]}function Ka(e){return e&&e.length?e[0]:n}var Ya=_r((function(e){var t=Pt(e,bi);return t.length&&t[0]===e[0]?Rr(t):[]})),Ga=_r((function(e){var t=Ha(e),r=Pt(e,bi);return t===Ha(r)?t=n:r.pop(),r.length&&r[0]===e[0]?Rr(r,ca(t,2)):[]})),Qa=_r((function(e){var t=Ha(e),r=Pt(e,bi);return(t="function"==typeof t?t:n)&&r.pop(),r.length&&r[0]===e[0]?Rr(r,n,t):[]}));function Ha(e){var t=null==e?0:e.length;return t?e[t-1]:n}var _a=_r($a);function $a(e,t){return e&&e.length&&t&&t.length?Yr(e,t):e}var es=ia((function(e,t){var n=null==e?0:e.length,r=lr(e,t);return Gr(e,Pt(t,(function(e){return wa(e,n)?+e:e})).sort(Oi)),r}));function ts(e){return null==e?e:Cn.call(e)}var ns=_r((function(e){return hi(br(e,1,Ys,!0))})),rs=_r((function(e){var t=Ha(e);return Ys(t)&&(t=n),hi(br(e,1,Ys,!0),ca(t,2))})),is=_r((function(e){var t=Ha(e);return t="function"==typeof t?t:n,hi(br(e,1,Ys,!0),n,t)}));function as(e){if(!e||!e.length)return[];var t=0;return e=Nt(e,(function(e){if(Ys(e))return t=wn(e.length,t),!0})),_t(t,(function(t){return Pt(e,Yt(t))}))}function ss(e,t){if(!e||!e.length)return[];var r=as(e);return null==t?r:Pt(r,(function(e){return Ot(t,n,e)}))}var os=_r((function(e,t){return Ys(e)?pr(e,t):[]})),ls=_r((function(e){return vi(Nt(e,Ys))})),us=_r((function(e){var t=Ha(e);return Ys(t)&&(t=n),vi(Nt(e,Ys),ca(t,2))})),cs=_r((function(e){var t=Ha(e);return t="function"==typeof t?t:n,vi(Nt(e,Ys),n,t)})),ds=_r(as);var hs=_r((function(e){var t=e.length,r=t>1?e[t-1]:n;return r="function"==typeof r?(e.pop(),r):n,ss(e,r)}));function ps(e){var t=Mn(e);return t.__chain__=!0,t}function fs(e,t){return t(e)}var gs=ia((function(e){var t=e.length,r=t?e[0]:0,i=this.__wrapped__,a=function(t){return lr(t,e)};return!(t>1||this.__actions__.length)&&i instanceof zn&&wa(r)?((i=i.slice(r,+r+(t?1:0))).__actions__.push({func:fs,args:[a],thisArg:n}),new Xn(i,this.__chain__).thru((function(e){return t&&!e.length&&e.push(n),e}))):this.thru(a)}));var ms=Ni((function(e,t,n){je.call(e,n)?++e[n]:or(e,n,1)}));var vs=Ji(qa),ys=Ji(Xa);function bs(e,t){return(Xs(e)?Bt:fr)(e,ca(t,3))}function ws(e,t){return(Xs(e)?Rt:gr)(e,ca(t,3))}var xs=Ni((function(e,t,n){je.call(e,n)?e[n].push(t):or(e,n,[t])}));var ks=_r((function(e,t,n){var r=-1,i="function"==typeof t,a=Ks(e)?le(e.length):[];return fr(e,(function(e){a[++r]=i?Ot(t,e,n):Dr(e,t,n)})),a})),Ts=Ni((function(e,t,n){or(e,n,t)}));function As(e,t){return(Xs(e)?Pt:Zr)(e,ca(t,3))}var Cs=Ni((function(e,t,n){e[n?0:1].push(t)}),(function(){return[[],[]]}));var Es=_r((function(e,t){if(null==e)return[];var n=t.length;return n>1&&xa(e,t[0],t[1])?t=[]:n>2&&xa(t[0],t[1],t[2])&&(t=[t[0]]),zr(e,br(t,1),[])})),Ss=ft||function(){return mt.Date.now()};function Os(e,t,r){return t=r?n:t,t=e&&null==t?e.length:t,$i(e,u,n,n,n,n,t)}function Is(e,t){var i;if("function"!=typeof t)throw new De(r);return e=mo(e),function(){return--e>0&&(i=t.apply(this,arguments)),e<=1&&(t=n),i}}var Bs=_r((function(e,t,n){var r=1;if(n.length){var i=hn(n,ua(Bs));r|=o}return $i(e,r,t,n,i)})),Rs=_r((function(e,t,n){var r=3;if(n.length){var i=hn(n,ua(Rs));r|=o}return $i(t,r,e,n,i)}));function Ds(e,t,i){var a,s,o,l,u,c,d=0,h=!1,p=!1,f=!0;if("function"!=typeof e)throw new De(r);function g(t){var r=a,i=s;return a=s=n,d=t,l=e.apply(i,r)}function m(e){var r=e-c;return c===n||r>=t||r<0||p&&e-d>=o}function v(){var e=Ss();if(m(e))return y(e);u=Da(v,function(e){var n=t-(e-c);return p?xn(n,o-(e-d)):n}(e))}function y(e){return u=n,f&&a?g(e):(a=s=n,l)}function b(){var e=Ss(),r=m(e);if(a=arguments,s=this,c=e,r){if(u===n)return function(e){return d=e,u=Da(v,t),h?g(e):l}(c);if(p)return Ai(u),u=Da(v,t),g(c)}return u===n&&(u=Da(v,t)),l}return t=yo(t)||0,to(i)&&(h=!!i.leading,o=(p="maxWait"in i)?wn(yo(i.maxWait)||0,t):o,f="trailing"in i?!!i.trailing:f),b.cancel=function(){u!==n&&Ai(u),d=0,a=c=s=u=n},b.flush=function(){return u===n?l:y(Ss())},b}var Ns=_r((function(e,t){return hr(e,1,t)})),Ls=_r((function(e,t,n){return hr(e,yo(t)||0,n)}));function Us(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new De(r);var n=function(){var r=arguments,i=t?t.apply(this,r):r[0],a=n.cache;if(a.has(i))return a.get(i);var s=e.apply(this,r);return n.cache=a.set(i,s)||a,s};return n.cache=new(Us.Cache||Gn),n}function Ps(e){if("function"!=typeof e)throw new De(r);return function(){var t=arguments;switch(t.length){case 0:return!e.call(this);case 1:return!e.call(this,t[0]);case 2:return!e.call(this,t[0],t[1]);case 3:return!e.call(this,t[0],t[1],t[2])}return!e.apply(this,t)}}Us.Cache=Gn;var Vs=ki((function(e,t){var n=(t=1==t.length&&Xs(t[0])?Pt(t[0],en(ca())):Pt(br(t,1),en(ca()))).length;return _r((function(r){for(var i=-1,a=xn(r.length,n);++i<a;)r[i]=t[i].call(this,r[i]);return Ot(e,this,r)}))})),js=_r((function(e,t){var r=hn(t,ua(js));return $i(e,o,n,t,r)})),Fs=_r((function(e,t){var r=hn(t,ua(Fs));return $i(e,l,n,t,r)})),Js=ia((function(e,t){return $i(e,d,n,n,n,t)}));function Zs(e,t){return e===t||e!=e&&t!=t}var Ms=Yi(Or),Ws=Yi((function(e,t){return e>=t})),qs=Nr(function(){return arguments}())?Nr:function(e){return no(e)&&je.call(e,"callee")&&!He.call(e,"callee")},Xs=le.isArray,zs=kt?en(kt):function(e){return no(e)&&Sr(e)==U};function Ks(e){return null!=e&&eo(e.length)&&!_s(e)}function Ys(e){return no(e)&&Ks(e)}var Gs=xt||yl,Qs=Tt?en(Tt):function(e){return no(e)&&Sr(e)==k};function Hs(e){if(!no(e))return!1;var t=Sr(e);return t==T||"[object DOMException]"==t||"string"==typeof e.message&&"string"==typeof e.name&&!ao(e)}function _s(e){if(!to(e))return!1;var t=Sr(e);return t==A||t==C||"[object AsyncFunction]"==t||"[object Proxy]"==t}function $s(e){return"number"==typeof e&&e==mo(e)}function eo(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=p}function to(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}function no(e){return null!=e&&"object"==typeof e}var ro=At?en(At):function(e){return no(e)&&ma(e)==E};function io(e){return"number"==typeof e||no(e)&&Sr(e)==S}function ao(e){if(!no(e)||Sr(e)!=O)return!1;var t=Ge(e);if(null===t)return!0;var n=je.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&Ve.call(n)==Me}var so=Ct?en(Ct):function(e){return no(e)&&Sr(e)==B};var oo=Et?en(Et):function(e){return no(e)&&ma(e)==R};function lo(e){return"string"==typeof e||!Xs(e)&&no(e)&&Sr(e)==D}function uo(e){return"symbol"==typeof e||no(e)&&Sr(e)==N}var co=St?en(St):function(e){return no(e)&&eo(e.length)&&!!ut[Sr(e)]};var ho=Yi(Jr),po=Yi((function(e,t){return e<=t}));function fo(e){if(!e)return[];if(Ks(e))return lo(e)?gn(e):Ri(e);if(et&&e[et])return function(e){for(var t,n=[];!(t=e.next()).done;)n.push(t.value);return n}(e[et]());var t=ma(e);return(t==E?cn:t==R?pn:Mo)(e)}function go(e){return e?(e=yo(e))===h||e===-h?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}function mo(e){var t=go(e),n=t%1;return t==t?n?t-n:t:0}function vo(e){return e?ur(mo(e),0,g):0}function yo(e){if("number"==typeof e)return e;if(uo(e))return f;if(to(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=to(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=$t(e);var n=ye.test(e);return n||we.test(e)?pt(e.slice(2),n?2:8):ve.test(e)?f:+e}function bo(e){return Di(e,Lo(e))}function wo(e){return null==e?"":di(e)}var xo=Li((function(e,t){if(Ca(t)||Ks(t))Di(t,No(t),e);else for(var n in t)je.call(t,n)&&rr(e,n,t[n])})),ko=Li((function(e,t){Di(t,Lo(t),e)})),To=Li((function(e,t,n,r){Di(t,Lo(t),e,r)})),Ao=Li((function(e,t,n,r){Di(t,No(t),e,r)})),Co=ia(lr);var Eo=_r((function(e,t){e=Ie(e);var r=-1,i=t.length,a=i>2?t[2]:n;for(a&&xa(t[0],t[1],a)&&(i=1);++r<i;)for(var s=t[r],o=Lo(s),l=-1,u=o.length;++l<u;){var c=o[l],d=e[c];(d===n||Zs(d,Ue[c])&&!je.call(e,c))&&(e[c]=s[c])}return e})),So=_r((function(e){return e.push(n,ta),Ot(Po,n,e)}));function Oo(e,t,r){var i=null==e?n:Cr(e,t);return i===n?r:i}function Io(e,t){return null!=e&&va(e,t,Br)}var Bo=Wi((function(e,t,n){null!=t&&"function"!=typeof t.toString&&(t=Ze.call(t)),e[t]=n}),nl(al)),Ro=Wi((function(e,t,n){null!=t&&"function"!=typeof t.toString&&(t=Ze.call(t)),je.call(e,t)?e[t].push(n):e[t]=[n]}),ca),Do=_r(Dr);function No(e){return Ks(e)?_n(e):jr(e)}function Lo(e){return Ks(e)?_n(e,!0):Fr(e)}var Uo=Li((function(e,t,n){qr(e,t,n)})),Po=Li((function(e,t,n,r){qr(e,t,n,r)})),Vo=ia((function(e,t){var n={};if(null==e)return n;var r=!1;t=Pt(t,(function(t){return t=xi(t,e),r||(r=t.length>1),t})),Di(e,sa(e),n),r&&(n=cr(n,7,na));for(var i=t.length;i--;)pi(n,t[i]);return n}));var jo=ia((function(e,t){return null==e?{}:function(e,t){return Kr(e,t,(function(t,n){return Io(e,n)}))}(e,t)}));function Fo(e,t){if(null==e)return{};var n=Pt(sa(e),(function(e){return[e]}));return t=ca(t),Kr(e,n,(function(e,n){return t(e,n[0])}))}var Jo=_i(No),Zo=_i(Lo);function Mo(e){return null==e?[]:tn(e,No(e))}var Wo=ji((function(e,t,n){return t=t.toLowerCase(),e+(n?qo(t):t)}));function qo(e){return _o(wo(e).toLowerCase())}function Xo(e){return(e=wo(e))&&e.replace(ke,sn).replace(nt,"")}var zo=ji((function(e,t,n){return e+(n?"-":"")+t.toLowerCase()})),Ko=ji((function(e,t,n){return e+(n?" ":"")+t.toLowerCase()})),Yo=Vi("toLowerCase");var Go=ji((function(e,t,n){return e+(n?"_":"")+t.toLowerCase()}));var Qo=ji((function(e,t,n){return e+(n?" ":"")+_o(t)}));var Ho=ji((function(e,t,n){return e+(n?" ":"")+t.toUpperCase()})),_o=Vi("toUpperCase");function $o(e,t,r){return e=wo(e),(t=r?n:t)===n?function(e){return st.test(e)}(e)?function(e){return e.match(it)||[]}(e):function(e){return e.match(he)||[]}(e):e.match(t)||[]}var el=_r((function(e,t){try{return Ot(e,n,t)}catch(e){return Hs(e)?e:new Ee(e)}})),tl=ia((function(e,t){return Bt(t,(function(t){t=ja(t),or(e,t,Bs(e[t],e))})),e}));function nl(e){return function(){return e}}var rl=Zi(),il=Zi(!0);function al(e){return e}function sl(e){return Vr("function"==typeof e?e:cr(e,1))}var ol=_r((function(e,t){return function(n){return Dr(n,e,t)}})),ll=_r((function(e,t){return function(n){return Dr(e,n,t)}}));function ul(e,t,n){var r=No(t),i=Ar(t,r);null==n&&(!to(t)||!i.length&&r.length)&&(n=t,t=e,e=this,i=Ar(t,No(t)));var a=!(to(n)&&"chain"in n&&!n.chain),s=_s(e);return Bt(i,(function(n){var r=t[n];e[n]=r,s&&(e.prototype[n]=function(){var t=this.__chain__;if(a||t){var n=e(this.__wrapped__);return(n.__actions__=Ri(this.__actions__)).push({func:r,args:arguments,thisArg:e}),n.__chain__=t,n}return r.apply(e,Vt([this.value()],arguments))})})),e}function cl(){}var dl=Xi(Pt),hl=Xi(Dt),pl=Xi(Jt);function fl(e){return ka(e)?Yt(ja(e)):function(e){return function(t){return Cr(t,e)}}(e)}var gl=Ki(),ml=Ki(!0);function vl(){return[]}function yl(){return!1}var bl=qi((function(e,t){return e+t}),0),wl=Qi("ceil"),xl=qi((function(e,t){return e/t}),1),kl=Qi("floor");var Tl=qi((function(e,t){return e*t}),1),Al=Qi("round"),Cl=qi((function(e,t){return e-t}),0);return Mn.after=function(e,t){if("function"!=typeof t)throw new De(r);return e=mo(e),function(){if(--e<1)return t.apply(this,arguments)}},Mn.ary=Os,Mn.assign=xo,Mn.assignIn=ko,Mn.assignInWith=To,Mn.assignWith=Ao,Mn.at=Co,Mn.before=Is,Mn.bind=Bs,Mn.bindAll=tl,Mn.bindKey=Rs,Mn.castArray=function(){if(!arguments.length)return[];var e=arguments[0];return Xs(e)?e:[e]},Mn.chain=ps,Mn.chunk=function(e,t,r){t=(r?xa(e,t,r):t===n)?1:wn(mo(t),0);var i=null==e?0:e.length;if(!i||t<1)return[];for(var a=0,s=0,o=le(vt(i/t));a<i;)o[s++]=ai(e,a,a+=t);return o},Mn.compact=function(e){for(var t=-1,n=null==e?0:e.length,r=0,i=[];++t<n;){var a=e[t];a&&(i[r++]=a)}return i},Mn.concat=function(){var e=arguments.length;if(!e)return[];for(var t=le(e-1),n=arguments[0],r=e;r--;)t[r-1]=arguments[r];return Vt(Xs(n)?Ri(n):[n],br(t,1))},Mn.cond=function(e){var t=null==e?0:e.length,n=ca();return e=t?Pt(e,(function(e){if("function"!=typeof e[1])throw new De(r);return[n(e[0]),e[1]]})):[],_r((function(n){for(var r=-1;++r<t;){var i=e[r];if(Ot(i[0],this,n))return Ot(i[1],this,n)}}))},Mn.conforms=function(e){return function(e){var t=No(e);return function(n){return dr(n,e,t)}}(cr(e,1))},Mn.constant=nl,Mn.countBy=ms,Mn.create=function(e,t){var n=Wn(e);return null==t?n:sr(n,t)},Mn.curry=function e(t,r,i){var a=$i(t,8,n,n,n,n,n,r=i?n:r);return a.placeholder=e.placeholder,a},Mn.curryRight=function e(t,r,i){var a=$i(t,s,n,n,n,n,n,r=i?n:r);return a.placeholder=e.placeholder,a},Mn.debounce=Ds,Mn.defaults=Eo,Mn.defaultsDeep=So,Mn.defer=Ns,Mn.delay=Ls,Mn.difference=Za,Mn.differenceBy=Ma,Mn.differenceWith=Wa,Mn.drop=function(e,t,r){var i=null==e?0:e.length;return i?ai(e,(t=r||t===n?1:mo(t))<0?0:t,i):[]},Mn.dropRight=function(e,t,r){var i=null==e?0:e.length;return i?ai(e,0,(t=i-(t=r||t===n?1:mo(t)))<0?0:t):[]},Mn.dropRightWhile=function(e,t){return e&&e.length?gi(e,ca(t,3),!0,!0):[]},Mn.dropWhile=function(e,t){return e&&e.length?gi(e,ca(t,3),!0):[]},Mn.fill=function(e,t,r,i){var a=null==e?0:e.length;return a?(r&&"number"!=typeof r&&xa(e,t,r)&&(r=0,i=a),function(e,t,r,i){var a=e.length;for((r=mo(r))<0&&(r=-r>a?0:a+r),(i=i===n||i>a?a:mo(i))<0&&(i+=a),i=r>i?0:vo(i);r<i;)e[r++]=t;return e}(e,t,r,i)):[]},Mn.filter=function(e,t){return(Xs(e)?Nt:yr)(e,ca(t,3))},Mn.flatMap=function(e,t){return br(As(e,t),1)},Mn.flatMapDeep=function(e,t){return br(As(e,t),h)},Mn.flatMapDepth=function(e,t,r){return r=r===n?1:mo(r),br(As(e,t),r)},Mn.flatten=za,Mn.flattenDeep=function(e){return(null==e?0:e.length)?br(e,h):[]},Mn.flattenDepth=function(e,t){return(null==e?0:e.length)?br(e,t=t===n?1:mo(t)):[]},Mn.flip=function(e){return $i(e,512)},Mn.flow=rl,Mn.flowRight=il,Mn.fromPairs=function(e){for(var t=-1,n=null==e?0:e.length,r={};++t<n;){var i=e[t];r[i[0]]=i[1]}return r},Mn.functions=function(e){return null==e?[]:Ar(e,No(e))},Mn.functionsIn=function(e){return null==e?[]:Ar(e,Lo(e))},Mn.groupBy=xs,Mn.initial=function(e){return(null==e?0:e.length)?ai(e,0,-1):[]},Mn.intersection=Ya,Mn.intersectionBy=Ga,Mn.intersectionWith=Qa,Mn.invert=Bo,Mn.invertBy=Ro,Mn.invokeMap=ks,Mn.iteratee=sl,Mn.keyBy=Ts,Mn.keys=No,Mn.keysIn=Lo,Mn.map=As,Mn.mapKeys=function(e,t){var n={};return t=ca(t,3),kr(e,(function(e,r,i){or(n,t(e,r,i),e)})),n},Mn.mapValues=function(e,t){var n={};return t=ca(t,3),kr(e,(function(e,r,i){or(n,r,t(e,r,i))})),n},Mn.matches=function(e){return Mr(cr(e,1))},Mn.matchesProperty=function(e,t){return Wr(e,cr(t,1))},Mn.memoize=Us,Mn.merge=Uo,Mn.mergeWith=Po,Mn.method=ol,Mn.methodOf=ll,Mn.mixin=ul,Mn.negate=Ps,Mn.nthArg=function(e){return e=mo(e),_r((function(t){return Xr(t,e)}))},Mn.omit=Vo,Mn.omitBy=function(e,t){return Fo(e,Ps(ca(t)))},Mn.once=function(e){return Is(2,e)},Mn.orderBy=function(e,t,r,i){return null==e?[]:(Xs(t)||(t=null==t?[]:[t]),Xs(r=i?n:r)||(r=null==r?[]:[r]),zr(e,t,r))},Mn.over=dl,Mn.overArgs=Vs,Mn.overEvery=hl,Mn.overSome=pl,Mn.partial=js,Mn.partialRight=Fs,Mn.partition=Cs,Mn.pick=jo,Mn.pickBy=Fo,Mn.property=fl,Mn.propertyOf=function(e){return function(t){return null==e?n:Cr(e,t)}},Mn.pull=_a,Mn.pullAll=$a,Mn.pullAllBy=function(e,t,n){return e&&e.length&&t&&t.length?Yr(e,t,ca(n,2)):e},Mn.pullAllWith=function(e,t,r){return e&&e.length&&t&&t.length?Yr(e,t,n,r):e},Mn.pullAt=es,Mn.range=gl,Mn.rangeRight=ml,Mn.rearg=Js,Mn.reject=function(e,t){return(Xs(e)?Nt:yr)(e,Ps(ca(t,3)))},Mn.remove=function(e,t){var n=[];if(!e||!e.length)return n;var r=-1,i=[],a=e.length;for(t=ca(t,3);++r<a;){var s=e[r];t(s,r,e)&&(n.push(s),i.push(r))}return Gr(e,i),n},Mn.rest=function(e,t){if("function"!=typeof e)throw new De(r);return _r(e,t=t===n?t:mo(t))},Mn.reverse=ts,Mn.sampleSize=function(e,t,r){return t=(r?xa(e,t,r):t===n)?1:mo(t),(Xs(e)?er:ei)(e,t)},Mn.set=function(e,t,n){return null==e?e:ti(e,t,n)},Mn.setWith=function(e,t,r,i){return i="function"==typeof i?i:n,null==e?e:ti(e,t,r,i)},Mn.shuffle=function(e){return(Xs(e)?tr:ii)(e)},Mn.slice=function(e,t,r){var i=null==e?0:e.length;return i?(r&&"number"!=typeof r&&xa(e,t,r)?(t=0,r=i):(t=null==t?0:mo(t),r=r===n?i:mo(r)),ai(e,t,r)):[]},Mn.sortBy=Es,Mn.sortedUniq=function(e){return e&&e.length?ui(e):[]},Mn.sortedUniqBy=function(e,t){return e&&e.length?ui(e,ca(t,2)):[]},Mn.split=function(e,t,r){return r&&"number"!=typeof r&&xa(e,t,r)&&(t=r=n),(r=r===n?g:r>>>0)?(e=wo(e))&&("string"==typeof t||null!=t&&!so(t))&&(!(t=di(t))&&un(e))?Ti(gn(e),0,r):e.split(t,r):[]},Mn.spread=function(e,t){if("function"!=typeof e)throw new De(r);return t=null==t?0:wn(mo(t),0),_r((function(n){var r=n[t],i=Ti(n,0,t);return r&&Vt(i,r),Ot(e,this,i)}))},Mn.tail=function(e){var t=null==e?0:e.length;return t?ai(e,1,t):[]},Mn.take=function(e,t,r){return e&&e.length?ai(e,0,(t=r||t===n?1:mo(t))<0?0:t):[]},Mn.takeRight=function(e,t,r){var i=null==e?0:e.length;return i?ai(e,(t=i-(t=r||t===n?1:mo(t)))<0?0:t,i):[]},Mn.takeRightWhile=function(e,t){return e&&e.length?gi(e,ca(t,3),!1,!0):[]},Mn.takeWhile=function(e,t){return e&&e.length?gi(e,ca(t,3)):[]},Mn.tap=function(e,t){return t(e),e},Mn.throttle=function(e,t,n){var i=!0,a=!0;if("function"!=typeof e)throw new De(r);return to(n)&&(i="leading"in n?!!n.leading:i,a="trailing"in n?!!n.trailing:a),Ds(e,t,{leading:i,maxWait:t,trailing:a})},Mn.thru=fs,Mn.toArray=fo,Mn.toPairs=Jo,Mn.toPairsIn=Zo,Mn.toPath=function(e){return Xs(e)?Pt(e,ja):uo(e)?[e]:Ri(Va(wo(e)))},Mn.toPlainObject=bo,Mn.transform=function(e,t,n){var r=Xs(e),i=r||Gs(e)||co(e);if(t=ca(t,4),null==n){var a=e&&e.constructor;n=i?r?new a:[]:to(e)&&_s(a)?Wn(Ge(e)):{}}return(i?Bt:kr)(e,(function(e,r,i){return t(n,e,r,i)})),n},Mn.unary=function(e){return Os(e,1)},Mn.union=ns,Mn.unionBy=rs,Mn.unionWith=is,Mn.uniq=function(e){return e&&e.length?hi(e):[]},Mn.uniqBy=function(e,t){return e&&e.length?hi(e,ca(t,2)):[]},Mn.uniqWith=function(e,t){return t="function"==typeof t?t:n,e&&e.length?hi(e,n,t):[]},Mn.unset=function(e,t){return null==e||pi(e,t)},Mn.unzip=as,Mn.unzipWith=ss,Mn.update=function(e,t,n){return null==e?e:fi(e,t,wi(n))},Mn.updateWith=function(e,t,r,i){return i="function"==typeof i?i:n,null==e?e:fi(e,t,wi(r),i)},Mn.values=Mo,Mn.valuesIn=function(e){return null==e?[]:tn(e,Lo(e))},Mn.without=os,Mn.words=$o,Mn.wrap=function(e,t){return js(wi(t),e)},Mn.xor=ls,Mn.xorBy=us,Mn.xorWith=cs,Mn.zip=ds,Mn.zipObject=function(e,t){return yi(e||[],t||[],rr)},Mn.zipObjectDeep=function(e,t){return yi(e||[],t||[],ti)},Mn.zipWith=hs,Mn.entries=Jo,Mn.entriesIn=Zo,Mn.extend=ko,Mn.extendWith=To,ul(Mn,Mn),Mn.add=bl,Mn.attempt=el,Mn.camelCase=Wo,Mn.capitalize=qo,Mn.ceil=wl,Mn.clamp=function(e,t,r){return r===n&&(r=t,t=n),r!==n&&(r=(r=yo(r))==r?r:0),t!==n&&(t=(t=yo(t))==t?t:0),ur(yo(e),t,r)},Mn.clone=function(e){return cr(e,4)},Mn.cloneDeep=function(e){return cr(e,5)},Mn.cloneDeepWith=function(e,t){return cr(e,5,t="function"==typeof t?t:n)},Mn.cloneWith=function(e,t){return cr(e,4,t="function"==typeof t?t:n)},Mn.conformsTo=function(e,t){return null==t||dr(e,t,No(t))},Mn.deburr=Xo,Mn.defaultTo=function(e,t){return null==e||e!=e?t:e},Mn.divide=xl,Mn.endsWith=function(e,t,r){e=wo(e),t=di(t);var i=e.length,a=r=r===n?i:ur(mo(r),0,i);return(r-=t.length)>=0&&e.slice(r,a)==t},Mn.eq=Zs,Mn.escape=function(e){return(e=wo(e))&&_.test(e)?e.replace(Q,on):e},Mn.escapeRegExp=function(e){return(e=wo(e))&&se.test(e)?e.replace(ae,"\\$&"):e},Mn.every=function(e,t,r){var i=Xs(e)?Dt:mr;return r&&xa(e,t,r)&&(t=n),i(e,ca(t,3))},Mn.find=vs,Mn.findIndex=qa,Mn.findKey=function(e,t){return Mt(e,ca(t,3),kr)},Mn.findLast=ys,Mn.findLastIndex=Xa,Mn.findLastKey=function(e,t){return Mt(e,ca(t,3),Tr)},Mn.floor=kl,Mn.forEach=bs,Mn.forEachRight=ws,Mn.forIn=function(e,t){return null==e?e:wr(e,ca(t,3),Lo)},Mn.forInRight=function(e,t){return null==e?e:xr(e,ca(t,3),Lo)},Mn.forOwn=function(e,t){return e&&kr(e,ca(t,3))},Mn.forOwnRight=function(e,t){return e&&Tr(e,ca(t,3))},Mn.get=Oo,Mn.gt=Ms,Mn.gte=Ws,Mn.has=function(e,t){return null!=e&&va(e,t,Ir)},Mn.hasIn=Io,Mn.head=Ka,Mn.identity=al,Mn.includes=function(e,t,n,r){e=Ks(e)?e:Mo(e),n=n&&!r?mo(n):0;var i=e.length;return n<0&&(n=wn(i+n,0)),lo(e)?n<=i&&e.indexOf(t,n)>-1:!!i&&qt(e,t,n)>-1},Mn.indexOf=function(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var i=null==n?0:mo(n);return i<0&&(i=wn(r+i,0)),qt(e,t,i)},Mn.inRange=function(e,t,r){return t=go(t),r===n?(r=t,t=0):r=go(r),function(e,t,n){return e>=xn(t,n)&&e<wn(t,n)}(e=yo(e),t,r)},Mn.invoke=Do,Mn.isArguments=qs,Mn.isArray=Xs,Mn.isArrayBuffer=zs,Mn.isArrayLike=Ks,Mn.isArrayLikeObject=Ys,Mn.isBoolean=function(e){return!0===e||!1===e||no(e)&&Sr(e)==x},Mn.isBuffer=Gs,Mn.isDate=Qs,Mn.isElement=function(e){return no(e)&&1===e.nodeType&&!ao(e)},Mn.isEmpty=function(e){if(null==e)return!0;if(Ks(e)&&(Xs(e)||"string"==typeof e||"function"==typeof e.splice||Gs(e)||co(e)||qs(e)))return!e.length;var t=ma(e);if(t==E||t==R)return!e.size;if(Ca(e))return!jr(e).length;for(var n in e)if(je.call(e,n))return!1;return!0},Mn.isEqual=function(e,t){return Lr(e,t)},Mn.isEqualWith=function(e,t,r){var i=(r="function"==typeof r?r:n)?r(e,t):n;return i===n?Lr(e,t,n,r):!!i},Mn.isError=Hs,Mn.isFinite=function(e){return"number"==typeof e&&Zt(e)},Mn.isFunction=_s,Mn.isInteger=$s,Mn.isLength=eo,Mn.isMap=ro,Mn.isMatch=function(e,t){return e===t||Ur(e,t,ha(t))},Mn.isMatchWith=function(e,t,r){return r="function"==typeof r?r:n,Ur(e,t,ha(t),r)},Mn.isNaN=function(e){return io(e)&&e!=+e},Mn.isNative=function(e){if(Aa(e))throw new Ee("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");return Pr(e)},Mn.isNil=function(e){return null==e},Mn.isNull=function(e){return null===e},Mn.isNumber=io,Mn.isObject=to,Mn.isObjectLike=no,Mn.isPlainObject=ao,Mn.isRegExp=so,Mn.isSafeInteger=function(e){return $s(e)&&e>=-p&&e<=p},Mn.isSet=oo,Mn.isString=lo,Mn.isSymbol=uo,Mn.isTypedArray=co,Mn.isUndefined=function(e){return e===n},Mn.isWeakMap=function(e){return no(e)&&ma(e)==L},Mn.isWeakSet=function(e){return no(e)&&"[object WeakSet]"==Sr(e)},Mn.join=function(e,t){return null==e?"":Gt.call(e,t)},Mn.kebabCase=zo,Mn.last=Ha,Mn.lastIndexOf=function(e,t,r){var i=null==e?0:e.length;if(!i)return-1;var a=i;return r!==n&&(a=(a=mo(r))<0?wn(i+a,0):xn(a,i-1)),t==t?function(e,t,n){for(var r=n+1;r--;)if(e[r]===t)return r;return r}(e,t,a):Wt(e,zt,a,!0)},Mn.lowerCase=Ko,Mn.lowerFirst=Yo,Mn.lt=ho,Mn.lte=po,Mn.max=function(e){return e&&e.length?vr(e,al,Or):n},Mn.maxBy=function(e,t){return e&&e.length?vr(e,ca(t,2),Or):n},Mn.mean=function(e){return Kt(e,al)},Mn.meanBy=function(e,t){return Kt(e,ca(t,2))},Mn.min=function(e){return e&&e.length?vr(e,al,Jr):n},Mn.minBy=function(e,t){return e&&e.length?vr(e,ca(t,2),Jr):n},Mn.stubArray=vl,Mn.stubFalse=yl,Mn.stubObject=function(){return{}},Mn.stubString=function(){return""},Mn.stubTrue=function(){return!0},Mn.multiply=Tl,Mn.nth=function(e,t){return e&&e.length?Xr(e,mo(t)):n},Mn.noConflict=function(){return mt._===this&&(mt._=We),this},Mn.noop=cl,Mn.now=Ss,Mn.pad=function(e,t,n){e=wo(e);var r=(t=mo(t))?fn(e):0;if(!t||r>=t)return e;var i=(t-r)/2;return zi(yt(i),n)+e+zi(vt(i),n)},Mn.padEnd=function(e,t,n){e=wo(e);var r=(t=mo(t))?fn(e):0;return t&&r<t?e+zi(t-r,n):e},Mn.padStart=function(e,t,n){e=wo(e);var r=(t=mo(t))?fn(e):0;return t&&r<t?zi(t-r,n)+e:e},Mn.parseInt=function(e,t,n){return n||null==t?t=0:t&&(t=+t),Tn(wo(e).replace(oe,""),t||0)},Mn.random=function(e,t,r){if(r&&"boolean"!=typeof r&&xa(e,t,r)&&(t=r=n),r===n&&("boolean"==typeof t?(r=t,t=n):"boolean"==typeof e&&(r=e,e=n)),e===n&&t===n?(e=0,t=1):(e=go(e),t===n?(t=e,e=0):t=go(t)),e>t){var i=e;e=t,t=i}if(r||e%1||t%1){var a=An();return xn(e+a*(t-e+ht("1e-"+((a+"").length-1))),t)}return Qr(e,t)},Mn.reduce=function(e,t,n){var r=Xs(e)?jt:Qt,i=arguments.length<3;return r(e,ca(t,4),n,i,fr)},Mn.reduceRight=function(e,t,n){var r=Xs(e)?Ft:Qt,i=arguments.length<3;return r(e,ca(t,4),n,i,gr)},Mn.repeat=function(e,t,r){return t=(r?xa(e,t,r):t===n)?1:mo(t),Hr(wo(e),t)},Mn.replace=function(){var e=arguments,t=wo(e[0]);return e.length<3?t:t.replace(e[1],e[2])},Mn.result=function(e,t,r){var i=-1,a=(t=xi(t,e)).length;for(a||(a=1,e=n);++i<a;){var s=null==e?n:e[ja(t[i])];s===n&&(i=a,s=r),e=_s(s)?s.call(e):s}return e},Mn.round=Al,Mn.runInContext=e,Mn.sample=function(e){return(Xs(e)?$n:$r)(e)},Mn.size=function(e){if(null==e)return 0;if(Ks(e))return lo(e)?fn(e):e.length;var t=ma(e);return t==E||t==R?e.size:jr(e).length},Mn.snakeCase=Go,Mn.some=function(e,t,r){var i=Xs(e)?Jt:si;return r&&xa(e,t,r)&&(t=n),i(e,ca(t,3))},Mn.sortedIndex=function(e,t){return oi(e,t)},Mn.sortedIndexBy=function(e,t,n){return li(e,t,ca(n,2))},Mn.sortedIndexOf=function(e,t){var n=null==e?0:e.length;if(n){var r=oi(e,t);if(r<n&&Zs(e[r],t))return r}return-1},Mn.sortedLastIndex=function(e,t){return oi(e,t,!0)},Mn.sortedLastIndexBy=function(e,t,n){return li(e,t,ca(n,2),!0)},Mn.sortedLastIndexOf=function(e,t){if(null==e?0:e.length){var n=oi(e,t,!0)-1;if(Zs(e[n],t))return n}return-1},Mn.startCase=Qo,Mn.startsWith=function(e,t,n){return e=wo(e),n=null==n?0:ur(mo(n),0,e.length),t=di(t),e.slice(n,n+t.length)==t},Mn.subtract=Cl,Mn.sum=function(e){return e&&e.length?Ht(e,al):0},Mn.sumBy=function(e,t){return e&&e.length?Ht(e,ca(t,2)):0},Mn.template=function(e,t,r){var i=Mn.templateSettings;r&&xa(e,t,r)&&(t=n),e=wo(e),t=To({},t,i,ea);var a,s,o=To({},t.imports,i.imports,ea),l=No(o),u=tn(o,l),c=0,d=t.interpolate||Te,h="__p += '",p=Be((t.escape||Te).source+"|"+d.source+"|"+(d===te?ge:Te).source+"|"+(t.evaluate||Te).source+"|$","g"),f="//# sourceURL="+(je.call(t,"sourceURL")?(t.sourceURL+"").replace(/\s/g," "):"lodash.templateSources["+ ++lt+"]")+"\n";e.replace(p,(function(t,n,r,i,o,l){return r||(r=i),h+=e.slice(c,l).replace(Ae,ln),n&&(a=!0,h+="' +\n__e("+n+") +\n'"),o&&(s=!0,h+="';\n"+o+";\n__p += '"),r&&(h+="' +\n((__t = ("+r+")) == null ? '' : __t) +\n'"),c=l+t.length,t})),h+="';\n";var g=je.call(t,"variable")&&t.variable;if(g){if(pe.test(g))throw new Ee("Invalid `variable` option passed into `_.template`")}else h="with (obj) {\n"+h+"\n}\n";h=(s?h.replace(z,""):h).replace(K,"$1").replace(Y,"$1;"),h="function("+(g||"obj")+") {\n"+(g?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(a?", __e = _.escape":"")+(s?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+h+"return __p\n}";var m=el((function(){return Se(l,f+"return "+h).apply(n,u)}));if(m.source=h,Hs(m))throw m;return m},Mn.times=function(e,t){if((e=mo(e))<1||e>p)return[];var n=g,r=xn(e,g);t=ca(t),e-=g;for(var i=_t(r,t);++n<e;)t(n);return i},Mn.toFinite=go,Mn.toInteger=mo,Mn.toLength=vo,Mn.toLower=function(e){return wo(e).toLowerCase()},Mn.toNumber=yo,Mn.toSafeInteger=function(e){return e?ur(mo(e),-p,p):0===e?e:0},Mn.toString=wo,Mn.toUpper=function(e){return wo(e).toUpperCase()},Mn.trim=function(e,t,r){if((e=wo(e))&&(r||t===n))return $t(e);if(!e||!(t=di(t)))return e;var i=gn(e),a=gn(t);return Ti(i,rn(i,a),an(i,a)+1).join("")},Mn.trimEnd=function(e,t,r){if((e=wo(e))&&(r||t===n))return e.slice(0,mn(e)+1);if(!e||!(t=di(t)))return e;var i=gn(e);return Ti(i,0,an(i,gn(t))+1).join("")},Mn.trimStart=function(e,t,r){if((e=wo(e))&&(r||t===n))return e.replace(oe,"");if(!e||!(t=di(t)))return e;var i=gn(e);return Ti(i,rn(i,gn(t))).join("")},Mn.truncate=function(e,t){var r=30,i="...";if(to(t)){var a="separator"in t?t.separator:a;r="length"in t?mo(t.length):r,i="omission"in t?di(t.omission):i}var s=(e=wo(e)).length;if(un(e)){var o=gn(e);s=o.length}if(r>=s)return e;var l=r-fn(i);if(l<1)return i;var u=o?Ti(o,0,l).join(""):e.slice(0,l);if(a===n)return u+i;if(o&&(l+=u.length-l),so(a)){if(e.slice(l).search(a)){var c,d=u;for(a.global||(a=Be(a.source,wo(me.exec(a))+"g")),a.lastIndex=0;c=a.exec(d);)var h=c.index;u=u.slice(0,h===n?l:h)}}else if(e.indexOf(di(a),l)!=l){var p=u.lastIndexOf(a);p>-1&&(u=u.slice(0,p))}return u+i},Mn.unescape=function(e){return(e=wo(e))&&H.test(e)?e.replace(G,vn):e},Mn.uniqueId=function(e){var t=++Fe;return wo(e)+t},Mn.upperCase=Ho,Mn.upperFirst=_o,Mn.each=bs,Mn.eachRight=ws,Mn.first=Ka,ul(Mn,function(){var e={};return kr(Mn,(function(t,n){je.call(Mn.prototype,n)||(e[n]=t)})),e}(),{chain:!1}),Mn.VERSION="4.17.21",Bt(["bind","bindKey","curry","curryRight","partial","partialRight"],(function(e){Mn[e].placeholder=Mn})),Bt(["drop","take"],(function(e,t){zn.prototype[e]=function(r){r=r===n?1:wn(mo(r),0);var i=this.__filtered__&&!t?new zn(this):this.clone();return i.__filtered__?i.__takeCount__=xn(r,i.__takeCount__):i.__views__.push({size:xn(r,g),type:e+(i.__dir__<0?"Right":"")}),i},zn.prototype[e+"Right"]=function(t){return this.reverse()[e](t).reverse()}})),Bt(["filter","map","takeWhile"],(function(e,t){var n=t+1,r=1==n||3==n;zn.prototype[e]=function(e){var t=this.clone();return t.__iteratees__.push({iteratee:ca(e,3),type:n}),t.__filtered__=t.__filtered__||r,t}})),Bt(["head","last"],(function(e,t){var n="take"+(t?"Right":"");zn.prototype[e]=function(){return this[n](1).value()[0]}})),Bt(["initial","tail"],(function(e,t){var n="drop"+(t?"":"Right");zn.prototype[e]=function(){return this.__filtered__?new zn(this):this[n](1)}})),zn.prototype.compact=function(){return this.filter(al)},zn.prototype.find=function(e){return this.filter(e).head()},zn.prototype.findLast=function(e){return this.reverse().find(e)},zn.prototype.invokeMap=_r((function(e,t){return"function"==typeof e?new zn(this):this.map((function(n){return Dr(n,e,t)}))})),zn.prototype.reject=function(e){return this.filter(Ps(ca(e)))},zn.prototype.slice=function(e,t){e=mo(e);var r=this;return r.__filtered__&&(e>0||t<0)?new zn(r):(e<0?r=r.takeRight(-e):e&&(r=r.drop(e)),t!==n&&(r=(t=mo(t))<0?r.dropRight(-t):r.take(t-e)),r)},zn.prototype.takeRightWhile=function(e){return this.reverse().takeWhile(e).reverse()},zn.prototype.toArray=function(){return this.take(g)},kr(zn.prototype,(function(e,t){var r=/^(?:filter|find|map|reject)|While$/.test(t),i=/^(?:head|last)$/.test(t),a=Mn[i?"take"+("last"==t?"Right":""):t],s=i||/^find/.test(t);a&&(Mn.prototype[t]=function(){var t=this.__wrapped__,o=i?[1]:arguments,l=t instanceof zn,u=o[0],c=l||Xs(t),d=function(e){var t=a.apply(Mn,Vt([e],o));return i&&h?t[0]:t};c&&r&&"function"==typeof u&&1!=u.length&&(l=c=!1);var h=this.__chain__,p=!!this.__actions__.length,f=s&&!h,g=l&&!p;if(!s&&c){t=g?t:new zn(this);var m=e.apply(t,o);return m.__actions__.push({func:fs,args:[d],thisArg:n}),new Xn(m,h)}return f&&g?e.apply(this,o):(m=this.thru(d),f?i?m.value()[0]:m.value():m)})})),Bt(["pop","push","shift","sort","splice","unshift"],(function(e){var t=Ne[e],n=/^(?:push|sort|unshift)$/.test(e)?"tap":"thru",r=/^(?:pop|shift)$/.test(e);Mn.prototype[e]=function(){var e=arguments;if(r&&!this.__chain__){var i=this.value();return t.apply(Xs(i)?i:[],e)}return this[n]((function(n){return t.apply(Xs(n)?n:[],e)}))}})),kr(zn.prototype,(function(e,t){var n=Mn[t];if(n){var r=n.name+"";je.call(Nn,r)||(Nn[r]=[]),Nn[r].push({name:t,func:n})}})),Nn[Mi(n,2).name]=[{name:"wrapper",func:n}],zn.prototype.clone=function(){var e=new zn(this.__wrapped__);return e.__actions__=Ri(this.__actions__),e.__dir__=this.__dir__,e.__filtered__=this.__filtered__,e.__iteratees__=Ri(this.__iteratees__),e.__takeCount__=this.__takeCount__,e.__views__=Ri(this.__views__),e},zn.prototype.reverse=function(){if(this.__filtered__){var e=new zn(this);e.__dir__=-1,e.__filtered__=!0}else(e=this.clone()).__dir__*=-1;return e},zn.prototype.value=function(){var e=this.__wrapped__.value(),t=this.__dir__,n=Xs(e),r=t<0,i=n?e.length:0,a=function(e,t,n){for(var r=-1,i=n.length;++r<i;){var a=n[r],s=a.size;switch(a.type){case"drop":e+=s;break;case"dropRight":t-=s;break;case"take":t=xn(t,e+s);break;case"takeRight":e=wn(e,t-s)}}return{start:e,end:t}}(0,i,this.__views__),s=a.start,o=a.end,l=o-s,u=r?o:s-1,c=this.__iteratees__,d=c.length,h=0,p=xn(l,this.__takeCount__);if(!n||!r&&i==l&&p==l)return mi(e,this.__actions__);var f=[];e:for(;l--&&h<p;){for(var g=-1,m=e[u+=t];++g<d;){var v=c[g],y=v.iteratee,b=v.type,w=y(m);if(2==b)m=w;else if(!w){if(1==b)continue e;break e}}f[h++]=m}return f},Mn.prototype.at=gs,Mn.prototype.chain=function(){return ps(this)},Mn.prototype.commit=function(){return new Xn(this.value(),this.__chain__)},Mn.prototype.next=function(){this.__values__===n&&(this.__values__=fo(this.value()));var e=this.__index__>=this.__values__.length;return{done:e,value:e?n:this.__values__[this.__index__++]}},Mn.prototype.plant=function(e){for(var t,r=this;r instanceof qn;){var i=Ja(r);i.__index__=0,i.__values__=n,t?a.__wrapped__=i:t=i;var a=i;r=r.__wrapped__}return a.__wrapped__=e,t},Mn.prototype.reverse=function(){var e=this.__wrapped__;if(e instanceof zn){var t=e;return this.__actions__.length&&(t=new zn(this)),(t=t.reverse()).__actions__.push({func:fs,args:[ts],thisArg:n}),new Xn(t,this.__chain__)}return this.thru(ts)},Mn.prototype.toJSON=Mn.prototype.valueOf=Mn.prototype.value=function(){return mi(this.__wrapped__,this.__actions__)},Mn.prototype.first=Mn.prototype.head,et&&(Mn.prototype[et]=function(){return this}),Mn}();yt?((yt.exports=yn)._=yn,vt._=yn):mt._=yn}).call(c)}(Wr,Wr.exports);var qr=Wr.exports;const Xr=d(qr),zr=Pn({fullWidth:Nn().default(!1),description:Dn().optional()});class Kr{constructor(e,t,n){a(this,"data"),a(this,"property"),a(this,"params"),a(this,"keyName"),a(this,"showSecondaryColors",!1),a(this,"localParam"),a(this,"isCollapsible",!1),this.params=n,this.property=e,this.data=t,this.keyName=e._key,void 0===this.property._params&&(this.property._params={}),this.localParam=zr.parse(this.property._params)}setValue(e){this.property._value=e,void 0!==this.params.onChange&&this.params.onChange()}drawCollapsibleFieldContentWithoutContainer(){const e=document.createElement("p");return e.innerHTML="drawCollapsibleFieldContentWithoutContainer method is not defined in this field",e}}a(Kr,"fieldName","field"),a(Kr,"fieldLabelName","Field"),a(Kr,"fieldIcon",""),a(Kr,"isBaseField",!0);const Yr=class extends Kr{constructor(){super(...arguments),a(this,"isCollapsible",!0),a(this,"gridSpace",2),a(this,"containerLength",0),a(this,"contentBody",document.createElement("div"))}drawEmptyContent(e=!1){const t=e?"Elements":"Properties",n=e?"Element":"Property",r=document.createElement("div");r.classList.add("guifierEmptyContentContianer");const i=document.createElement("div");i.classList.add("emptyContentContianerWrapper"),r.append(i);const a=document.createElement("h2");a.classList.add("guifierEmptyTitle"),a.append(`No ${t}`),i.append(a);const s=document.createElement("p");s.classList.add("guifierEmptyParagraph"),s.append(`You don’t have any ${t} yet. Click the button below to add one.`),i.append(s);const o=document.createElement("div");return o.classList.add("guifierEmptyButton"),o.append(`Add ${n}`),o.append(this.drawAddButton()),o.addEventListener("click",(()=>{Promise.resolve().then((async()=>{e?await this.letUserAddElement():await this.letUserAddProperty()})).catch((e=>{console.error(e)}))})),i.append(o),r}containerInFirstLevel(){return 1===this.property._path.length}drawContainer(){const e=document.createElement("div");e.classList.add("guifierContainer"),e.classList.add("guifierObjectFieldContainer"),e.style.gridColumn=`span ${this.gridSpace}`,this.showSecondaryColors?e.classList.add("guifierSecondaryBgColor"):e.classList.add("guifierPrimaryBgColor"),e.append(this.drawHeader());const t=e.querySelector(".guifierContainerHeaderButtons");return null!==t&&Yr.showHeaderButtonsWhenHovering(t,e),e}drawContentWithContainer(){const e=this.drawContainer();return e.append(this.draw()),e}drawHeader(){const e=document.createElement("div");e.classList.add("guifierContainerHeader"),e.classList.add("guifierPrimaryBottomBorder");const t=this.property._key,n=document.createElement("div");1!==this.property._path.length&&n.append(xi("array"===this.property._valueType?"data_array":"data_object")),n.classList.add("guifierContainerHeaderKeyName"),n.append(1===this.property._path.length?this.params.rootContainerName:t.toString()),e.append(n),qr.isEmpty(this.property._params.description)||(n.append(ki()),Ti(this,e));const r=this.drawContainerHeaderButtons();return e.append(r),e}drawContainerHeaderButtons(e=!1){const t=document.createElement("div");return t.classList.add("guifierContainerHeaderButtons"),this.params.readOnlyMode||(this.containerInFirstLevel()&&this.params.fullScreen&&t.append(this.drawFullScreenButton()),this.containerInFirstLevel()||t.append(this.drawDeleteButton()),t.append(this.drawAddButton())),this.containerInFirstLevel()||t.append(this.drawCollapseButton(e)),t}static showHeaderButtonsWhenHovering(e,t,n=!1){let r;t.addEventListener("mouseenter",(()=>{if(void 0!==e){const t=n?Array.from(e.children):Array.from(e.children).reverse(),i=50;clearTimeout(r),t.forEach(((t,n)=>{"expand_less"!==t.innerHTML&&(r=setTimeout((()=>{e.style.pointerEvents="all",t.classList.add("guifierShowElementWithAnimation")}),i*n))}))}})),t.addEventListener("mouseleave",(()=>{if(void 0!==e){const t=n?Array.from(e.children).reverse():Array.from(e.children),i=100;clearTimeout(r),t.forEach(((t,n)=>{"expand_less"!==t.innerHTML&&(r=setTimeout((()=>{e.style.pointerEvents="none",t.classList.remove("guifierShowElementWithAnimation")}),i*n))}))}}))}drawCollapseButton(e=!1){const t=xi("expand_less");return t.classList.add("guifierContainerCollapseButton"),e?t.classList.add("guifierRotate"):t.classList.remove("guifierRotate"),t}drawDeleteButton(){return xi("delete")}drawAddButton(){return xi("add")}drawFullScreenButton(){const e=xi("fullscreen"),t=xi("fullscreen_exit");t.setAttribute("style","display: none");const n=document.createElement("span");n.style.height="25px",n.append(e),n.append(t);const r=document.querySelector(this.params.elementSelector);return n.addEventListener("click",(()=>{null!==e.getAttribute("style")?(t.setAttribute("style","display: none"),e.removeAttribute("style"),document.exitFullscreen(),r.removeAttribute("style")):(e.setAttribute("style","display: none"),t.removeAttribute("style"),null==r||r.requestFullscreen(),r.setAttribute("style","padding: 2vw"))})),document.addEventListener("fullscreenchange",(()=>{null===document.fullscreenElement&&(t.setAttribute("style","display: none"),e.removeAttribute("style"),r.removeAttribute("style"))})),n}};let Gr=Yr;a(Gr,"fieldName","container"),a(Gr,"fieldLabelName","Container");class Qr{constructor(e){a(this,"params"),a(this,"data"),a(this,"guifier",null),a(this,"dialogContainerBody",document.createElement("div")),a(this,"dialogElement",document.createElement("div")),a(this,"guifierGeneratedContent",document.createElement("div")),a(this,"cancelButton",document.createElement("div")),a(this,"confirmButton",document.createElement("div")),this.params=e,this.buildGuifierDialog(),this.hideDialog()}async get(e){return this.data=e,this.guifierGeneratedContent=this.drawGuifierGeneratedContent(this.data),this.dialogContainerBody.append(this.guifierGeneratedContent),this.showDialog(),await new Promise((e=>{this.confirmButton.addEventListener("click",(()=>{var t;const n=null==(t=this.guifier)?void 0:t.getData(Fn.Js);for(const e in n){const t=n[e];if(Xr.isEmpty(t))return void alert("Please ensure that all required fields have been completed.")}e(n),this.hideDialog(),setTimeout((()=>{this.removeDialog()}),150)})),this.cancelButton.addEventListener("click",(()=>{e(null),this.hideDialog(),setTimeout((()=>{this.removeDialog()}),150)}))}))}buildGuifierDialog(){const e=document.querySelector(this.params.elementSelector);null!==e&&e.append(this.drawdialog())}drawdialog(){const e=document.createElement("div");return e.classList.add("guifierDialogBackgroundContainer"),this.dialogElement=e,e.append(this.drawDialogContainer()),e.addEventListener("click",(e=>{e.target.classList.contains("guifierDialogBackgroundContainer")&&(this.hideDialog(),setTimeout((()=>{this.removeDialog()}),150))})),e}showDialog(){setTimeout((()=>{this.dialogElement.classList.remove("guifierOpacityZero")}),0)}hideDialog(){this.dialogElement.classList.add("guifierOpacityZero"),this.clearGuifierGeneratedContent()}removeDialog(){var e,t;null==(t=null==(e=this.dialogContainerBody.parentElement)?void 0:e.parentElement)||t.remove()}drawDialogContainer(){const e=document.createElement("div");e.classList.add("guifierDialogContainer");const t=document.createElement("div");t.classList.add("guifierDialogContainerTitle"),t.append(this.params.dialogTitle),t.append(xi("add")),e.append(t);const n=document.createElement("div");n.classList.add("guifierDialogContainerBody"),this.dialogContainerBody=n,e.append(this.dialogContainerBody);const r=document.createElement("div");r.classList.add("guifierDialogFooter");const i=document.createElement("div");i.classList.add("guifierDialogCancelButton"),i.classList.add("guifierDialogButton"),i.append("Cancel"),this.cancelButton=i,r.append(i);const a=document.createElement("div");return a.classList.add("guifierDialogConfirmButton"),a.classList.add("guifierDialogButton"),a.append("Confirm"),this.confirmButton=a,r.append(a),e.append(r),e}drawGuifierGeneratedContent(e){const t={elementSelector:this.params.elementSelector,data:e,dataType:Fn.Js,withoutContainer:!0,flipBackgroundColors:!0,expandFieldsToFullWidth:!0,readOnlyMode:!0};this.guifier=new js(t);const n=this.guifier.getGeneratedHtmlElement(),r=document.createElement("div");return r.classList.add("guifierGeneratedContent"),r.append(n),r}clearGuifierGeneratedContent(){this.guifierGeneratedContent.innerHTML=""}static async get(e,t){const n=t;return await new Qr(n).get(e)}}const Hr=class extends Gr{validateParams(){}validateRules(){}getFieldLabelName(){return Hr.fieldLabelName}draw(){const e=document.createElement("div");e.classList.add("guifierObjectContainerbody"),this.containerInFirstLevel()&&(e.style.overflowY="auto");const t=this.property._value;if(this.containerLength=Object.keys(t).length,Xr.isEmpty(t))e.append(this.drawEmptyContent(!1));else for(const n in t){const r=t[n],i=this.drawProperty(r);e.append(i)}return this.contentBody=e,e}drawProperty(e){const t=wi(e,this.data,this.params);let n;if(t.isCollapsible){t.showSecondaryColors=!this.showSecondaryColors;const e=t.drawContentWithContainer(),r=e.children[0].children[1];Hr.addingEventListenerForHeaderButtons(r,this,t),n=e}else{const r=document.createElement("div");r.classList.add("guifierObjectFieldContainer"),t.localParam.fullWidth?r.style.gridColumn="span 2":r.style.gridColumn="span 1",this.params.expandFieldsToFullWidth&&(r.style.gridColumn="span 2");const i=document.createElement("div");i.classList.add("guifierObjectLabelContainer");const a=document.createElement("div");a.classList.add("guifierObjectLabelTextPart");const s=e._key;a.append(s.toString()),i.append(a);const o=document.createElement("div");o.classList.add("guifierObjectLabelButtonsPart");const l=this.drawFieldButtons(t,r);Gr.showHeaderButtonsWhenHovering(l,r,!0),o.append(l),i.append(o),r.append(i),t.showSecondaryColors=this.showSecondaryColors;const u=t.draw(),c=document.createElement("div");c.classList.add("guifierObjectfieldInnerContainer"),c.append(u),r.append(c),qr.isEmpty(t.property._params.description)||(a.append(ki()),Ti(t,r)),n=r}return n}drawCollapsibleFieldContentWithoutContainer(){const e=this.draw();return e.style.padding="0",e}drawFieldButtons(e,t){const n=document.createElement("div");n.classList.add("fieldButtons"),this.params.readOnlyMode&&(n.style.display="none");const r=xi("delete");return r.addEventListener("click",(()=>{this.deleteProperty(e.keyName),t.remove()})),n.append(r),n}static addingEventListenerForHeaderButtons(e,t,n){null!==e&&Array.from(e.children).forEach((e=>{switch(e.innerHTML){case"expand_less":e.addEventListener("click",(()=>{var t,n,r;const i=null==(n=null==(t=e.parentElement)?void 0:t.parentElement)?void 0:n.nextElementSibling;(null==(r=e.parentElement)?void 0:r.parentElement).classList.toggle("guifierPrimaryBottomBorder"),e.classList.toggle("guifierRotate"),i.classList.toggle("guifierNoneDisplay")}));break;case"delete":e.addEventListener("click",(()=>{t.deleteProperty(n.keyName);const e=n.contentBody.closest(".guifierObjectFieldContainer");null==e||e.remove()}));break;case"add":e.addEventListener("click",(()=>{Promise.resolve().then((async()=>{"Object"===n.getFieldLabelName()?await n.letUserAddProperty():"Array"===n.getFieldLabelName()&&await n.letUserAddElement()})).catch((e=>{console.error(e)}))}))}}))}deleteProperty(e){const t=Xr.cloneDeep(this.property._path);t.push(e);const n=t;this.data.removeData(n),this.containerLength--,0===this.containerLength&&this.contentBody.append(this.drawEmptyContent(!1)),void 0!==this.params.onChange&&this.params.onChange()}addProperty(e){e=Xr.cloneDeep(e),this.data.addProperty(e),0===this.containerLength&&(this.contentBody.innerHTML=""),this.contentBody.append(this.drawProperty(e)),this.containerLength++,void 0!==this.params.onChange&&this.params.onChange()}async letUserAddProperty(){const e=[];for(const t in yi){const n=yi[t];n.staticObject.isBaseField&&e.push({icon:n.staticObject.fieldIcon,text:n.staticObject.fieldLabelName,value:n.staticObject.fieldName})}const t={"Field Name":"","Field Type":{_fieldType:"cardSelect",_params:{cards:e},_value:""}},n={elementSelector:this.params.elementSelector+" > div",dialogTitle:"New Field"},r=await Qr.get(t,n);if(null!==r){const e={_path:[...this.property._path,r["Field Name"]],_key:r["Field Name"],_valueType:vi(bi(r["Field Type"])),_value:bi(r["Field Type"]),_fieldType:r["Field Type"],_rules:void 0,_params:void 0};this.addProperty(e)}}};let _r=Hr;a(_r,"fieldName","object"),a(_r,"fieldLabelName","Object"),a(_r,"fieldIcon","data_object");const $r=class extends Gr{constructor(){super(...arguments),a(this,"numberOfLevels",0),a(this,"contentBody",document.createElement("div"))}validateParams(){}validateRules(){}getFieldLabelName(){return $r.fieldLabelName}draw(){const e=document.createElement("div");e.classList.add("guifierArrayContainerbody"),this.containerInFirstLevel()&&(e.style.overflowY="auto");const t=this.property._value;if(Xr.isEmpty(t)){e.append(this.drawEmptyContent(!0));const t=e.querySelector(".guifierEmptyContentContianer");null==t||t.prepend(this.drawArrayLevels(this.numberOfLevels-1))}else for(const n in t){const r=t[n];e.append(this.drawElement(r)),this.containerLength++}return this.contentBody=e,e}drawElement(e){const t=document.createElement("div");t.classList.add("guifierArrayFieldContainer"),t.dataset.elementIndex=`${this.containerLength}`,mi(this.containerLength)&&t.classList.add("guifierOddBackground"),t.append(this.drawArrayLevels(this.numberOfLevels));const n=e._key,r=document.createElement("div");if(r.classList.add("guifierArrayLabelContainer"),this.numberOfLevels>0){r.classList.add("guifierArrayLabelContainerForUpperLevel");const e=document.createElement("div");e.classList.add("guifierArrayLabelLineForUpperLevel"),r.append(e)}const i=document.createElement("div");i.classList.add("guifierArrayIndexLabel"),this.showSecondaryColors?i.classList.add("guifierPrimaryBgColor"):i.classList.add("guifierSecondaryBgColor"),i.innerHTML=`${n+1}`,r.append(i),t.append(r);const a=document.createElement("div");a.classList.add("guifierArrayfieldInnerContainer");const s=wi(e,this.data,this.params);let o;if(s.isCollapsible?(o=this.drawCollapsibleArrayElement(s),t.classList.add("guifierContainerFieldType")):(s.showSecondaryColors=this.showSecondaryColors,o=s.draw(),t.classList.add("guifierBaseFieldType")),a.append(o),t.append(a),s.isCollapsible){const e=document.createDocumentFragment();e.append(t),this.containerLength===this.property._value.length-1?e.append(this.drawCollapsibleArrayElementContent(s,!0)):e.append(this.drawCollapsibleArrayElementContent(s));const n=t.querySelector(".guifierContainerHeaderButtons");return Gr.showHeaderButtonsWhenHovering(n,t),$r.addingEventListenerForHeaderButtons(n,this,s),e}const l=this.drawArrayFieldDeleteButton();return t.append(l),t}drawArrayFieldDeleteButton(){const e=this.drawDeleteButton();return this.params.readOnlyMode&&(e.style.display="none"),e.classList.add("guifierArrayFieldDeleteButton"),e.addEventListener("click",(()=>{var t;const n=parseInt(null==(t=e.parentElement)?void 0:t.dataset.elementIndex);this.removeElement(n)})),e}drawCollapsibleArrayElement(e){const t=document.createElement("div");t.classList.add("guifierArrayCollapsibleElement");const n=document.createElement("div");n.classList.add("guifierFieldLabelName"),n.innerHTML=e.getFieldLabelName(),t.append(n);const r=e.drawContainerHeaderButtons(!0);return t.append(r),t}drawCollapsibleArrayElementContent(e,t=!1){const n=document.createElement("div");if(n.classList.add("guifierCollapsibleElementContent"),this.showSecondaryColors?n.classList.add("guifierSecondaryBgColor"):n.classList.add("guifierPrimaryBgColor"),t&&(n.style.borderRadius="0 0 7.5px 7.5px"),e.showSecondaryColors=this.showSecondaryColors,"Array"!==e.getFieldLabelName()){n.append(this.drawArrayLevels(this.numberOfLevels));const t=document.createElement("div");t.classList.add("guifierCollapsibleElementInnerContentContainer"),t.append(e.drawCollapsibleFieldContentWithoutContainer()),n.append(t)}else{const t=e;t.numberOfLevels=this.numberOfLevels+1,n.append(t.draw())}return n.classList.add("guifierNoneDisplay"),n}drawArrayLevels(e){const t=document.createElement("div");t.classList.add("guifierArrayLevelsContainer"),0===e&&e++;for(let n=0;n<e;n++){const e=document.createElement("div");e.classList.add("guifierArrayLevelElement"),t.append(e)}return t}static addingEventListenerForHeaderButtons(e,t,n){null!==e&&Array.from(e.children).forEach((e=>{switch(e.innerHTML){case"expand_less":e.addEventListener("click",(()=>{var t,n,r,i;const a=null==(i=null==(r=null==(n=null==(t=e.parentElement)?void 0:t.parentElement)?void 0:n.parentElement)?void 0:r.parentElement)?void 0:i.nextElementSibling;e.classList.toggle("guifierRotate"),a.classList.toggle("guifierNoneDisplay")}));break;case"delete":e.addEventListener("click",(e=>{var n,r,i;const a=null==(i=null==(r=null==(n=e.target.parentElement)?void 0:n.parentElement)?void 0:r.parentElement)?void 0:i.parentElement,s=null==a?void 0:a.dataset.elementIndex;t.removeElement(parseInt(s))}));break;case"add":e.addEventListener("click",(()=>{Promise.resolve().then((async()=>{"Object"===n.getFieldLabelName()?await n.letUserAddProperty():"Array"===n.getFieldLabelName()&&await n.letUserAddElement()})).catch((e=>{console.error(e)}))}))}}))}removeElement(e){var t;const n=this.getArrayFieldContainers();n[e].classList.contains("guifierContainerFieldType")&&(null==(t=n[e].nextElementSibling)||t.remove()),n[e].remove();const r=Xr.cloneDeep(this.property._path);r.push(e),this.data.removeData(r),this.resetElementsUiInArrayContainer(),this.containerLength--,0===this.containerLength&&this.contentBody.append(this.drawEmptyContent(!0)),void 0!==this.params.onChange&&this.params.onChange()}async letUserAddElement(){const e=[];for(const t in yi){const n=yi[t];n.staticObject.isBaseField&&e.push({icon:n.staticObject.fieldIcon,text:n.staticObject.fieldLabelName,value:n.staticObject.fieldName})}const t={"Field Type":{_fieldType:"cardSelect",_params:{cards:e},_value:""}},n={elementSelector:this.params.elementSelector+" > div",dialogTitle:"New Field"},r=await Qr.get(t,n);if(null!==r){const e={_path:[...this.property._path,this.containerLength],_key:this.containerLength,_valueType:vi(bi(r["Field Type"])),_value:bi(r["Field Type"]),_fieldType:r["Field Type"],_rules:void 0,_params:void 0};this.addElement(e)}}addElement(e){e=Xr.cloneDeep(e),this.data.addElement(e),0===this.containerLength&&(this.contentBody.innerHTML="");const t=this.drawElement(e);this.contentBody.append(t),this.containerLength++,void 0!==this.params.onChange&&this.params.onChange()}resetElementsUiInArrayContainer(){this.getArrayFieldContainers().forEach(((e,t)=>{const n=e.querySelector(".guifierArrayIndexLabel");null!==n&&(n.innerHTML=`${t+1}`),e.classList.remove("guifierOddBackground"),mi(t)&&e.classList.add("guifierOddBackground"),e.dataset.elementIndex=`${t}`}))}getArrayFieldContainers(){const e=[];for(let t=0;t<this.contentBody.children.length;t++)this.contentBody.children[t].classList.contains("guifierArrayFieldContainer")&&e.push(this.contentBody.children[t]);return e}};let ei=$r;a(ei,"fieldName","array"),a(ei,"fieldLabelName","Array"),a(ei,"fieldIcon","data_array");const ti=zr.extend({}),ni=class extends Kr{constructor(){super(...arguments),a(this,"localParam",ti.parse(this.property._params))}validateParams(){}validateRules(){}getFieldLabelName(){return ni.fieldLabelName}draw(){const e=document.createElement("input");return e.type="text",e.classList.add("guifierTextField"),""!==this.property._value&&(e.value=this.property._value),e.placeholder="Text Field",this.showSecondaryColors?e.classList.add("guifierPrimaryBgColor"):e.classList.add("guifierSecondaryBgColor"),e.addEventListener("input",(e=>{this.inputEventHandler(e)})),e}inputEventHandler(e){const t=e.target;this.setValue(t.value)}};let ri=ni;a(ri,"fieldName","text"),a(ri,"fieldLabelName","Text"),a(ri,"fieldIcon","title");const ii=class extends Kr{constructor(){super(...arguments),a(this,"intervalId",0)}validateParams(){}validateRules(){}getFieldLabelName(){return ii.fieldLabelName}draw(){const e=document.createElement("div");e.classList.add("guifierNumberInputContainer");const t=document.createElement("input");t.type="number",t.classList.add("guifierNumberField"),""!==this.property._value&&(t.value=this.property._value);const n=document.createElement("div");n.classList.add("guifierButtonsContainer");const r=document.createElement("div"),i=xi("keyboard_arrow_down");r.classList.add("guifierNumberButton"),r.append(i),r.addEventListener("mousedown",(e=>{0===e.button&&this.keyDownInputButtonsEventHandler(t,!1)})),r.addEventListener("mouseup",(()=>{this.keyUpInputButtonsEventHandler()}));const a=document.createElement("div"),s=xi("keyboard_arrow_up");return a.classList.add("guifierNumberButton"),a.append(s),a.addEventListener("mousedown",(e=>{0===e.button&&this.keyDownInputButtonsEventHandler(t,!0)})),a.addEventListener("mouseup",(()=>{this.keyUpInputButtonsEventHandler()})),this.showSecondaryColors?(r.classList.add("guifierPrimaryBgColor"),a.classList.add("guifierPrimaryBgColor")):(r.classList.add("guifierSecondaryBgColor"),a.classList.add("guifierSecondaryBgColor")),n.append(r),n.append(a),e.append(t),e.append(n),t.addEventListener("input",(()=>{this.inputEventHandler(t)})),this.showSecondaryColors?t.classList.add("guifierPrimaryBgColor"):t.classList.add("guifierSecondaryBgColor"),e}inputEventHandler(e){this.setValue(parseFloat(e.value))}keyDownInputButtonsEventHandler(e,t){clearInterval(this.intervalId),""===e.value&&(e.value="0"),t?(e.value=(parseFloat(e.value)+1).toString(),this.intervalId=setInterval((()=>{e.value=(parseFloat(e.value)+1).toString()}),100)):(e.value=(parseFloat(e.value)-1).toString(),this.intervalId=setInterval((()=>{e.value=(parseFloat(e.value)-1).toString()}),100)),this.setValue(parseFloat(e.value))}keyUpInputButtonsEventHandler(){clearInterval(this.intervalId)}};let ai=ii;a(ai,"fieldName","number"),a(ai,"fieldLabelName","Number"),a(ai,"fieldIcon","numbers");const si=class extends Kr{validateParams(){}validateRules(){}getFieldLabelName(){return si.fieldLabelName}draw(){const e=document.createElement("div");e.classList.add("guifierBooleanField");const t=document.createElement("div");t.classList.add("guifierBooleanElement"),t.classList.add("guifierBooleanTrueElement"),t.innerHTML="True",e.append(t);const n=document.createElement("div");return n.classList.add("guifierBooleanElement"),n.classList.add("guifierBooleanFalseElement"),n.innerHTML="False",e.append(n),!0===this.property._value?t.classList.add("guifierBooleanTrueElementSelect"):n.classList.add("guifierBooleanFalseElementSelect"),this.showSecondaryColors?e.classList.add("guifierPrimaryBgColor"):e.classList.add("guifierSecondaryBgColor"),e.addEventListener("click",(e=>{this.booleanEventHandler(e,t,n)})),e}booleanEventHandler(e,t,n){const r=e.target;r.classList.contains("guifierBooleanTrueElement")?(t.classList.add("guifierBooleanTrueElementSelect"),n.classList.remove("guifierBooleanFalseElementSelect"),this.setValue(!0)):r.classList.contains("guifierBooleanFalseElement")&&(n.classList.add("guifierBooleanFalseElementSelect"),t.classList.remove("guifierBooleanTrueElementSelect"),this.setValue(!1))}};let oi=si;a(oi,"fieldName","boolean"),a(oi,"fieldLabelName","Boolean"),a(oi,"fieldIcon","check_box");const li=class extends Kr{validateParams(){}validateRules(){}getFieldLabelName(){return li.fieldLabelName}draw(){const e=document.createElement("div");e.classList.add("guifierNullField");const t=document.createElement("div");t.classList.add("guifierNullFieldText"),t.innerHTML="Null",e.append(t);const n=xi("block");return e.append(n),e}};let ui=li;a(ui,"fieldName","null"),a(ui,"fieldLabelName","Null"),a(ui,"fieldIcon","block");const ci=Pn({icon:Dn(),text:Dn(),value:Dn()}),di=zr.extend({cards:Un(ci)}),hi=class extends Kr{constructor(){super(...arguments),a(this,"localParam",di.parse(this.property._params))}validateParams(){}validateRules(){}getFieldLabelName(){return hi.fieldLabelName}draw(){const e=document.createElement("div");e.classList.add("guifierCardsContainer");for(let t=0;t<this.localParam.cards.length;t++){const n=this.localParam.cards[t],r=document.createElement("div");r.classList.add("guifierCard"),r.addEventListener("click",(()=>{this.cardClickHandler(r,e,n)})),e.append(r);const i=document.createElement("div");i.classList.add("cardIconElement"),i.append(xi(n.icon)),r.append(i);const a=document.createElement("div");a.classList.add("cardTextElement"),a.innerHTML=n.text,r.append(a)}return e}cardClickHandler(e,t,n){this.selectCard(e,t,n)}selectCard(e,t,n){const r=t.querySelectorAll(".guifierCard");for(let e=0;e<r.length;e++)r[e].classList.remove("guifierSelectedCard");e.classList.add("guifierSelectedCard"),this.setValue(n.value)}};let pi=hi;a(pi,"fieldName","cardSelect"),a(pi,"fieldLabelName","Card Select"),a(pi,"isBaseField",!1);const fi=class extends Kr{validateParams(){}validateRules(){}getFieldLabelName(){return fi.fieldLabelName}draw(){const e=document.createElement("input");e.type="date",e.classList.add("guifierTextField");const t=this.property._value.toISOString().split("T")[0];return e.value=t,e.placeholder="Text Field",this.showSecondaryColors?e.classList.add("guifierPrimaryBgColor"):e.classList.add("guifierSecondaryBgColor"),e.addEventListener("input",(e=>{this.inputEventHandler(e)})),e}inputEventHandler(e){const t=e.target;this.setValue(new Date(t.value))}};let gi=fi;function mi(e){return e%2!=0}function vi(e){const t=typeof e;return t===Jn.Object?Array.isArray(e)?Jn.Array:Xr.isDate(e)?Jn.Date:null===e?Jn.Null:Jn.Object:"number"===t&&isNaN(e)?Jn.NaN:t}a(gi,"fieldName","date"),a(gi,"fieldLabelName","Date"),a(gi,"fieldIcon","calendar_month");const yi={text:{staticObject:ri,defaultValue:"",getInstantiatedObject:(e,t,n)=>new ri(e,t,n)},number:{staticObject:ai,defaultValue:0,getInstantiatedObject:(e,t,n)=>new ai(e,t,n)},boolean:{staticObject:oi,defaultValue:!0,getInstantiatedObject:(e,t,n)=>new oi(e,t,n)},null:{staticObject:ui,defaultValue:null,getInstantiatedObject:(e,t,n)=>new ui(e,t,n)},object:{staticObject:_r,defaultValue:{},getInstantiatedObject:(e,t,n)=>new _r(e,t,n)},array:{staticObject:ei,defaultValue:[],getInstantiatedObject:(e,t,n)=>new ei(e,t,n)},cardSelect:{staticObject:pi,defaultValue:"",getInstantiatedObject:(e,t,n)=>new pi(e,t,n)},date:{staticObject:gi,defaultValue:new Date,getInstantiatedObject:(e,t,n)=>new gi(e,t,n)}};function bi(e){return Xr.cloneDeep(yi[e].defaultValue)}function wi(e,t,n){if(void 0!==e._fieldType)return yi[e._fieldType].getInstantiatedObject(e,t,n);throw new Error("property._fieldType is undefined")}function xi(e){const t=document.createElement("span");return t.classList.add("material-icons-outlined"),t.innerHTML=e,t}function ki(){const e=document.createElement("div");return e.classList.add("guifierDescriptionSymbol"),e.append("!"),e}function Ti(e,t){const n=document.createElement("div");n.classList.add("guifierDescriptionTooltip"),n.insertAdjacentHTML("afterbegin",`\n        <div class="descriptionHeader">\n            <div class="guifierDescriptionSymbol">!</div>\n            <div>\n                ${e.keyName}\n                <span class="descriptionFieldType">(${e.getFieldLabelName()})</span>\n            </div>\n        </div>\n        <div class="descriptionBody">${e.property._params.description}</div>\n    `),t.append(n);const r=document.createElement("div");r.classList.add("descriptionTooltipRefrence"),t.append(r);let i=0;t.addEventListener("mouseenter",(()=>{clearTimeout(i),Mr(r,n,{placement:"top",middleware:[lr(15),Zr(),Jr()]}).then((({x:e,y:t})=>{Object.assign(n.style,{left:`${e}px`,top:`${t}px`})})).then((()=>{})).catch((e=>{console.log("ERROR: from positioning"),console.log(e)}))})),t.addEventListener("mouseleave",(()=>{i=setTimeout((()=>{n.removeAttribute("style")}),250)}))}function Ai(e){return typeof e>"u"||null===e}var Ci=function(e){return"object"==typeof e&&null!==e},Ei=function(e){return Array.isArray(e)?e:Ai(e)?[]:[e]},Si=function(e,t){var n,r="";for(n=0;n<t;n+=1)r+=e;return r},Oi=function(e){return 0===e&&Number.NEGATIVE_INFINITY===1/e},Ii=function(e,t){var n,r,i,a;if(t)for(n=0,r=(a=Object.keys(t)).length;n<r;n+=1)e[i=a[n]]=t[i];return e},Bi={isNothing:Ai,isObject:Ci,toArray:Ei,repeat:Si,isNegativeZero:Oi,extend:Ii};function Ri(e,t){var n="",r=e.reason||"(unknown reason)";return e.mark?(e.mark.name&&(n+='in "'+e.mark.name+'" '),n+="("+(e.mark.line+1)+":"+(e.mark.column+1)+")",!t&&e.mark.snippet&&(n+="\n\n"+e.mark.snippet),r+" "+n):r}function Di(e,t){Error.call(this),this.name="YAMLException",this.reason=e,this.mark=t,this.message=Ri(this,!1),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack||""}Di.prototype=Object.create(Error.prototype),Di.prototype.constructor=Di,Di.prototype.toString=function(e){return this.name+": "+Ri(this,e)};var Ni=Di;function Li(e,t,n,r,i){var a="",s="",o=Math.floor(i/2)-1;return r-t>o&&(t=r-o+(a=" ... ").length),n-r>o&&(n=r+o-(s=" ...").length),{str:a+e.slice(t,n).replace(/\t/g,"→")+s,pos:r-t+a.length}}function Ui(e,t){return Bi.repeat(" ",t-e.length)+e}var Pi=function(e,t){if(t=Object.create(t||null),!e.buffer)return null;t.maxLength||(t.maxLength=79),"number"!=typeof t.indent&&(t.indent=1),"number"!=typeof t.linesBefore&&(t.linesBefore=3),"number"!=typeof t.linesAfter&&(t.linesAfter=2);for(var n,r=/\r?\n|\r|\0/g,i=[0],a=[],s=-1;n=r.exec(e.buffer);)a.push(n.index),i.push(n.index+n[0].length),e.position<=n.index&&s<0&&(s=i.length-2);s<0&&(s=i.length-1);var o,l,u="",c=Math.min(e.line+t.linesAfter,a.length).toString().length,d=t.maxLength-(t.indent+c+3);for(o=1;o<=t.linesBefore&&!(s-o<0);o++)l=Li(e.buffer,i[s-o],a[s-o],e.position-(i[s]-i[s-o]),d),u=Bi.repeat(" ",t.indent)+Ui((e.line-o+1).toString(),c)+" | "+l.str+"\n"+u;for(l=Li(e.buffer,i[s],a[s],e.position,d),u+=Bi.repeat(" ",t.indent)+Ui((e.line+1).toString(),c)+" | "+l.str+"\n",u+=Bi.repeat("-",t.indent+c+3+l.pos)+"^\n",o=1;o<=t.linesAfter&&!(s+o>=a.length);o++)l=Li(e.buffer,i[s+o],a[s+o],e.position-(i[s]-i[s+o]),d),u+=Bi.repeat(" ",t.indent)+Ui((e.line+o+1).toString(),c)+" | "+l.str+"\n";return u.replace(/\n$/,"")},Vi=["kind","multi","resolve","construct","instanceOf","predicate","represent","representName","defaultStyle","styleAliases"],ji=["scalar","sequence","mapping"];var Fi=function(e,t){if(t=t||{},Object.keys(t).forEach((function(t){if(-1===Vi.indexOf(t))throw new Ni('Unknown option "'+t+'" is met in definition of "'+e+'" YAML type.')})),this.options=t,this.tag=e,this.kind=t.kind||null,this.resolve=t.resolve||function(){return!0},this.construct=t.construct||function(e){return e},this.instanceOf=t.instanceOf||null,this.predicate=t.predicate||null,this.represent=t.represent||null,this.representName=t.representName||null,this.defaultStyle=t.defaultStyle||null,this.multi=t.multi||!1,this.styleAliases=function(e){var t={};return null!==e&&Object.keys(e).forEach((function(n){e[n].forEach((function(e){t[String(e)]=n}))})),t}(t.styleAliases||null),-1===ji.indexOf(this.kind))throw new Ni('Unknown kind "'+this.kind+'" is specified for "'+e+'" YAML type.')};function Ji(e,t){var n=[];return e[t].forEach((function(e){var t=n.length;n.forEach((function(n,r){n.tag===e.tag&&n.kind===e.kind&&n.multi===e.multi&&(t=r)})),n[t]=e})),n}function Zi(e){return this.extend(e)}Zi.prototype.extend=function(e){var t=[],n=[];if(e instanceof Fi)n.push(e);else if(Array.isArray(e))n=n.concat(e);else{if(!e||!Array.isArray(e.implicit)&&!Array.isArray(e.explicit))throw new Ni("Schema.extend argument should be a Type, [ Type ], or a schema definition ({ implicit: [...], explicit: [...] })");e.implicit&&(t=t.concat(e.implicit)),e.explicit&&(n=n.concat(e.explicit))}t.forEach((function(e){if(!(e instanceof Fi))throw new Ni("Specified list of YAML types (or a single Type object) contains a non-Type object.");if(e.loadKind&&"scalar"!==e.loadKind)throw new Ni("There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.");if(e.multi)throw new Ni("There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.")})),n.forEach((function(e){if(!(e instanceof Fi))throw new Ni("Specified list of YAML types (or a single Type object) contains a non-Type object.")}));var r=Object.create(Zi.prototype);return r.implicit=(this.implicit||[]).concat(t),r.explicit=(this.explicit||[]).concat(n),r.compiledImplicit=Ji(r,"implicit"),r.compiledExplicit=Ji(r,"explicit"),r.compiledTypeMap=function(){var e,t,n={scalar:{},sequence:{},mapping:{},fallback:{},multi:{scalar:[],sequence:[],mapping:[],fallback:[]}};function r(e){e.multi?(n.multi[e.kind].push(e),n.multi.fallback.push(e)):n[e.kind][e.tag]=n.fallback[e.tag]=e}for(e=0,t=arguments.length;e<t;e+=1)arguments[e].forEach(r);return n}(r.compiledImplicit,r.compiledExplicit),r};var Mi=Zi,Wi=new Fi("tag:yaml.org,2002:str",{kind:"scalar",construct:function(e){return null!==e?e:""}}),qi=new Fi("tag:yaml.org,2002:seq",{kind:"sequence",construct:function(e){return null!==e?e:[]}}),Xi=new Fi("tag:yaml.org,2002:map",{kind:"mapping",construct:function(e){return null!==e?e:{}}}),zi=new Mi({explicit:[Wi,qi,Xi]});var Ki=new Fi("tag:yaml.org,2002:null",{kind:"scalar",resolve:function(e){if(null===e)return!0;var t=e.length;return 1===t&&"~"===e||4===t&&("null"===e||"Null"===e||"NULL"===e)},construct:function(){return null},predicate:function(e){return null===e},represent:{canonical:function(){return"~"},lowercase:function(){return"null"},uppercase:function(){return"NULL"},camelcase:function(){return"Null"},empty:function(){return""}},defaultStyle:"lowercase"});var Yi=new Fi("tag:yaml.org,2002:bool",{kind:"scalar",resolve:function(e){if(null===e)return!1;var t=e.length;return 4===t&&("true"===e||"True"===e||"TRUE"===e)||5===t&&("false"===e||"False"===e||"FALSE"===e)},construct:function(e){return"true"===e||"True"===e||"TRUE"===e},predicate:function(e){return"[object Boolean]"===Object.prototype.toString.call(e)},represent:{lowercase:function(e){return e?"true":"false"},uppercase:function(e){return e?"TRUE":"FALSE"},camelcase:function(e){return e?"True":"False"}},defaultStyle:"lowercase"});function Gi(e){return 48<=e&&e<=57||65<=e&&e<=70||97<=e&&e<=102}function Qi(e){return 48<=e&&e<=55}function Hi(e){return 48<=e&&e<=57}var _i=new Fi("tag:yaml.org,2002:int",{kind:"scalar",resolve:function(e){if(null===e)return!1;var t,n=e.length,r=0,i=!1;if(!n)return!1;if(("-"===(t=e[r])||"+"===t)&&(t=e[++r]),"0"===t){if(r+1===n)return!0;if("b"===(t=e[++r])){for(r++;r<n;r++)if("_"!==(t=e[r])){if("0"!==t&&"1"!==t)return!1;i=!0}return i&&"_"!==t}if("x"===t){for(r++;r<n;r++)if("_"!==(t=e[r])){if(!Gi(e.charCodeAt(r)))return!1;i=!0}return i&&"_"!==t}if("o"===t){for(r++;r<n;r++)if("_"!==(t=e[r])){if(!Qi(e.charCodeAt(r)))return!1;i=!0}return i&&"_"!==t}}if("_"===t)return!1;for(;r<n;r++)if("_"!==(t=e[r])){if(!Hi(e.charCodeAt(r)))return!1;i=!0}return!(!i||"_"===t)},construct:function(e){var t,n=e,r=1;if(-1!==n.indexOf("_")&&(n=n.replace(/_/g,"")),("-"===(t=n[0])||"+"===t)&&("-"===t&&(r=-1),t=(n=n.slice(1))[0]),"0"===n)return 0;if("0"===t){if("b"===n[1])return r*parseInt(n.slice(2),2);if("x"===n[1])return r*parseInt(n.slice(2),16);if("o"===n[1])return r*parseInt(n.slice(2),8)}return r*parseInt(n,10)},predicate:function(e){return"[object Number]"===Object.prototype.toString.call(e)&&e%1==0&&!Bi.isNegativeZero(e)},represent:{binary:function(e){return e>=0?"0b"+e.toString(2):"-0b"+e.toString(2).slice(1)},octal:function(e){return e>=0?"0o"+e.toString(8):"-0o"+e.toString(8).slice(1)},decimal:function(e){return e.toString(10)},hexadecimal:function(e){return e>=0?"0x"+e.toString(16).toUpperCase():"-0x"+e.toString(16).toUpperCase().slice(1)}},defaultStyle:"decimal",styleAliases:{binary:[2,"bin"],octal:[8,"oct"],decimal:[10,"dec"],hexadecimal:[16,"hex"]}}),$i=new RegExp("^(?:[-+]?(?:[0-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?|[-+]?\\.(?:inf|Inf|INF)|\\.(?:nan|NaN|NAN))$");var ea=/^[-+]?[0-9]+e/;var ta=new Fi("tag:yaml.org,2002:float",{kind:"scalar",resolve:function(e){return!(null===e||!$i.test(e)||"_"===e[e.length-1])},construct:function(e){var t,n;return n="-"===(t=e.replace(/_/g,"").toLowerCase())[0]?-1:1,"+-".indexOf(t[0])>=0&&(t=t.slice(1)),".inf"===t?1===n?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY:".nan"===t?NaN:n*parseFloat(t,10)},predicate:function(e){return"[object Number]"===Object.prototype.toString.call(e)&&(e%1!=0||Bi.isNegativeZero(e))},represent:function(e,t){var n;if(isNaN(e))switch(t){case"lowercase":return".nan";case"uppercase":return".NAN";case"camelcase":return".NaN"}else if(Number.POSITIVE_INFINITY===e)switch(t){case"lowercase":return".inf";case"uppercase":return".INF";case"camelcase":return".Inf"}else if(Number.NEGATIVE_INFINITY===e)switch(t){case"lowercase":return"-.inf";case"uppercase":return"-.INF";case"camelcase":return"-.Inf"}else if(Bi.isNegativeZero(e))return"-0.0";return n=e.toString(10),ea.test(n)?n.replace("e",".e"):n},defaultStyle:"lowercase"}),na=zi.extend({implicit:[Ki,Yi,_i,ta]}),ra=new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9])-([0-9][0-9])$"),ia=new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)(?:[Tt]|[ \\t]+)([0-9][0-9]?):([0-9][0-9]):([0-9][0-9])(?:\\.([0-9]*))?(?:[ \\t]*(Z|([-+])([0-9][0-9]?)(?::([0-9][0-9]))?))?$");var aa=new Fi("tag:yaml.org,2002:timestamp",{kind:"scalar",resolve:function(e){return null!==e&&(null!==ra.exec(e)||null!==ia.exec(e))},construct:function(e){var t,n,r,i,a,s,o,l,u=0,c=null;if(null===(t=ra.exec(e))&&(t=ia.exec(e)),null===t)throw new Error("Date resolve error");if(n=+t[1],r=+t[2]-1,i=+t[3],!t[4])return new Date(Date.UTC(n,r,i));if(a=+t[4],s=+t[5],o=+t[6],t[7]){for(u=t[7].slice(0,3);u.length<3;)u+="0";u=+u}return t[9]&&(c=6e4*(60*+t[10]+ +(t[11]||0)),"-"===t[9]&&(c=-c)),l=new Date(Date.UTC(n,r,i,a,s,o,u)),c&&l.setTime(l.getTime()-c),l},instanceOf:Date,represent:function(e){return e.toISOString()}});var sa=new Fi("tag:yaml.org,2002:merge",{kind:"scalar",resolve:function(e){return"<<"===e||null===e}}),oa="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r";var la=new Fi("tag:yaml.org,2002:binary",{kind:"scalar",resolve:function(e){if(null===e)return!1;var t,n,r=0,i=e.length,a=oa;for(n=0;n<i;n++)if(!((t=a.indexOf(e.charAt(n)))>64)){if(t<0)return!1;r+=6}return r%8==0},construct:function(e){var t,n,r=e.replace(/[\r\n=]/g,""),i=r.length,a=oa,s=0,o=[];for(t=0;t<i;t++)t%4==0&&t&&(o.push(s>>16&255),o.push(s>>8&255),o.push(255&s)),s=s<<6|a.indexOf(r.charAt(t));return 0===(n=i%4*6)?(o.push(s>>16&255),o.push(s>>8&255),o.push(255&s)):18===n?(o.push(s>>10&255),o.push(s>>2&255)):12===n&&o.push(s>>4&255),new Uint8Array(o)},predicate:function(e){return"[object Uint8Array]"===Object.prototype.toString.call(e)},represent:function(e){var t,n,r="",i=0,a=e.length,s=oa;for(t=0;t<a;t++)t%3==0&&t&&(r+=s[i>>18&63],r+=s[i>>12&63],r+=s[i>>6&63],r+=s[63&i]),i=(i<<8)+e[t];return 0===(n=a%3)?(r+=s[i>>18&63],r+=s[i>>12&63],r+=s[i>>6&63],r+=s[63&i]):2===n?(r+=s[i>>10&63],r+=s[i>>4&63],r+=s[i<<2&63],r+=s[64]):1===n&&(r+=s[i>>2&63],r+=s[i<<4&63],r+=s[64],r+=s[64]),r}}),ua=Object.prototype.hasOwnProperty,ca=Object.prototype.toString;var da=new Fi("tag:yaml.org,2002:omap",{kind:"sequence",resolve:function(e){if(null===e)return!0;var t,n,r,i,a,s=[],o=e;for(t=0,n=o.length;t<n;t+=1){if(r=o[t],a=!1,"[object Object]"!==ca.call(r))return!1;for(i in r)if(ua.call(r,i)){if(a)return!1;a=!0}if(!a)return!1;if(-1!==s.indexOf(i))return!1;s.push(i)}return!0},construct:function(e){return null!==e?e:[]}}),ha=Object.prototype.toString;var pa=new Fi("tag:yaml.org,2002:pairs",{kind:"sequence",resolve:function(e){if(null===e)return!0;var t,n,r,i,a,s=e;for(a=new Array(s.length),t=0,n=s.length;t<n;t+=1){if(r=s[t],"[object Object]"!==ha.call(r)||1!==(i=Object.keys(r)).length)return!1;a[t]=[i[0],r[i[0]]]}return!0},construct:function(e){if(null===e)return[];var t,n,r,i,a,s=e;for(a=new Array(s.length),t=0,n=s.length;t<n;t+=1)r=s[t],i=Object.keys(r),a[t]=[i[0],r[i[0]]];return a}}),fa=Object.prototype.hasOwnProperty;var ga=new Fi("tag:yaml.org,2002:set",{kind:"mapping",resolve:function(e){if(null===e)return!0;var t,n=e;for(t in n)if(fa.call(n,t)&&null!==n[t])return!1;return!0},construct:function(e){return null!==e?e:{}}}),ma=na.extend({implicit:[aa,sa],explicit:[la,da,pa,ga]}),va=Object.prototype.hasOwnProperty,ya=/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,ba=/[\x85\u2028\u2029]/,wa=/[,\[\]\{\}]/,xa=/^(?:!|!!|![a-z\-]+!)$/i,ka=/^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;function Ta(e){return Object.prototype.toString.call(e)}function Aa(e){return 10===e||13===e}function Ca(e){return 9===e||32===e}function Ea(e){return 9===e||32===e||10===e||13===e}function Sa(e){return 44===e||91===e||93===e||123===e||125===e}function Oa(e){var t;return 48<=e&&e<=57?e-48:97<=(t=32|e)&&t<=102?t-97+10:-1}function Ia(e){return 120===e?2:117===e?4:85===e?8:0}function Ba(e){return 48<=e&&e<=57?e-48:-1}function Ra(e){return 48===e?"\0":97===e?"":98===e?"\b":116===e||9===e?"\t":110===e?"\n":118===e?"\v":102===e?"\f":114===e?"\r":101===e?"":32===e?" ":34===e?'"':47===e?"/":92===e?"\\":78===e?"":95===e?" ":76===e?"\u2028":80===e?"\u2029":""}function Da(e){return e<=65535?String.fromCharCode(e):String.fromCharCode(55296+(e-65536>>10),56320+(e-65536&1023))}for(var Na=new Array(256),La=new Array(256),Ua=0;Ua<256;Ua++)Na[Ua]=Ra(Ua)?1:0,La[Ua]=Ra(Ua);function Pa(e,t){this.input=e,this.filename=t.filename||null,this.schema=t.schema||ma,this.onWarning=t.onWarning||null,this.legacy=t.legacy||!1,this.json=t.json||!1,this.listener=t.listener||null,this.implicitTypes=this.schema.compiledImplicit,this.typeMap=this.schema.compiledTypeMap,this.length=e.length,this.position=0,this.line=0,this.lineStart=0,this.lineIndent=0,this.firstTabInLine=-1,this.documents=[]}function Va(e,t){var n={name:e.filename,buffer:e.input.slice(0,-1),position:e.position,line:e.line,column:e.position-e.lineStart};return n.snippet=Pi(n),new Ni(t,n)}function ja(e,t){throw Va(e,t)}function Fa(e,t){e.onWarning&&e.onWarning.call(null,Va(e,t))}var Ja={YAML:function(e,t,n){var r,i,a;null!==e.version&&ja(e,"duplication of %YAML directive"),1!==n.length&&ja(e,"YAML directive accepts exactly one argument"),null===(r=/^([0-9]+)\.([0-9]+)$/.exec(n[0]))&&ja(e,"ill-formed argument of the YAML directive"),i=parseInt(r[1],10),a=parseInt(r[2],10),1!==i&&ja(e,"unacceptable YAML version of the document"),e.version=n[0],e.checkLineBreaks=a<2,1!==a&&2!==a&&Fa(e,"unsupported YAML version of the document")},TAG:function(e,t,n){var r,i;2!==n.length&&ja(e,"TAG directive accepts exactly two arguments"),r=n[0],i=n[1],xa.test(r)||ja(e,"ill-formed tag handle (first argument) of the TAG directive"),va.call(e.tagMap,r)&&ja(e,'there is a previously declared suffix for "'+r+'" tag handle'),ka.test(i)||ja(e,"ill-formed tag prefix (second argument) of the TAG directive");try{i=decodeURIComponent(i)}catch{ja(e,"tag prefix is malformed: "+i)}e.tagMap[r]=i}};function Za(e,t,n,r){var i,a,s,o;if(t<n){if(o=e.input.slice(t,n),r)for(i=0,a=o.length;i<a;i+=1)9===(s=o.charCodeAt(i))||32<=s&&s<=1114111||ja(e,"expected valid JSON character");else ya.test(o)&&ja(e,"the stream contains non-printable characters");e.result+=o}}function Ma(e,t,n,r){var i,a,s,o;for(Bi.isObject(n)||ja(e,"cannot merge mappings; the provided source object is unacceptable"),s=0,o=(i=Object.keys(n)).length;s<o;s+=1)a=i[s],va.call(t,a)||(t[a]=n[a],r[a]=!0)}function Wa(e,t,n,r,i,a,s,o,l){var u,c;if(Array.isArray(i))for(u=0,c=(i=Array.prototype.slice.call(i)).length;u<c;u+=1)Array.isArray(i[u])&&ja(e,"nested arrays are not supported inside keys"),"object"==typeof i&&"[object Object]"===Ta(i[u])&&(i[u]="[object Object]");if("object"==typeof i&&"[object Object]"===Ta(i)&&(i="[object Object]"),i=String(i),null===t&&(t={}),"tag:yaml.org,2002:merge"===r)if(Array.isArray(a))for(u=0,c=a.length;u<c;u+=1)Ma(e,t,a[u],n);else Ma(e,t,a,n);else!e.json&&!va.call(n,i)&&va.call(t,i)&&(e.line=s||e.line,e.lineStart=o||e.lineStart,e.position=l||e.position,ja(e,"duplicated mapping key")),"__proto__"===i?Object.defineProperty(t,i,{configurable:!0,enumerable:!0,writable:!0,value:a}):t[i]=a,delete n[i];return t}function qa(e){var t;10===(t=e.input.charCodeAt(e.position))?e.position++:13===t?(e.position++,10===e.input.charCodeAt(e.position)&&e.position++):ja(e,"a line break is expected"),e.line+=1,e.lineStart=e.position,e.firstTabInLine=-1}function Xa(e,t,n){for(var r=0,i=e.input.charCodeAt(e.position);0!==i;){for(;Ca(i);)9===i&&-1===e.firstTabInLine&&(e.firstTabInLine=e.position),i=e.input.charCodeAt(++e.position);if(t&&35===i)do{i=e.input.charCodeAt(++e.position)}while(10!==i&&13!==i&&0!==i);if(!Aa(i))break;for(qa(e),i=e.input.charCodeAt(e.position),r++,e.lineIndent=0;32===i;)e.lineIndent++,i=e.input.charCodeAt(++e.position)}return-1!==n&&0!==r&&e.lineIndent<n&&Fa(e,"deficient indentation"),r}function za(e){var t,n=e.position;return!(45!==(t=e.input.charCodeAt(n))&&46!==t||t!==e.input.charCodeAt(n+1)||t!==e.input.charCodeAt(n+2)||(n+=3,t=e.input.charCodeAt(n),0!==t&&!Ea(t)))}function Ka(e,t){1===t?e.result+=" ":t>1&&(e.result+=Bi.repeat("\n",t-1))}function Ya(e,t){var n,r,i=e.tag,a=e.anchor,s=[],o=!1;if(-1!==e.firstTabInLine)return!1;for(null!==e.anchor&&(e.anchorMap[e.anchor]=s),r=e.input.charCodeAt(e.position);0!==r&&(-1!==e.firstTabInLine&&(e.position=e.firstTabInLine,ja(e,"tab characters must not be used in indentation")),45===r&&Ea(e.input.charCodeAt(e.position+1)));)if(o=!0,e.position++,Xa(e,!0,-1)&&e.lineIndent<=t)s.push(null),r=e.input.charCodeAt(e.position);else if(n=e.line,Ha(e,t,3,!1,!0),s.push(e.result),Xa(e,!0,-1),r=e.input.charCodeAt(e.position),(e.line===n||e.lineIndent>t)&&0!==r)ja(e,"bad indentation of a sequence entry");else if(e.lineIndent<t)break;return!!o&&(e.tag=i,e.anchor=a,e.kind="sequence",e.result=s,!0)}function Ga(e){var t,n,r,i,a=!1,s=!1;if(33!==(i=e.input.charCodeAt(e.position)))return!1;if(null!==e.tag&&ja(e,"duplication of a tag property"),60===(i=e.input.charCodeAt(++e.position))?(a=!0,i=e.input.charCodeAt(++e.position)):33===i?(s=!0,n="!!",i=e.input.charCodeAt(++e.position)):n="!",t=e.position,a){do{i=e.input.charCodeAt(++e.position)}while(0!==i&&62!==i);e.position<e.length?(r=e.input.slice(t,e.position),i=e.input.charCodeAt(++e.position)):ja(e,"unexpected end of the stream within a verbatim tag")}else{for(;0!==i&&!Ea(i);)33===i&&(s?ja(e,"tag suffix cannot contain exclamation marks"):(n=e.input.slice(t-1,e.position+1),xa.test(n)||ja(e,"named tag handle cannot contain such characters"),s=!0,t=e.position+1)),i=e.input.charCodeAt(++e.position);r=e.input.slice(t,e.position),wa.test(r)&&ja(e,"tag suffix cannot contain flow indicator characters")}r&&!ka.test(r)&&ja(e,"tag name cannot contain such characters: "+r);try{r=decodeURIComponent(r)}catch{ja(e,"tag name is malformed: "+r)}return a?e.tag=r:va.call(e.tagMap,n)?e.tag=e.tagMap[n]+r:"!"===n?e.tag="!"+r:"!!"===n?e.tag="tag:yaml.org,2002:"+r:ja(e,'undeclared tag handle "'+n+'"'),!0}function Qa(e){var t,n;if(38!==(n=e.input.charCodeAt(e.position)))return!1;for(null!==e.anchor&&ja(e,"duplication of an anchor property"),n=e.input.charCodeAt(++e.position),t=e.position;0!==n&&!Ea(n)&&!Sa(n);)n=e.input.charCodeAt(++e.position);return e.position===t&&ja(e,"name of an anchor node must contain at least one character"),e.anchor=e.input.slice(t,e.position),!0}function Ha(e,t,n,r,i){var a,s,o,l,u,c,d,h,p,f=1,g=!1,m=!1;if(null!==e.listener&&e.listener("open",e),e.tag=null,e.anchor=null,e.kind=null,e.result=null,a=s=o=4===n||3===n,r&&Xa(e,!0,-1)&&(g=!0,e.lineIndent>t?f=1:e.lineIndent===t?f=0:e.lineIndent<t&&(f=-1)),1===f)for(;Ga(e)||Qa(e);)Xa(e,!0,-1)?(g=!0,o=a,e.lineIndent>t?f=1:e.lineIndent===t?f=0:e.lineIndent<t&&(f=-1)):o=!1;if(o&&(o=g||i),(1===f||4===n)&&(h=1===n||2===n?t:t+1,p=e.position-e.lineStart,1===f?o&&(Ya(e,p)||function(e,t,n){var r,i,a,s,o,l,u,c=e.tag,d=e.anchor,h={},p=Object.create(null),f=null,g=null,m=null,v=!1,y=!1;if(-1!==e.firstTabInLine)return!1;for(null!==e.anchor&&(e.anchorMap[e.anchor]=h),u=e.input.charCodeAt(e.position);0!==u;){if(!v&&-1!==e.firstTabInLine&&(e.position=e.firstTabInLine,ja(e,"tab characters must not be used in indentation")),r=e.input.charCodeAt(e.position+1),a=e.line,63!==u&&58!==u||!Ea(r)){if(s=e.line,o=e.lineStart,l=e.position,!Ha(e,n,2,!1,!0))break;if(e.line===a){for(u=e.input.charCodeAt(e.position);Ca(u);)u=e.input.charCodeAt(++e.position);if(58===u)Ea(u=e.input.charCodeAt(++e.position))||ja(e,"a whitespace character is expected after the key-value separator within a block mapping"),v&&(Wa(e,h,p,f,g,null,s,o,l),f=g=m=null),y=!0,v=!1,i=!1,f=e.tag,g=e.result;else{if(!y)return e.tag=c,e.anchor=d,!0;ja(e,"can not read an implicit mapping pair; a colon is missed")}}else{if(!y)return e.tag=c,e.anchor=d,!0;ja(e,"can not read a block mapping entry; a multiline key may not be an implicit key")}}else 63===u?(v&&(Wa(e,h,p,f,g,null,s,o,l),f=g=m=null),y=!0,v=!0,i=!0):v?(v=!1,i=!0):ja(e,"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line"),e.position+=1,u=r;if((e.line===a||e.lineIndent>t)&&(v&&(s=e.line,o=e.lineStart,l=e.position),Ha(e,t,4,!0,i)&&(v?g=e.result:m=e.result),v||(Wa(e,h,p,f,g,m,s,o,l),f=g=m=null),Xa(e,!0,-1),u=e.input.charCodeAt(e.position)),(e.line===a||e.lineIndent>t)&&0!==u)ja(e,"bad indentation of a mapping entry");else if(e.lineIndent<t)break}return v&&Wa(e,h,p,f,g,null,s,o,l),y&&(e.tag=c,e.anchor=d,e.kind="mapping",e.result=h),y}(e,p,h))||function(e,t){var n,r,i,a,s,o,l,u,c,d,h,p,f=!0,g=e.tag,m=e.anchor,v=Object.create(null);if(91===(p=e.input.charCodeAt(e.position)))s=93,u=!1,a=[];else{if(123!==p)return!1;s=125,u=!0,a={}}for(null!==e.anchor&&(e.anchorMap[e.anchor]=a),p=e.input.charCodeAt(++e.position);0!==p;){if(Xa(e,!0,t),(p=e.input.charCodeAt(e.position))===s)return e.position++,e.tag=g,e.anchor=m,e.kind=u?"mapping":"sequence",e.result=a,!0;f?44===p&&ja(e,"expected the node content, but found ','"):ja(e,"missed comma between flow collection entries"),h=null,o=l=!1,63===p&&Ea(e.input.charCodeAt(e.position+1))&&(o=l=!0,e.position++,Xa(e,!0,t)),n=e.line,r=e.lineStart,i=e.position,Ha(e,t,1,!1,!0),d=e.tag,c=e.result,Xa(e,!0,t),p=e.input.charCodeAt(e.position),(l||e.line===n)&&58===p&&(o=!0,p=e.input.charCodeAt(++e.position),Xa(e,!0,t),Ha(e,t,1,!1,!0),h=e.result),u?Wa(e,a,v,d,c,h,n,r,i):o?a.push(Wa(e,null,v,d,c,h,n,r,i)):a.push(c),Xa(e,!0,t),44===(p=e.input.charCodeAt(e.position))?(f=!0,p=e.input.charCodeAt(++e.position)):f=!1}ja(e,"unexpected end of the stream within a flow collection")}(e,h)?m=!0:(s&&function(e,t){var n,r,i,a,s=1,o=!1,l=!1,u=t,c=0,d=!1;if(124===(a=e.input.charCodeAt(e.position)))r=!1;else{if(62!==a)return!1;r=!0}for(e.kind="scalar",e.result="";0!==a;)if(43===(a=e.input.charCodeAt(++e.position))||45===a)1===s?s=43===a?3:2:ja(e,"repeat of a chomping mode identifier");else{if(!((i=Ba(a))>=0))break;0===i?ja(e,"bad explicit indentation width of a block scalar; it cannot be less than one"):l?ja(e,"repeat of an indentation width identifier"):(u=t+i-1,l=!0)}if(Ca(a)){do{a=e.input.charCodeAt(++e.position)}while(Ca(a));if(35===a)do{a=e.input.charCodeAt(++e.position)}while(!Aa(a)&&0!==a)}for(;0!==a;){for(qa(e),e.lineIndent=0,a=e.input.charCodeAt(e.position);(!l||e.lineIndent<u)&&32===a;)e.lineIndent++,a=e.input.charCodeAt(++e.position);if(!l&&e.lineIndent>u&&(u=e.lineIndent),Aa(a))c++;else{if(e.lineIndent<u){3===s?e.result+=Bi.repeat("\n",o?1+c:c):1===s&&o&&(e.result+="\n");break}for(r?Ca(a)?(d=!0,e.result+=Bi.repeat("\n",o?1+c:c)):d?(d=!1,e.result+=Bi.repeat("\n",c+1)):0===c?o&&(e.result+=" "):e.result+=Bi.repeat("\n",c):e.result+=Bi.repeat("\n",o?1+c:c),o=!0,l=!0,c=0,n=e.position;!Aa(a)&&0!==a;)a=e.input.charCodeAt(++e.position);Za(e,n,e.position,!1)}}return!0}(e,h)||function(e,t){var n,r,i;if(39!==(n=e.input.charCodeAt(e.position)))return!1;for(e.kind="scalar",e.result="",e.position++,r=i=e.position;0!==(n=e.input.charCodeAt(e.position));)if(39===n){if(Za(e,r,e.position,!0),39!==(n=e.input.charCodeAt(++e.position)))return!0;r=e.position,e.position++,i=e.position}else Aa(n)?(Za(e,r,i,!0),Ka(e,Xa(e,!1,t)),r=i=e.position):e.position===e.lineStart&&za(e)?ja(e,"unexpected end of the document within a single quoted scalar"):(e.position++,i=e.position);ja(e,"unexpected end of the stream within a single quoted scalar")}(e,h)||function(e,t){var n,r,i,a,s,o;if(34!==(o=e.input.charCodeAt(e.position)))return!1;for(e.kind="scalar",e.result="",e.position++,n=r=e.position;0!==(o=e.input.charCodeAt(e.position));){if(34===o)return Za(e,n,e.position,!0),e.position++,!0;if(92===o){if(Za(e,n,e.position,!0),Aa(o=e.input.charCodeAt(++e.position)))Xa(e,!1,t);else if(o<256&&Na[o])e.result+=La[o],e.position++;else if((s=Ia(o))>0){for(i=s,a=0;i>0;i--)(s=Oa(o=e.input.charCodeAt(++e.position)))>=0?a=(a<<4)+s:ja(e,"expected hexadecimal character");e.result+=Da(a),e.position++}else ja(e,"unknown escape sequence");n=r=e.position}else Aa(o)?(Za(e,n,r,!0),Ka(e,Xa(e,!1,t)),n=r=e.position):e.position===e.lineStart&&za(e)?ja(e,"unexpected end of the document within a double quoted scalar"):(e.position++,r=e.position)}ja(e,"unexpected end of the stream within a double quoted scalar")}(e,h)?m=!0:function(e){var t,n,r;if(42!==(r=e.input.charCodeAt(e.position)))return!1;for(r=e.input.charCodeAt(++e.position),t=e.position;0!==r&&!Ea(r)&&!Sa(r);)r=e.input.charCodeAt(++e.position);return e.position===t&&ja(e,"name of an alias node must contain at least one character"),n=e.input.slice(t,e.position),va.call(e.anchorMap,n)||ja(e,'unidentified alias "'+n+'"'),e.result=e.anchorMap[n],Xa(e,!0,-1),!0}(e)?(m=!0,(null!==e.tag||null!==e.anchor)&&ja(e,"alias node should not have any properties")):function(e,t,n){var r,i,a,s,o,l,u,c,d=e.kind,h=e.result;if(Ea(c=e.input.charCodeAt(e.position))||Sa(c)||35===c||38===c||42===c||33===c||124===c||62===c||39===c||34===c||37===c||64===c||96===c||(63===c||45===c)&&(Ea(r=e.input.charCodeAt(e.position+1))||n&&Sa(r)))return!1;for(e.kind="scalar",e.result="",i=a=e.position,s=!1;0!==c;){if(58===c){if(Ea(r=e.input.charCodeAt(e.position+1))||n&&Sa(r))break}else if(35===c){if(Ea(e.input.charCodeAt(e.position-1)))break}else{if(e.position===e.lineStart&&za(e)||n&&Sa(c))break;if(Aa(c)){if(o=e.line,l=e.lineStart,u=e.lineIndent,Xa(e,!1,-1),e.lineIndent>=t){s=!0,c=e.input.charCodeAt(e.position);continue}e.position=a,e.line=o,e.lineStart=l,e.lineIndent=u;break}}s&&(Za(e,i,a,!1),Ka(e,e.line-o),i=a=e.position,s=!1),Ca(c)||(a=e.position+1),c=e.input.charCodeAt(++e.position)}return Za(e,i,a,!1),!!e.result||(e.kind=d,e.result=h,!1)}(e,h,1===n)&&(m=!0,null===e.tag&&(e.tag="?")),null!==e.anchor&&(e.anchorMap[e.anchor]=e.result)):0===f&&(m=o&&Ya(e,p))),null===e.tag)null!==e.anchor&&(e.anchorMap[e.anchor]=e.result);else if("?"===e.tag){for(null!==e.result&&"scalar"!==e.kind&&ja(e,'unacceptable node kind for !<?> tag; it should be "scalar", not "'+e.kind+'"'),l=0,u=e.implicitTypes.length;l<u;l+=1)if((d=e.implicitTypes[l]).resolve(e.result)){e.result=d.construct(e.result),e.tag=d.tag,null!==e.anchor&&(e.anchorMap[e.anchor]=e.result);break}}else if("!"!==e.tag){if(va.call(e.typeMap[e.kind||"fallback"],e.tag))d=e.typeMap[e.kind||"fallback"][e.tag];else for(d=null,l=0,u=(c=e.typeMap.multi[e.kind||"fallback"]).length;l<u;l+=1)if(e.tag.slice(0,c[l].tag.length)===c[l].tag){d=c[l];break}d||ja(e,"unknown tag !<"+e.tag+">"),null!==e.result&&d.kind!==e.kind&&ja(e,"unacceptable node kind for !<"+e.tag+'> tag; it should be "'+d.kind+'", not "'+e.kind+'"'),d.resolve(e.result,e.tag)?(e.result=d.construct(e.result,e.tag),null!==e.anchor&&(e.anchorMap[e.anchor]=e.result)):ja(e,"cannot resolve a node with !<"+e.tag+"> explicit tag")}return null!==e.listener&&e.listener("close",e),null!==e.tag||null!==e.anchor||m}function _a(e){var t,n,r,i,a=e.position,s=!1;for(e.version=null,e.checkLineBreaks=e.legacy,e.tagMap=Object.create(null),e.anchorMap=Object.create(null);0!==(i=e.input.charCodeAt(e.position))&&(Xa(e,!0,-1),i=e.input.charCodeAt(e.position),!(e.lineIndent>0||37!==i));){for(s=!0,i=e.input.charCodeAt(++e.position),t=e.position;0!==i&&!Ea(i);)i=e.input.charCodeAt(++e.position);for(r=[],(n=e.input.slice(t,e.position)).length<1&&ja(e,"directive name must not be less than one character in length");0!==i;){for(;Ca(i);)i=e.input.charCodeAt(++e.position);if(35===i){do{i=e.input.charCodeAt(++e.position)}while(0!==i&&!Aa(i));break}if(Aa(i))break;for(t=e.position;0!==i&&!Ea(i);)i=e.input.charCodeAt(++e.position);r.push(e.input.slice(t,e.position))}0!==i&&qa(e),va.call(Ja,n)?Ja[n](e,n,r):Fa(e,'unknown document directive "'+n+'"')}Xa(e,!0,-1),0===e.lineIndent&&45===e.input.charCodeAt(e.position)&&45===e.input.charCodeAt(e.position+1)&&45===e.input.charCodeAt(e.position+2)?(e.position+=3,Xa(e,!0,-1)):s&&ja(e,"directives end mark is expected"),Ha(e,e.lineIndent-1,4,!1,!0),Xa(e,!0,-1),e.checkLineBreaks&&ba.test(e.input.slice(a,e.position))&&Fa(e,"non-ASCII line breaks are interpreted as content"),e.documents.push(e.result),e.position===e.lineStart&&za(e)?46===e.input.charCodeAt(e.position)&&(e.position+=3,Xa(e,!0,-1)):e.position<e.length-1&&ja(e,"end of the stream or a document separator is expected")}function $a(e,t){t=t||{},0!==(e=String(e)).length&&(10!==e.charCodeAt(e.length-1)&&13!==e.charCodeAt(e.length-1)&&(e+="\n"),65279===e.charCodeAt(0)&&(e=e.slice(1)));var n=new Pa(e,t),r=e.indexOf("\0");for(-1!==r&&(n.position=r,ja(n,"null byte is not allowed in input")),n.input+="\0";32===n.input.charCodeAt(n.position);)n.lineIndent+=1,n.position+=1;for(;n.position<n.length-1;)_a(n);return n.documents}var es=function(e,t,n){null!==t&&"object"==typeof t&&typeof n>"u"&&(n=t,t=null);var r=$a(e,n);if("function"!=typeof t)return r;for(var i=0,a=r.length;i<a;i+=1)t(r[i])},ts=function(e,t){var n=$a(e,t);if(0!==n.length){if(1===n.length)return n[0];throw new Ni("expected a single document in the stream, but found more")}},ns={loadAll:es,load:ts},rs=Object.prototype.toString,is=Object.prototype.hasOwnProperty,as=65279,ss={0:"\\0",7:"\\a",8:"\\b",9:"\\t",10:"\\n",11:"\\v",12:"\\f",13:"\\r",27:"\\e",34:'\\"',92:"\\\\",133:"\\N",160:"\\_",8232:"\\L",8233:"\\P"},os=["y","Y","yes","Yes","YES","on","On","ON","n","N","no","No","NO","off","Off","OFF"],ls=/^[-+]?[0-9_]+(?::[0-9_]+)+(?:\.[0-9_]*)?$/;function us(e){var t,n,r;if(t=e.toString(16).toUpperCase(),e<=255)n="x",r=2;else if(e<=65535)n="u",r=4;else{if(!(e<=4294967295))throw new Ni("code point within a string may not be greater than 0xFFFFFFFF");n="U",r=8}return"\\"+n+Bi.repeat("0",r-t.length)+t}function cs(e){this.schema=e.schema||ma,this.indent=Math.max(1,e.indent||2),this.noArrayIndent=e.noArrayIndent||!1,this.skipInvalid=e.skipInvalid||!1,this.flowLevel=Bi.isNothing(e.flowLevel)?-1:e.flowLevel,this.styleMap=function(e,t){var n,r,i,a,s,o,l;if(null===t)return{};for(n={},i=0,a=(r=Object.keys(t)).length;i<a;i+=1)s=r[i],o=String(t[s]),"!!"===s.slice(0,2)&&(s="tag:yaml.org,2002:"+s.slice(2)),(l=e.compiledTypeMap.fallback[s])&&is.call(l.styleAliases,o)&&(o=l.styleAliases[o]),n[s]=o;return n}(this.schema,e.styles||null),this.sortKeys=e.sortKeys||!1,this.lineWidth=e.lineWidth||80,this.noRefs=e.noRefs||!1,this.noCompatMode=e.noCompatMode||!1,this.condenseFlow=e.condenseFlow||!1,this.quotingType='"'===e.quotingType?2:1,this.forceQuotes=e.forceQuotes||!1,this.replacer="function"==typeof e.replacer?e.replacer:null,this.implicitTypes=this.schema.compiledImplicit,this.explicitTypes=this.schema.compiledExplicit,this.tag=null,this.result="",this.duplicates=[],this.usedDuplicates=null}function ds(e,t){for(var n,r=Bi.repeat(" ",t),i=0,a=-1,s="",o=e.length;i<o;)-1===(a=e.indexOf("\n",i))?(n=e.slice(i),i=o):(n=e.slice(i,a+1),i=a+1),n.length&&"\n"!==n&&(s+=r),s+=n;return s}function hs(e,t){return"\n"+Bi.repeat(" ",e.indent*t)}function ps(e){return 32===e||9===e}function fs(e){return 32<=e&&e<=126||161<=e&&e<=55295&&8232!==e&&8233!==e||57344<=e&&e<=65533&&e!==as||65536<=e&&e<=1114111}function gs(e){return fs(e)&&e!==as&&13!==e&&10!==e}function ms(e,t,n){var r=gs(e),i=r&&!ps(e);return(n?r:r&&44!==e&&91!==e&&93!==e&&123!==e&&125!==e)&&35!==e&&!(58===t&&!i)||gs(t)&&!ps(t)&&35===e||58===t&&i}function vs(e,t){var n,r=e.charCodeAt(t);return r>=55296&&r<=56319&&t+1<e.length&&((n=e.charCodeAt(t+1))>=56320&&n<=57343)?1024*(r-55296)+n-56320+65536:r}function ys(e){return/^\n* /.test(e)}function bs(e,t,n,r,i,a,s,o){var l,u=0,c=null,d=!1,h=!1,p=-1!==r,f=-1,g=function(e){return fs(e)&&e!==as&&!ps(e)&&45!==e&&63!==e&&58!==e&&44!==e&&91!==e&&93!==e&&123!==e&&125!==e&&35!==e&&38!==e&&42!==e&&33!==e&&124!==e&&61!==e&&62!==e&&39!==e&&34!==e&&37!==e&&64!==e&&96!==e}(vs(e,0))&&function(e){return!ps(e)&&58!==e}(vs(e,e.length-1));if(t||s)for(l=0;l<e.length;u>=65536?l+=2:l++){if(!fs(u=vs(e,l)))return 5;g=g&&ms(u,c,o),c=u}else{for(l=0;l<e.length;u>=65536?l+=2:l++){if(10===(u=vs(e,l)))d=!0,p&&(h=h||l-f-1>r&&" "!==e[f+1],f=l);else if(!fs(u))return 5;g=g&&ms(u,c,o),c=u}h=h||p&&l-f-1>r&&" "!==e[f+1]}return d||h?n>9&&ys(e)?5:s?2===a?5:2:h?4:3:!g||s||i(e)?2===a?5:2:1}function ws(e,t,n,r,i){e.dump=function(){if(0===t.length)return 2===e.quotingType?'""':"''";if(!e.noCompatMode&&(-1!==os.indexOf(t)||ls.test(t)))return 2===e.quotingType?'"'+t+'"':"'"+t+"'";var a=e.indent*Math.max(1,n),s=-1===e.lineWidth?-1:Math.max(Math.min(e.lineWidth,40),e.lineWidth-a),o=r||e.flowLevel>-1&&n>=e.flowLevel;switch(bs(t,o,e.indent,s,(function(t){return function(e,t){var n,r;for(n=0,r=e.implicitTypes.length;n<r;n+=1)if(e.implicitTypes[n].resolve(t))return!0;return!1}(e,t)}),e.quotingType,e.forceQuotes&&!r,i)){case 1:return t;case 2:return"'"+t.replace(/'/g,"''")+"'";case 3:return"|"+xs(t,e.indent)+ks(ds(t,a));case 4:return">"+xs(t,e.indent)+ks(ds(function(e,t){for(var n,r,i=/(\n+)([^\n]*)/g,a=(u=void 0,u=e.indexOf("\n"),u=-1!==u?u:e.length,i.lastIndex=u,Ts(e.slice(0,u),t)),s="\n"===e[0]||" "===e[0];r=i.exec(e);){var o=r[1],l=r[2];n=" "===l[0],a+=o+(s||n||""===l?"":"\n")+Ts(l,t),s=n}var u;return a}(t,s),a));case 5:return'"'+function(e){for(var t,n="",r=0,i=0;i<e.length;r>=65536?i+=2:i++)r=vs(e,i),!(t=ss[r])&&fs(r)?(n+=e[i],r>=65536&&(n+=e[i+1])):n+=t||us(r);return n}(t)+'"';default:throw new Ni("impossible error: invalid scalar style")}}()}function xs(e,t){var n=ys(e)?String(t):"",r="\n"===e[e.length-1];return n+(r&&("\n"===e[e.length-2]||"\n"===e)?"+":r?"":"-")+"\n"}function ks(e){return"\n"===e[e.length-1]?e.slice(0,-1):e}function Ts(e,t){if(""===e||" "===e[0])return e;for(var n,r,i=/ [^ ]/g,a=0,s=0,o=0,l="";n=i.exec(e);)(o=n.index)-a>t&&(r=s>a?s:o,l+="\n"+e.slice(a,r),a=r+1),s=o;return l+="\n",e.length-a>t&&s>a?l+=e.slice(a,s)+"\n"+e.slice(s+1):l+=e.slice(a),l.slice(1)}function As(e,t,n,r){var i,a,s,o="",l=e.tag;for(i=0,a=n.length;i<a;i+=1)s=n[i],e.replacer&&(s=e.replacer.call(n,String(i),s)),(Es(e,t+1,s,!0,!0,!1,!0)||typeof s>"u"&&Es(e,t+1,null,!0,!0,!1,!0))&&((!r||""!==o)&&(o+=hs(e,t)),e.dump&&10===e.dump.charCodeAt(0)?o+="-":o+="- ",o+=e.dump);e.tag=l,e.dump=o||"[]"}function Cs(e,t,n){var r,i,a,s,o,l;for(a=0,s=(i=n?e.explicitTypes:e.implicitTypes).length;a<s;a+=1)if(((o=i[a]).instanceOf||o.predicate)&&(!o.instanceOf||"object"==typeof t&&t instanceof o.instanceOf)&&(!o.predicate||o.predicate(t))){if(n?o.multi&&o.representName?e.tag=o.representName(t):e.tag=o.tag:e.tag="?",o.represent){if(l=e.styleMap[o.tag]||o.defaultStyle,"[object Function]"===rs.call(o.represent))r=o.represent(t,l);else{if(!is.call(o.represent,l))throw new Ni("!<"+o.tag+'> tag resolver accepts not "'+l+'" style');r=o.represent[l](t,l)}e.dump=r}return!0}return!1}function Es(e,t,n,r,i,a,s){e.tag=null,e.dump=n,Cs(e,n,!1)||Cs(e,n,!0);var o,l=rs.call(e.dump),u=r;r&&(r=e.flowLevel<0||e.flowLevel>t);var c,d,h="[object Object]"===l||"[object Array]"===l;if(h&&(d=-1!==(c=e.duplicates.indexOf(n))),(null!==e.tag&&"?"!==e.tag||d||2!==e.indent&&t>0)&&(i=!1),d&&e.usedDuplicates[c])e.dump="*ref_"+c;else{if(h&&d&&!e.usedDuplicates[c]&&(e.usedDuplicates[c]=!0),"[object Object]"===l)r&&0!==Object.keys(e.dump).length?(function(e,t,n,r){var i,a,s,o,l,u,c="",d=e.tag,h=Object.keys(n);if(!0===e.sortKeys)h.sort();else if("function"==typeof e.sortKeys)h.sort(e.sortKeys);else if(e.sortKeys)throw new Ni("sortKeys must be a boolean or a function");for(i=0,a=h.length;i<a;i+=1)u="",(!r||""!==c)&&(u+=hs(e,t)),o=n[s=h[i]],e.replacer&&(o=e.replacer.call(n,s,o)),Es(e,t+1,s,!0,!0,!0)&&((l=null!==e.tag&&"?"!==e.tag||e.dump&&e.dump.length>1024)&&(e.dump&&10===e.dump.charCodeAt(0)?u+="?":u+="? "),u+=e.dump,l&&(u+=hs(e,t)),Es(e,t+1,o,!0,l)&&(e.dump&&10===e.dump.charCodeAt(0)?u+=":":u+=": ",c+=u+=e.dump));e.tag=d,e.dump=c||"{}"}(e,t,e.dump,i),d&&(e.dump="&ref_"+c+e.dump)):(function(e,t,n){var r,i,a,s,o,l="",u=e.tag,c=Object.keys(n);for(r=0,i=c.length;r<i;r+=1)o="",""!==l&&(o+=", "),e.condenseFlow&&(o+='"'),s=n[a=c[r]],e.replacer&&(s=e.replacer.call(n,a,s)),Es(e,t,a,!1,!1)&&(e.dump.length>1024&&(o+="? "),o+=e.dump+(e.condenseFlow?'"':"")+":"+(e.condenseFlow?"":" "),Es(e,t,s,!1,!1)&&(l+=o+=e.dump));e.tag=u,e.dump="{"+l+"}"}(e,t,e.dump),d&&(e.dump="&ref_"+c+" "+e.dump));else if("[object Array]"===l)r&&0!==e.dump.length?(e.noArrayIndent&&!s&&t>0?As(e,t-1,e.dump,i):As(e,t,e.dump,i),d&&(e.dump="&ref_"+c+e.dump)):(function(e,t,n){var r,i,a,s="",o=e.tag;for(r=0,i=n.length;r<i;r+=1)a=n[r],e.replacer&&(a=e.replacer.call(n,String(r),a)),(Es(e,t,a,!1,!1)||typeof a>"u"&&Es(e,t,null,!1,!1))&&(""!==s&&(s+=","+(e.condenseFlow?"":" ")),s+=e.dump);e.tag=o,e.dump="["+s+"]"}(e,t,e.dump),d&&(e.dump="&ref_"+c+" "+e.dump));else{if("[object String]"!==l){if("[object Undefined]"===l)return!1;if(e.skipInvalid)return!1;throw new Ni("unacceptable kind of an object to dump "+l)}"?"!==e.tag&&ws(e,e.dump,t,a,u)}null!==e.tag&&"?"!==e.tag&&(o=encodeURI("!"===e.tag[0]?e.tag.slice(1):e.tag).replace(/!/g,"%21"),o="!"===e.tag[0]?"!"+o:"tag:yaml.org,2002:"===o.slice(0,18)?"!!"+o.slice(18):"!<"+o+">",e.dump=o+" "+e.dump)}return!0}function Ss(e,t){var n,r,i=[],a=[];for(Os(e,i,a),n=0,r=a.length;n<r;n+=1)t.duplicates.push(i[a[n]]);t.usedDuplicates=new Array(r)}function Os(e,t,n){var r,i,a;if(null!==e&&"object"==typeof e)if(-1!==(i=t.indexOf(e)))-1===n.indexOf(i)&&n.push(i);else if(t.push(e),Array.isArray(e))for(i=0,a=e.length;i<a;i+=1)Os(e[i],t,n);else for(i=0,a=(r=Object.keys(e)).length;i<a;i+=1)Os(e[r[i]],t,n)}var Is=function(e,t){var n=new cs(t=t||{});n.noRefs||Ss(e,n);var r=e;return n.replacer&&(r=n.replacer.call({"":r},"",r)),Es(n,0,r,!0,!0)?n.dump+"\n":""},Bs=ns.load,Rs={dump:Is}.dump,Ds={exports:{}},Ns={exports:{}};!function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.ParsingError=void 0;class n extends Error{constructor(e,t){super(e),this.cause=t}}let r;function i(){return o(!1)||function(){const e=d(/^([^<]+)/);if(e){const t={type:"Text",content:e[1]};return{excluded:!1===r.options.filter(t),node:t}}}()||l()||function(){if(r.xml.startsWith("<![CDATA[")){const e=r.xml.indexOf("]]>");if(e>-1){const t=e+3,n={type:"CDATA",content:r.xml.substring(0,t)};return r.xml=r.xml.slice(t),{excluded:!1===r.options.filter(n),node:n}}}}()}function a(){return d(/\s*/),o(!0)||l()||function(){const e=d(/^<!DOCTYPE\s+\S+\s+SYSTEM[^>]*>/)||d(/^<!DOCTYPE\s+\S+\s+PUBLIC[^>]*>/)||d(/^<!DOCTYPE\s+\S+\s*\[[^\]]*]>/)||d(/^<!DOCTYPE\s+\S+\s*>/);if(e){const t={type:"DocumentType",content:e[0]};return{excluded:!1===r.options.filter(t),node:t}}}()||s(!1)}function s(e){const t=d(e?/^<\?(xml)\s*/:/^<\?([\w-:.]+)\s*/);if(!t)return;const n={name:t[1],type:"ProcessingInstruction",attributes:{}};for(;!h()&&!p("?>");){const e=u();if(!e)return;n.attributes[e.name]=e.value}return d(/\?>/),{excluded:!e&&!1===r.options.filter(n),node:n}}function o(e){const t=d(/^<([^?!</>\s]+)\s*/);if(!t)return;const a={type:"Element",name:t[1],attributes:{},children:[]},s=!e&&!1===r.options.filter(a);for(;!(h()||p(">")||p("?>")||p("/>"));){const e=u();if(!e)return;a.attributes[e.name]=e.value}if(d(/^\s*\/>/))return a.children=null,{excluded:s,node:a};d(/\??>/);let o=i();for(;o;)o.excluded||a.children.push(o.node),o=i();if(r.options.strictMode){const e=`</${a.name}>`;if(!r.xml.startsWith(e))throw new n("Failed to parse XML",`Closing tag not matching "${e}"`);r.xml=r.xml.slice(e.length)}else d(/^<\/\s*[\w-:.\u00C0-\u00FF]+>/);return{excluded:s,node:a}}function l(){const e=d(/^<!--[\s\S]*?-->/);if(e){const t={type:"Comment",content:e[0]};return{excluded:!1===r.options.filter(t),node:t}}}function u(){const e=d(/([^=]+)\s*=\s*("[^"]*"|'[^']*'|[^>\s]+)\s*/);if(e)return{name:e[1].trim(),value:c(e[2].trim())}}function c(e){return e.replace(/^['"]|['"]$/g,"")}function d(e){const t=r.xml.match(e);if(t)return r.xml=r.xml.slice(t[0].length),t}function h(){return 0===r.xml.length}function p(e){return 0===r.xml.indexOf(e)}function f(e,t={}){e=e.trim();const i=t.filter||(()=>!0);return r={xml:e,options:Object.assign(Object.assign({},t),{filter:i,strictMode:!0===t.strictMode})},function(){const e=s(!0),t=[];let i,o=a();for(;o;){if("Element"===o.node.type){if(i)throw new Error("Found multiple root nodes");i=o.node}o.excluded||t.push(o.node),o=a()}if(!i)throw new n("Failed to parse XML","Root Element not found");if(0!==r.xml.length)throw new n("Failed to parse XML","Not Well-Formed XML");return{declaration:e?e.node:null,root:i,children:t}}()}t.ParsingError=n,e.exports=f,t.default=f}(Ns,Ns.exports);var Ls=Ns.exports;!function(e,t){var n=c&&c.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=n(Ls);function i(e){if(!e.options.indentation&&!e.options.lineSeparator)return;let t;for(e.content+=e.options.lineSeparator,t=0;t<e.level;t++)e.content+=e.options.indentation}function a(e,t){e.content+=t}function s(e,t,n){if("string"==typeof e.content)!function(e,t,n){if(!n){const n=e.trim();(t.options.lineSeparator||0===n.length)&&(e=n)}e.length>0&&(!n&&t.content.length>0&&i(t),a(t,e))}(e.content,t,n);else if("Element"===e.type)!function(e,t,n){if(t.path.push(e.name),!n&&t.content.length>0&&i(t),a(t,"<"+e.name),o(t,e.attributes),null===e.children||t.options.forceSelfClosingEmptyTag&&0===e.children.length){const e=t.options.whiteSpaceAtEndOfSelfclosingTag?" />":"/>";a(t,e)}else if(0===e.children.length)a(t,"></"+e.name+">");else{const r=e.children;a(t,">"),t.level++;let o="preserve"===e.attributes["xml:space"],l=!1;if(!o&&t.options.ignoredPaths&&(l=function(e,t){const n="/"+e.join("/"),r=e[e.length-1];return t.includes(r)||t.includes(n)}(t.path,t.options.ignoredPaths),o=l),!o&&t.options.collapseContent){let e=!1,t=!1,n=!1;r.forEach((function(i,a){"Text"===i.type?(i.content.includes("\n")?(t=!0,i.content=i.content.trim()):(0===a||a===r.length-1)&&0===i.content.trim().length&&(i.content=""),i.content.trim().length>0&&(e=!0)):"CDATA"===i.type?e=!0:n=!0})),e&&(!n||!t)&&(o=!0)}r.forEach((function(e){s(e,t,n||o)})),t.level--,!n&&!o&&i(t),l&&function(e){let t;for(e.content=e.content.replace(/ +$/,""),t=0;t<e.level;t++)e.content+=e.options.indentation}(t),a(t,"</"+e.name+">")}t.path.pop()}(e,t,n);else{if("ProcessingInstruction"!==e.type)throw new Error("Unknown node type: "+e.type);l(e,t)}}function o(e,t){Object.keys(t).forEach((function(n){const r=t[n].replace(/"/g,"&quot;");a(e," "+n+'="'+r+'"')}))}function l(e,t){t.content.length>0&&i(t),a(t,"<?"+e.name),o(t,e.attributes),a(t,"?>")}function u(e,t={}){t.indentation="indentation"in t?t.indentation:"    ",t.collapseContent=!0===t.collapseContent,t.lineSeparator="lineSeparator"in t?t.lineSeparator:"\r\n",t.whiteSpaceAtEndOfSelfclosingTag=!0===t.whiteSpaceAtEndOfSelfclosingTag,t.throwOnFailure=!1!==t.throwOnFailure;try{const n=(0,r.default)(e,{filter:t.filter,strictMode:t.strictMode}),i={content:"",level:0,options:t,path:[]};return n.declaration&&l(n.declaration,i),n.children.forEach((function(e){s(e,i,!1)})),t.lineSeparator?i.content.replace(/\r\n/g,"\n").replace(/\n/g,t.lineSeparator):i.content}catch(n){if(t.throwOnFailure)throw n;return e}}u.minify=(e,t={})=>u(e,Object.assign(Object.assign({},t),{indentation:"",lineSeparator:""})),e.exports=u,t.default=u}(Ds,Ds.exports);const Us=d(Ds.exports);class Ps{constructor(e,t,n){a(this,"rawData"),a(this,"parsedData",Mn),a(this,"params"),a(this,"path",[]),this.params=n,this.rawData=this.deserializeData(e,t),this.parsedData=this.addMetaDataRecursively(this.rawData,"root"),this.normalizingRules()}getData(e){const t={};for(const[e,n]of this.iterateOverProperties()){if(1===n.length)continue;const r=Ps.convertPathArrayToStringPathFormat(n,!1);Xr.set(t,r,g(e._value))}return this.serializeData(t,e)}deserializeData(e,t){switch(t){case Fn.Js:return e;case Fn.Json:try{return JSON.parse(e)}catch(e){throw new Error(e)}case Fn.Yaml:try{return Bs(e)}catch(e){throw new Error(e)}case Fn.Xml:try{Us(e);const t=(new Ve.XMLParser).parse(e),n=Object.keys(t)[0];return this.params.xmlRootName=n,t[n]}catch(e){throw new Error(e)}case Fn.Toml:try{return function(e){let t={},n={},r=t,i=n;for(let a=Ze(e,0);a<e.length;){if("["===e[a]){let s="["===e[++a],o=at(e,a+=+s,"]");if(s){if("]"!==e[o[1]-1])throw new je("expected end of table declaration",{toml:e,ptr:o[1]-1});o[1]++}let l=st(o[0],t,n,s?2:1);if(!l)throw new je("trying to redefine an already defined table or value",{toml:e,ptr:a});i=l[2],r=l[1],a=o[1]}else{let t=at(e,a),n=st(t[0],r,i,0);if(!n)throw new je("trying to redefine an already defined table or value",{toml:e,ptr:a});let s=rt(e,t[1]);n[1][n[0]]=s[0],a=s[1]}if(a=Ze(e,a,!0),e[a]&&"\n"!==e[a]&&"\r"!==e[a])throw new je("each key-value declaration must be followed by an end-of-line",{toml:e,ptr:a});a=Ze(e,a)}return t}(e)}catch(e){throw new Error(e)}default:throw new Error("Invalid datatype")}}serializeData(e,t){switch(t){case Fn.Js:return e;case Fn.Json:try{return JSON.stringify(e)}catch(e){throw new Error(e)}case Fn.Yaml:try{return Rs(e)}catch(e){throw new Error(e)}case Fn.Xml:try{const t={};return void 0!==this.params.xmlRootName?t[this.params.xmlRootName]=e:t.root=e,(new Ve.XMLBuilder).build(t)}catch(e){throw new Error(e)}case Fn.Toml:try{return function(e){if("object"!==lt(e))throw new TypeError("stringify can only be called with an object");return pt(e)}(Xr.cloneDeepWith(e,(e=>{if(e instanceof Date)return e=new Ge(e.toISOString().split("T")[0])})))}catch(e){throw new Error(e)}default:throw new Error("Invalid datatype")}}addMetaDataRecursively(e,t,n=!1){const r=n?parseInt(t):t;this.path.push(r);let i=vi(e);if(vi(e)===Jn.Object&&"_value"in e&&(i=vi(e._value)),i===Jn.Object){e=Ps.addRequiredMetaDataToProperties(e,r,this.path);for(const t in e._value)e._value[t]=this.addMetaDataRecursively(e._value[t],t)}else if(i===Jn.Array){e=Ps.addRequiredMetaDataToProperties(e,r,this.path);for(const t in e._value)e._value[t]=this.addMetaDataRecursively(e._value[t],t,!0)}else e=Ps.addRequiredMetaDataToProperties(e,r,this.path);return this.path.pop(),e}static addRequiredMetaDataToProperties(e,t,n){n=Array.from(n);let r=g(Mn);return r._path=n,r._key=t,vi(e)===Jn.Object&&"_value"in e?(r._value=e._value,r._valueType=vi(e._value),r=function(e,t){return{...e,...Object.fromEntries(Object.entries(t).filter((([t])=>!(t in e))))}}(r,e)):(r._value=e,r._valueType=vi(e)),r._valueType===Jn.Null||typeof e._fieldType>"u"?r._fieldType=function(e){switch(e){case"string":return"text";case"number":return"number";case"boolean":return"boolean";case"object":return"object";case"array":return"array";case"null":case"NaN":return"null";case"undefined":return"undefined";case"Date":return"date";default:throw new Error("value type is not supported")}}(r._valueType):r._fieldType=e._fieldType,r}*iterateOverProperties(e){if(null==e&&(e=this.parsedData),e._valueType===Jn.Object){yield[e,e._path];const t=e._value;for(const e in t)yield*this.iterateOverProperties(t[e])}else if(e._valueType===Jn.Array){yield[e,e._path];const t=e._value;for(const e in t)yield*this.iterateOverProperties(t[e])}else yield[e,e._path]}normalizingRules(){for(const[e]of this.iterateOverProperties())if(void 0!==e._rules)for(let t=0;t<e._rules.length;t++)vi(e._rules[t])===Jn.String&&(e._rules[t]={rule:e._rules[t],params:void 0})}addProperty(e){const t=Ps.convertPathArrayToStringPathFormat(e._path);Xr.set(this.parsedData,t,e)}addElement(e){const t=Xr.cloneDeep(e._path);t.pop();const n=Ps.convertPathArrayToStringPathFormat(t),r=1===t.length?"":"._value";Xr.get(this.parsedData,n+r).push(e)}removeData(e){const t=Ps.convertPathArrayToStringPathFormat(e);Xr.unset(this.parsedData,t);if(vi(Xr.last(e))===Jn.Number){e.pop();const t=1===e.length?"":"._value",n=Ps.convertPathArrayToStringPathFormat(e)+t,r=Xr.get(this.parsedData,n),i=Ps.resetArrayIndexes(r);for(let e=0;e<i.length;e++){i[e]._key=e;const t=i[e]._path.length;i[e]._path[t-1]=e}Xr.set(this.parsedData,n,i)}}static convertPathArrayToStringPathFormat(e,t=!0){let n="";for(let r=0;r<e.length;r++){const i=e[r];vi(i)===Jn.String?0===r?n+=`${i}${t?"._value":""}`:r===e.length-1?n+=`.${i}`:n+=`.${i}${t?"._value":""}`:vi(i)===Jn.Number&&(r===e.length-1?n+=`[${i}]`:n+=`[${i}]${t?"._value":""}`)}return n.substring(5)}static resetArrayIndexes(e){return Xr.compact(e)}}class Vs{constructor(e,t){a(this,"data"),a(this,"params"),a(this,"generatedHTML",document.createElement("null")),this.params=t,this.data=e,this.drawData()}drawData(){const e=document.createElement("div");e.classList.add("guifierMainWrapper");const t=wi(this.data.parsedData,this.data,this.params);let n;this.params.flipBackgroundColors&&(t.showSecondaryColors=!t.showSecondaryColors),n=this.params.withoutContainer?t.draw():t.drawContentWithContainer(),e.append(n);const r=n.querySelector(".guifierContainerHeaderButtons");_r.addingEventListenerForHeaderButtons(r,t,t),this.generatedHTML=e}getGeneratedHTML(){return this.generatedHTML}}class js{constructor(e){a(this,"params"),a(this,"data"),a(this,"view"),a(this,"containerElement",null),a(this,"guifierElement",null);try{this.params=Zn.parse(e),this.checkIfMainElementExist(),this.setData(this.params.data,this.params.dataType)}catch(e){console.error(e),this.drawErrorHtmlElement(e)}}drawGeneratedHtmlElement(){null!==this.containerElement&&this.containerElement.append(this.getGeneratedHtmlElement())}drawErrorHtmlElement(e){this.guifierElement=this.drawErrorElement(e),null!==this.containerElement&&this.containerElement.append(this.guifierElement)}checkIfMainElementExist(){if(null===document.querySelector(this.params.elementSelector))throw new Error("Did not find the Main Element")}getGeneratedHtmlElement(){return this.guifierElement=this.view.getGeneratedHTML(),this.guifierElement}getData(e){return this.data.getData(e)}emptyThisElement(){null!==this.guifierElement&&this.guifierElement.remove()}setData(e,t){this.containerElement=document.querySelector(this.params.elementSelector);try{this.params.data=e,this.params.dataType=t,this.data=new Ps(e,t,this.params),this.view=new Vs(this.data,this.params),this.emptyThisElement(),this.drawGeneratedHtmlElement()}catch(e){console.error(e),this.emptyThisElement(),this.drawErrorHtmlElement(e)}}drawErrorElement(e){const t=document.createElement("div");t.classList.add("guifierErrorContainer");const n=document.createElement("div");n.classList.add("guifierErrorContainerError"),n.innerHTML="Error Occured",t.append(n);const r=document.createElement("pre");return r.classList.add("guifierErrorContainerContent"),r.style.whiteSpace="pre-wrap",r.innerHTML=e,t.append(r),t}}const{Controller:Fs}=n(2891);window.Controllers||(window.Controllers={}),window.Controllers["guifier-control"]=class extends Fs{static targets=["hidden","container"];static values={type:String};connect(){var e={elementSelector:"#"+this.containerTarget.id,data:this.hiddenTarget.value,dataType:this.typeValue,rootContainerName:"setting",fullScreen:!0,onChange:()=>{this.hiddenTarget.value=this.guifier.getData(this.typeValue),this.hiddenTarget.dispatchEvent(new Event("change"))}};this.guifier=new js(e),this.containerTarget.querySelectorAll(".guifierContainerCollapseButton").forEach((function(e){e.click()}))}}},1753:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["urlCache","status","refreshBtn"];static values={swUrl:String};urlCacheTargetConnected(){this.urlCacheValue=JSON.parse(this.urlCacheTarget.textContent)}updateOnlineStatus(){const e=this.statusTarget,t=this.refreshBtnTarget;navigator.onLine?(e.textContent="Online",e.classList.remove("bg-danger"),e.classList.add("bg-success"),t.hidden=!1,this.sw&&this.sw.active.postMessage({type:"ONLINE"}),t.click()):(e.textContent="Offline",e.classList.remove("bg-success"),e.classList.add("bg-danger"),t.hidden=!0,this.sw&&this.sw.active.postMessage({type:"OFFLINE"}))}manageOnlineStatus(){this.updateOnlineStatus(),window.addEventListener("online",this.updateOnlineStatus.bind(this)),window.addEventListener("offline",this.updateOnlineStatus.bind(this)),navigator.serviceWorker.register(this.swUrlValue).then((e=>{this.sw=e,new Promise((e=>setTimeout(e,100))).then((()=>{console.log("Service Worker registered with scope:",e.scope),console.log("Service Worker active:",e.active),e.active.postMessage({type:"CACHE_URLS",payload:this.urlCacheValue}),this.element.attributes["data-member-mobile-card-profile-pwa-ready-value"].value=!0}))}),(e=>{console.log("Service Worker registration failed:",e)}))}refreshPageIfOnline(){navigator.onLine&&window.location.reload()}connect(){"serviceWorker"in navigator&&window.addEventListener("load",this.manageOnlineStatus.bind(this)),setInterval(this.refreshPageIfOnline,3e5)}disconnect(){window.addEventListener("load",this.manageOnlineStatus.bind(this)),window.removeEventListener("online",this.updateOnlineStatus.bind(this)),window.removeEventListener("offline",this.updateOnlineStatus.bind(this))}}window.Controllers||(window.Controllers={}),window.Controllers["member-mobile-card-pwa"]=i},1841:function(){},2042:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["role","form","submitBtn"];checkSubmitEnable(){let e=this.roleTarget.value;Number(e.replace(/_/g,""))>0?(this.submitBtnTarget.disabled=!1,this.submitBtnTarget.focus()):this.submitBtnTarget.disabled=!0}}window.Controllers||(window.Controllers={}),window.Controllers["permission-add-role"]=i},2354:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["rowCheckbox"];ids=[];submitBtn=null;static outlets=["outlet-btn"];outletBtnOutletConnected(e,t){this.submitBtn=e,this.ids.length>0&&(this.submitBtn.element.disabled=!1)}outletBtnOutletDisconnected(e){this.submitBtn=null}rowCheckboxTargetConnected(e){this.ids.push(e.value),console.log(this.ids)}rowChecked(e){e.target.checked?this.ids.push(e.target.value):this.ids=this.ids.filter((t=>t!=e.target.value)),this.submitBtn.element.disabled=!0,this.ids.length>0&&(this.submitBtn.element.disabled=!1),console.log(this.ids)}connect(){}}window.Controllers||(window.Controllers={}),window.Controllers["officer-roster-table"]=i},2579:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["card","column"];static values={csrfToken:String,url:String};initialize(){this.draggedItem=null}registerBeforeDrop(e){this.beforeDropCallback=e}cardDrag(e){e.preventDefault(),this.processDrag(e,!1)}connect(){document.addEventListener("dragover",this.handleDragOver.bind(this)),document.addEventListener("drop",this.handleDrop.bind(this))}disconnect(){document.removeEventListener("dragover",this.handleDragOver.bind(this)),document.removeEventListener("drop",this.handleDrop.bind(this))}handleDragOver(e){e.preventDefault()}handleDrop(e){e.preventDefault(),this.element.contains(e.target)||(console.log("Dropped outside of the table"),this.restoreOriginalPosition())}restoreOriginalPosition(){this.draggedItem&&this.originalParent&&(this.originalIndex>=this.originalParent.children.length?this.originalParent.appendChild(this.draggedItem):this.originalParent.insertBefore(this.draggedItem,this.originalParent.children[this.originalIndex]),this.draggedItem.classList.remove("opacity-25"),this.draggedItem=null)}dropCard(e){e.preventDefault(),this.processDrag(e,!0),this.draggedItem.classList.remove("opacity-25"),this.draggedItem=null}grabCard(e){var t=e.target;t.classList.add("opacity-25"),this.draggedItem=t,this.originalParent=this.draggedItem.parentElement,this.originalIndex=Array.prototype.indexOf.call(this.originalParent.children,this.draggedItem)}processDrag(e,t){for(var n=e.target,r=this.draggedItem.dataset.recId;!n.classList.contains("sortable");){if("BODY"==n.tagName)return;n=n.parentElement}for(var i=e.target,a=!0;!i.classList.contains("card");){if("TD"==i.tagName){a=!1;break}i=i.parentElement}if(a&&i.dataset.stackRank,n.classList.contains("sortable")){e.dataTransfer.getData("Text");if(a?n.insertBefore(this.draggedItem,i):n.appendChild(this.draggedItem),t){var s=-1,o=-1,l=this.draggedItem.previousElementSibling;s=l?l.dataset.recId:-1;var u=this.draggedItem.nextElementSibling;o=u?u.dataset.recId:-1;var c=n.dataset.col;if(this.beforeDropCallback&&!this.beforeDropCallback(r,c))return void this.restoreOriginalPosition();fetch(this.urlValue+"/"+r,{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-Token":this.csrfTokenValue},body:JSON.stringify({newCol:n.dataset.col,placeAfter:s,placeBefore:o})})}}}}window.Controllers||(window.Controllers={}),window.Controllers.kanban=i},2895:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["cardSet","firstCard","name","scaName","branchName","membershipInfo","backgroundCheck","lastUpdate","loading","memberDetails"];static values={url:String};initialize(){this.currentCard=null,this.cardCount=1,this.maxCardLength=0}usedSpaceInCard(){for(var e=this.currentCard.children,t=0,n=0;n<e.length;n++)t+=e[n].offsetHeight;return t}appendToCard(e,t){this.currentCard.appendChild(e),null===t&&(t=2),t=this.maxCardLength*(t/100),this.usedSpaceInCard()>this.maxCardLength-t&&(this.currentCard.removeChild(e),this.startCard(),this.currentCard.appendChild(e))}startCard(){this.cardCount++;var e=document.createElement("div");e.classList.add("auth_card"),e.id="card_"+this.cardCount;var t=document.createElement("div");t.classList.add("cardbox"),t.id="cardDetails_"+this.cardCount,e.appendChild(t),this.cardSetTarget.appendChild(e),this.currentCard=t}optionsForFetch(){return{headers:{"X-Requested-With":"XMLHttpRequest",Accept:"application/json"}}}loadCard(){this.currentCard=this.firstCardTarget,this.maxCardLength=this.firstCardTarget.offsetHeight,this.cardCount=1,fetch(this.urlValue,this.optionsForFetch()).then((e=>e.json())).then((e=>{if(this.nameTarget.textContent=e.member.first_name+" "+e.member.last_name,this.scaNameTarget.textContent=e.member.sca_name,this.branchNameTarget.textContent=e.member.branch.name,e.member.membership_number&&e.member.membership_number.length>0){var t=new Date(e.member.membership_expires_on);t=t<new Date?"Expired":" - "+t.toLocaleDateString(),this.membershipInfoTarget.textContent=e.member.membership_number+" "+t}else this.membershipInfoTarget.innerHtml="",this.membershipInfoTarget.textContent="No Membership Info";if(e.member.background_check_expires_on){var n=new Date(e.member.background_check_expires_on);n=n<new Date?"Expired":" - "+n.toLocaleDateString();var r=document.createElement("strong");r.textContent=n,this.backgroundCheckTarget.innerHtml="",this.backgroundCheckTarget.appendChild(r)}else this.backgroundCheckTarget.innerHtml="",this.backgroundCheckTarget.textContent="No Background Check";var i=new Date;this.lastUpdateTarget.textContent=i.toLocaleDateString(),this.loadingTarget.hidden=!0,this.memberDetailsTarget.hidden=!1;for(let t in e)if("member"!==t){var a=e[t];for(let e in a){var s=a[e];if(0!==s.length){var o=document.createElement("h3");o.textContent=e,this.appendToCard(o,20);for(let e in s){var l=s[e],u=document.createElement("h5");u.textContent=e;var c=document.createElement("div");c.classList.add("cardGroup"),c.appendChild(u);var d=document.createElement("ul");for(let e=0;e<l.length;e++){var h=l[e],p=document.createElement("li");p.textContent=h,d.appendChild(p)}c.appendChild(d),this.appendToCard(c,10)}}}}}))}connect(){this.loadCard()}}window.Controllers||(window.Controllers={}),window.Controllers["member-card-profile"]=i},2939:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["domain","award","reason","events","specialty","state","planToGiveBlock","planToGiveEvent","givenBlock","recId","turboFrame","givenDate","closeReason","closeReasonBlock","stateRulesBlock"];static values={publicProfileUrl:String,awardListUrl:String,formUrl:String,turboFrameUrl:String};static outlets=["outlet-btn"];setId(e){e.detail.id&&(this.turboFrameTarget.setAttribute("src",this.turboFrameUrlValue+"/"+e.detail.id),this.element.setAttribute("action",this.formUrlValue+"/"+e.detail.id))}outletBtnOutletConnected(e,t){e.addListener(this.setId.bind(this))}outletBtnOutletDisconnected(e){e.removeListener(this.setId.bind(this))}submit(e){document.getElementById("recommendation_edit_close").click()}setAward(e){let t=e.target.dataset.awardId;this.awardTarget.value=t,""!=this.awardTarget.value&&this.populateSpecialties(e)}populateAwardDescriptions(e){let t=this.awardListUrlValue+"/"+e.target.value;fetch(t,this.optionsForFetch()).then((e=>e.json())).then((e=>{this.awardTarget.value="";let t=[];if(e.length>0){if(e.forEach((function(e){t.push({value:e.id,text:e.name,data:e})})),this.awardTarget.options=t,this.awardTarget.disabled=!1,this.awardTarget.dataset.acInitSelectionValue){let e=JSON.parse(this.awardTarget.dataset.acInitSelectionValue);this.awardTarget.value=e.value,""!=this.awardTarget.value&&this.populateSpecialties({target:{value:e.value}})}}else this.awardTarget.options=[{value:"No awards available",text:"No awards available"}],this.awardTarget.value="No awards available",this.awardTarget.disabled=!0,this.specialtyTarget.options=[{value:"No specialties available",text:"No specialties available"}],this.specialtyTarget.value="No specialties available",this.specialtyTarget.disabled=!0,this.specialtyTarget.hidden=!0}))}populateSpecialties(e){let t=this.awardTarget.value,n=(this.awardTarget.options,this.awardTarget.options.find((e=>e.value==t))),r=[];if(null!=n.data.specialties&&n.data.specialties.length>0){if(n.data.specialties.forEach((function(e){r.push({value:e,text:e})})),this.specialtyTarget.options=r,this.specialtyTarget.value="",this.specialtyTarget.disabled=!1,this.specialtyTarget.hidden=!1,this.specialtyTarget.dataset.acInitSelectionValue){let e=JSON.parse(this.specialtyTarget.dataset.acInitSelectionValue);this.specialtyTarget.value=e.value}}else this.specialtyTarget.options=[{value:"No specialties available",text:"No specialties available"}],this.specialtyTarget.value="No specialties available",this.specialtyTarget.disabled=!0,this.specialtyTarget.hidden=!0}loadScaMemberInfo(e){}optionsForFetch(){return{headers:{"X-Requested-With":"XMLHttpRequest",Accept:"application/json"}}}stateTargetConnected(){console.log("status connected"),this.setFieldRules()}setFieldRules(){console.log("setting field rules");var e=this.stateRulesBlockTarget.textContent,t=JSON.parse(e);0==this.specialtyTarget.options.length&&(this.specialtyTarget.hidden=!0,this.specialtyTarget.disabled=!0),this.planToGiveBlockTarget.style.display="none",this.givenBlockTarget.style.display="none",this.domainTarget.disabled=!1,this.awardTarget.disabled=!1,this.specialtyTarget.disabled=this.specialtyTarget.hidden,this.planToGiveEventTarget.required=!1,this.givenDateTarget.required=!1,this.closeReasonBlockTarget.style.display="none",this.closeReasonTarget.required=!1;var n=this.stateTarget.value;if(t[n]){var r=t[n],i=this;r.Visible&&r.Visible.forEach((function(e){i[e]&&(i[e].style.display="block")})),r.Disabled&&r.Disabled.forEach((function(e){i[e]&&(i[e].disabled=!0)})),r.Required&&r.Required.forEach((function(e){i[e]&&(i[e].required=!0)}))}}connect(){}recIdTargetConnected(){let e=this.recIdTarget.value,t=this.element.getAttribute("action");t=t.replace(/\/\d+$/,""),t=t+"/"+e,this.element.setAttribute("action",t)}}window.Controllers||(window.Controllers={}),window.Controllers["awards-rec-quick-edit"]=i},3251:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["scaMember","form","submitBtn","branch"];checkSubmitEnable(){let e=this.scaMemberTarget.value,t=Number(e.replace(/_/g,"")),n=this.hasBranchTarget;if(t>0){if(n&&""==this.branchTarget.value)return void(this.submitBtnTarget.disabled=!0);this.submitBtnTarget.disabled=!1,this.submitBtnTarget.focus()}else this.submitBtnTarget.disabled=!0}}window.Controllers||(window.Controllers={}),window.Controllers["role-add-member"]=i},3282:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["bulkIds","events","state","planToGiveBlock","planToGiveEvent","givenBlock","recId","turboFrame","givenDate","closeReason","closeReasonBlock","stateRulesBlock"];static values={formUrl:String,turboFrameUrl:String,bulkIds:Array};static outlets=["outlet-btn"];setId(e){let t=e.detail.ids;if(!t)return;if(!t.length)return;this.bulkIdsValue=t,this.bulkIdsTarget.value=t;let n=this.element.getAttribute("action");n=n.replace(/update-states/,"updateStates"),this.element.setAttribute("action",n)}outletBtnOutletConnected(e,t){e.addListener(this.setId.bind(this))}outletBtnOutletDisconnected(e){e.removeListener(this.setId.bind(this))}submit(e){document.getElementById("recommendation_bulk_edit_close").click()}stateTargetConnected(){this.setFieldRules()}setFieldRules(){var e=this.stateRulesBlockTarget.textContent,t=JSON.parse(e);this.planToGiveBlockTarget.style.display="none",this.givenBlockTarget.style.display="none",this.planToGiveEventTarget.required=!1,this.givenDateTarget.required=!1,this.closeReasonBlockTarget.style.display="none",this.closeReasonTarget.required=!1;var n=this.stateTarget.value;if(t[n]){var r=t[n],i=this;r.Visible&&r.Visible.forEach((function(e){i[e]&&(i[e].style.display="block")})),r.Disabled&&r.Disabled.forEach((function(e){i[e]&&(i[e].disabled=!0)})),r.Required&&r.Required.forEach((function(e){i[e]&&(i[e].required=!0)}))}}connect(){}}window.Controllers||(window.Controllers={}),window.Controllers["awards-rec-bulk-edit"]=i},3338:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["success","formBlock","submitBtn","issueLink","form","modal"];static values={url:String};submit(e){e.preventDefault();let t=this.urlValue,n=this.formTarget,r=new FormData(n);fetch(t,{method:"POST",body:r}).then((e=>{if(e.ok)return e.json();throw new Error("An error occurred while creating the issue.")})).then((e=>{e.message?alert("Error: "+e.message):(n.reset(),this.formBlockTarget.style.display="none",this.submitBtnTarget.style.display="none",this.issueLinkTarget.href=e.url,this.successTarget.style.display="block")})).catch((e=>{console.error(e),alert("An error occurred while creating the issue.")}))}modalTargetConnected(){this.modalTarget.addEventListener("hidden.bs.modal",(()=>{this.formBlockTarget.style.display="block",this.successTarget.style.display="none",this.submitBtnTarget.style.display="block"}))}modalTargetDisconnected(){this.modalTarget.removeEventListener("hidden.bs.modal",(()=>{this.formBlockTarget.style.display="block",this.successTarget.style.display="none",this.submitBtnTarget.style.display="block"}))}connect(){this.formBlockTarget.style.display="block",this.successTarget.style.display="none",this.submitBtnTarget.style.display="block"}}window.Controllers||(window.Controllers={}),window.Controllers["github-submitter"]=i},3340:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["policyClass","policyMethod"];static values={url:String};changeQueue=[];policyClassTargetConnected(e){e.clickEvent=e=>{this.classClicked(e)},e.addEventListener("click",e.clickEvent)}policyMethodTargetConnected(e){e.clickEvent=e=>{this.methodClicked(e)},e.addEventListener("click",e.clickEvent)}connect(){this.showLoadingOverlay();const e=Array.from(document.querySelectorAll("input[type='checkbox'][data-class-name][data-permission-id]:not([data-method-name])"));let t=0;const n=()=>{const r=Math.min(t+100,e.length);for(let n=t;n<r;n++){const t=e[n],r=t.dataset.className,i=t.dataset.permissionId;this.checkClass(r,i)}t=r,t<e.length?setTimeout(n,0):this.hideLoadingOverlay()};n()}showLoadingOverlay(){const e=this.element.closest(".permissions-matrix")||this.element;if(!e.querySelector(".loading-overlay")){const t=document.createElement("div");t.className="loading-overlay",t.innerHTML='<div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div>',t.style.position="absolute",t.style.top=0,t.style.left=0,t.style.width="100%",t.style.height="100%",t.style.background="rgba(255,255,255,0.7)",t.style.display="flex",t.style.alignItems="center",t.style.justifyContent="center",t.style.zIndex=1e3,e.style.position="relative",e.appendChild(t)}}hideLoadingOverlay(){const e=(this.element.closest(".permissions-matrix")||this.element).querySelector(".loading-overlay");e&&e.remove()}checkClass(e,t){const n=document.querySelectorAll(`input[type='checkbox'][data-class-name='${e}'][data-permission-id='${t}'][data-method-name]`);let r=0;n.forEach((e=>{e.checked&&r++}));const i=r===n.length,a=r>0&&r<n.length,s=document.querySelectorAll(`input[type='checkbox'][data-class-name='${e}'][data-permission-id='${t}']:not([data-method-name])`)[0];s.checked=i||a,a?s.classList.add("indeterminate-switch"):s.classList.remove("indeterminate-switch")}classClicked(e){const t=e.target,n=t.checked,r=t.dataset.className,i=t.dataset.permissionId;document.querySelectorAll(`input[type='checkbox'][data-class-name='${r}'][data-permission-id='${i}'][data-method-name]`).forEach((e=>{e.checked=n,this.changeMethod(e,n)})),t.classList.remove("indeterminate-switch")}methodClicked(e){const t=e.target,n=t.checked,r=t.dataset.className,i=t.dataset.permissionId;this.checkClass(r,i),this.changeMethod(t,n)}changeMethod(e,t){let n=e.dataset.className;n=n.replace(/-/g,"\\"),console.log(n);const r=e.dataset.methodName,i=e.dataset.permissionId;this.changeQueue.push({permissionId:i,method:r,className:n,action:t?"add":"delete"}),1===this.changeQueue.length&&this.processQueue()}processQueue(){if(0===this.changeQueue.length)return;const e=this.changeQueue[0];fetch(this.urlValue,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json","X-CSRF-Token":document.querySelector("meta[name='csrf-token']").content},body:JSON.stringify(e)}).then((e=>e.json())).then((e=>{this.changeQueue.shift(),this.processQueue()}))}disconnect(){this.policyClassTargets.forEach((e=>{e.removeEventListener("click",e.clickEvent)})),this.policyMethodTargets.forEach((e=>{e.removeEventListener("click",e.clickEvent)}))}}window.Controllers||(window.Controllers={}),window.Controllers["permission-manage-policies"]=i},3470:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["tabBtn","tabContent"];static values={updateUrl:{type:Boolean,default:!0}};foundFirst=!1;tabBtnTargetConnected(e){var t=e.id.replace("nav-","").replace("-tab",""),n=KMP_utils.urlParam("tab");n?t==n&&(e.click(),this.foundFirst=!0,window.scrollTo(0,0)):this.foundFirst||(this.tabBtnTargets[0].click(),window.scrollTo(0,0)),e.addEventListener("click",this.tabBtnClicked.bind(this))}tabBtnClicked(e){var t=this.tabBtnTargets[0].id,n=e.target.id,r=e.target.id.replace("nav-","").replace("-tab","");this.updateUrlValue&&(t!=n?window.history.pushState({},"","?tab="+r):KMP_utils.urlParam("tab")&&window.history.pushState({},"",window.location.pathname));var i=document.getElementById(r+"-frame");i&&i.reload()}tabBtnTargetDisconnected(e){e.removeEventListener("click",this.tabBtnClicked.bind(this))}}window.Controllers||(window.Controllers={}),window.Controllers["detail-tabs"]=i},3473:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static values={url:String};static targets=["approvers","submitBtn","id"];static outlets=["outlet-btn"];setId(e){this.idTarget.value=e.detail.id,this.getApprovers()}outletBtnOutletConnected(e,t){e.addListener(this.setId.bind(this))}outletBtnOutletDisconnected(e){e.removeListener(this.setId.bind(this))}getApprovers(){if(this.hasApproversTarget){this.approversTarget.value="";let e=this.idTarget.value,t=this.urlValue+"/"+e;fetch(t,this.optionsForFetch()).then((e=>e.json())).then((e=>{let t=[];e.forEach((e=>{t.push({value:e.id,text:e.sca_name})})),this.approversTarget.options=t,this.submitBtnTarget.disabled=!0,this.approversTarget.disabled=!1}))}}optionsForFetch(){return{headers:{"X-Requested-With":"XMLHttpRequest",Accept:"application/json"}}}checkReadyToSubmit(){let e=this.approversTarget.value,t=parseInt(e);this.submitBtnTarget.disabled=!(t>0)}submitBtnTargetConnected(){this.submitBtnTarget.disabled=!0}}window.Controllers||(window.Controllers={}),window.Controllers["activities-approve-and-assign-auth"]=i},3863:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static values={url:String};static targets=["submitBtn","reason","id"];static outlets=["outlet-btn"];setId(e){this.idTarget.value=e.detail.id}outletBtnOutletConnected(e,t){e.addListener(this.setId.bind(this))}outletBtnOutletDisconnected(e){e.removeListener(this.setId.bind(this))}checkReadyToSubmit(){this.reasonTarget.value.length>0?this.submitBtnTarget.disabled=!1:this.submitBtnTarget.disabled=!0}connect(){this.submitBtnTarget.disabled=!0}}window.Controllers||(window.Controllers={}),window.Controllers["revoke-form"]=i},3997:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["scaMember","notFound","branch","externalLinks","domain","award","reason","events","specialty","state","planToGiveBlock","planToGiveEvent","givenBlock","recId","turboFrame","givenDate","closeReason","closeReasonBlock","stateRulesBlock"];static values={publicProfileUrl:String,awardListUrl:String,formUrl:String,turboFrameUrl:String};static outlets=["outlet-btn"];setId(e){this.turboFrameTarget.setAttribute("src",this.turboFrameUrlValue+"/"+e.detail.id),this.element.setAttribute("action",this.formUrlValue+"/"+e.detail.id)}outletBtnOutletConnected(e,t){e.addListener(this.setId.bind(this))}outletBtnOutletDisconnected(e){e.removeListener(this.setId.bind(this))}submit(e){this.notFoundTarget.disabled=!1,this.scaMemberTarget.disabled=!1,this.specialtyTarget.disabled=!1}setAward(e){let t=e.target.dataset.awardId;this.awardTarget.value=t,""!=this.awardTarget.value&&this.populateSpecialties(e)}populateAwardDescriptions(e){let t=this.awardListUrlValue+"/"+e.target.value;fetch(t,this.optionsForFetch()).then((e=>e.json())).then((e=>{this.awardTarget.value="";let t=[];if(e.length>0){if(e.forEach((function(e){t.push({value:e.id,text:e.name,data:e})})),this.awardTarget.options=t,this.awardTarget.disabled=!1,this.awardTarget.dataset.acInitSelectionValue){let e=JSON.parse(this.awardTarget.dataset.acInitSelectionValue);this.awardTarget.value=e.value,""!=this.awardTarget.value&&this.populateSpecialties({target:{value:e.value}})}}else this.awardTarget.options=[{value:"No awards available",text:"No awards available"}],this.awardTarget.value="No awards available",this.awardTarget.disabled=!0,this.specialtyTarget.options=[{value:"No specialties available",text:"No specialties available"}],this.specialtyTarget.value="No specialties available",this.specialtyTarget.disabled=!0,this.specialtyTarget.hidden=!0}))}populateSpecialties(e){let t=this.awardTarget.value,n=(this.awardTarget.options,this.awardTarget.options.find((e=>e.value==t))),r=[];if(null!=n.data.specialties&&n.data.specialties.length>0){if(n.data.specialties.forEach((function(e){r.push({value:e,text:e})})),this.specialtyTarget.options=r,this.specialtyTarget.value="",this.specialtyTarget.disabled=!1,this.specialtyTarget.hidden=!1,this.specialtyTarget.dataset.acInitSelectionValue){let e=JSON.parse(this.specialtyTarget.dataset.acInitSelectionValue);this.specialtyTarget.value=e.value}}else this.specialtyTarget.options=[{value:"No specialties available",text:"No specialties available"}],this.specialtyTarget.value="No specialties available",this.specialtyTarget.disabled=!0,this.specialtyTarget.hidden=!0}loadScaMemberInfo(e){this.externalLinksTarget.innerHTML="";let t=Number(e.target.value.replace(/_/g,""));t>0?(this.notFoundTarget.checked=!1,this.branchTarget.hidden=!0,this.branchTarget.disabled=!0,this.loadMember(t)):(this.notFoundTarget.checked=!0,this.branchTarget.hidden=!1,this.branchTarget.disabled=!1,this.branchTarget.focus())}optionsForFetch(){return{headers:{"X-Requested-With":"XMLHttpRequest",Accept:"application/json"}}}loadMember(e){let t=this.publicProfileUrlValue+"/"+e;fetch(t,this.optionsForFetch()).then((e=>e.json())).then((e=>{if(this.externalLinksTarget.innerHTML="",Object.keys(e.external_links).length>0){var t=document.createElement("div");t.innerHTML="<h5>Public Links</h5>",t.classList.add("col-12"),this.externalLinksTarget.appendChild(t);for(let t in e.external_links){let n=document.createElement("div");n.classList.add("col-12");let r=document.createElement("a");r.href=e.external_links[t],r.text=t,r.target="_blank",n.appendChild(r),this.externalLinksTarget.appendChild(n)}}else{var n=document.createElement("div");n.innerHTML="<h5>No links available</h5>",n.classList.add("col-12"),this.externalLinksTarget.appendChild(n)}}))}scaMemberTargetConnected(){""!=this.scaMemberTarget.value&&this.loadScaMemberInfo({target:{value:this.scaMemberTarget.value}})}stateTargetConnected(){console.log("status connected"),this.setFieldRules()}setFieldRules(){console.log("setting field rules");var e=this.stateRulesBlockTarget.textContent,t=JSON.parse(e);0==this.specialtyTarget.options.length&&(this.specialtyTarget.hidden=!0,this.specialtyTarget.disabled=!0),this.planToGiveBlockTarget.style.display="none",this.givenBlockTarget.style.display="none",this.domainTarget.disabled=!1,this.awardTarget.disabled=!1,this.specialtyTarget.disabled=this.specialtyTarget.hidden,this.scaMemberTarget.disabled=!1,this.planToGiveEventTarget.required=!1,this.givenDateTarget.required=!1,this.closeReasonBlockTarget.style.display="none",this.closeReasonTarget.required=!1,this.notFoundTarget.checked?(this.branchTarget.disabled=!1,this.branchTarget.hidden=!1):(this.branchTarget.disabled=!0,this.branchTarget.hidden=!0);var n=this.stateTarget.value;if(t[n]){var r=t[n],i=this;r.Visible&&r.Visible.forEach((function(e){i[e]&&(i[e].style.display="block")})),r.Disabled&&r.Disabled.forEach((function(e){i[e]&&(i[e].disabled=!0)})),r.Required&&r.Required.forEach((function(e){i[e]&&(i[e].required=!0)}))}}connect(){}recIdTargetConnected(){let e=this.recIdTarget.value,t=this.element.getAttribute("action");t=t.replace(/\/\d+$/,""),t=t+"/"+e,this.element.setAttribute("action",t)}}window.Controllers||(window.Controllers={}),window.Controllers["awards-rec-edit"]=i},4617:function(e,t,n){"use strict";var r=n(2891);const i="[role='option']:not([aria-disabled='true'])";class a extends r.Controller{static targets=["input","hidden","hiddenText","results","dataList","clearBtn"];static classes=["selected"];static values={ready:Boolean,submitOnEnter:Boolean,url:String,minLength:Number,allowOther:Boolean,required:Boolean,initSelection:Object,delay:{type:Number,default:300},queryParam:{type:String,default:"q"}};static uniqOptionId=0;initialize(){this._selectOptions=[],this._datalistLoaded=!1}get value(){return""!=this.hasHiddenTarget.value?this.hiddenTarget.value:this.allowOtherValue?this.inputTarget.value:""}set value(e){if("object"==typeof e&&e.hasOwnProperty("value")&&e.hasOwnProperty("text"))return this.inputTarget.value=e.text,this.hiddenTarget.value=e.value,this.hiddenTextTarget.value=e.text,this.clearBtnTarget.disabled=!1,void(this.inputTarget.disabled=!0);if(""==e||null==e)this.inputTarget.value="",this.hiddenTarget.value="",this.hiddenTextTarget.value="",this.clearBtnTarget.disabled=!0,this.inputTarget.disabled=!1;else{let n=this._selectOptions.find((t=>t.value==e&&0!=t.enabled));if(n)return this.inputTarget.value=n.text,this.hiddenTextTarget.value=n.text,this.hiddenTarget.value=n.value,this.clearBtnTarget.disabled=!1,void(this.inputTarget.disabled=!0);if(this.allowOtherValue){if(this.hasDataListTarget){var t=this.options;t.push({value:e,text:e}),this.options=t}this.inputTarget.value=e,this.hiddenTextTarget.value=e,this.hiddenTarget.value=e}else this.inputTarget.value="",this.hiddenTextTarget.value="",this.hiddenTarget.value="",e="";""!=e?(this.clearBtnTarget.disabled=!1,this.inputTarget.disabled=!0):(this.clearBtnTarget.disabled=!0,this.inputTarget.disabled=!1)}}get value(){return this.hiddenTarget.value}get disabled(){return this.inputTarget.disabled}set disabled(e){this.hiddenTarget.disabled=e,this.hiddenTextTarget.disabled=e,""!=this.inputTarget.value?(this.inputTarget.disabled=!0,this.clearBtnTarget.disabled=e):(this.clearBtnTarget.disabled=!0,this.inputTarget.disabled=e)}get hidden(){return this.element.hidden}set hidden(e){this.element.hidden=e}get options(){return this._selectOptions}set options(e){this._selectOptions=e,this.makeDataListItems()}connect(){this.close(),this.inputTarget.hasAttribute("autocomplete")||this.inputTarget.setAttribute("autocomplete","off"),this.inputTarget.setAttribute("spellcheck","false"),this.mouseDown=!1,this.onInputChange=s(this.onInputChange,this.delayValue),this.inputTarget.addEventListener("keydown",this.onKeydown),this.inputTarget.addEventListener("blur",this.onInputBlur),this.inputTarget.addEventListener("input",this.onInputChange),this.inputTarget.addEventListener("click",this.onInputClick),this.inputTarget.addEventListener("change",this.onInputChangeTriggered),this.resultsTarget.addEventListener("mousedown",this.onResultsMouseDown),this.resultsTarget.addEventListener("click",this.onResultsClick),this.inputTarget.hasAttribute("autofocus")&&this.inputTarget.focus(),this.shimElement(),this.readyValue=!0,this.element.dispatchEvent(new CustomEvent("ready",{detail:this.element.dataset}))}disconnect(){this.hasInputTarget&&(this.inputTarget.removeEventListener("keydown",this.onKeydown),this.inputTarget.removeEventListener("blur",this.onInputBlur),this.inputTarget.removeEventListener("input",this.onInputChange),this.inputTarget.removeEventListener("click",this.onInputClick),this.inputTarget.removeEventListener("change",this.onInputChangeTriggered)),this.hasResultsTarget&&(this.resultsTarget.removeEventListener("mousedown",this.onResultsMouseDown),this.resultsTarget.removeEventListener("click",this.onResultsClick))}initSelectionValueChanged(){if(this._datalistLoaded){if(null==this.initSelectionValue||!this.initSelectionValue.hasOwnProperty("value"))return;let e=this.initSelectionValue;if(!(e.value||e.text&&""!=e.text))return;this.allowOtherValue&&null==e.value&&(e.value=e.text);let t=this._selectOptions.find((t=>t.value==e.value));t?this.value=t.value:(this.addOption(e),this.value=e.value)}else this.initSelectionValue.hasOwnProperty("value")&&(this.hiddenTarget.value=this.initSelectionValue.value,this.hiddenTextTarget.value=this.initSelectionValue.text,this.inputTarget.value=this.initSelectionValue.text)}addOption(e){e.hasOwnProperty("value")&&e.hasOwnProperty("text")&&(this._selectOptions.push(e),this.makeDataListItems())}makeDataListItems(){if(this.hasDataListTarget){this.dataListTarget.textContent="";var e=JSON.stringify(this._selectOptions);this.dataListTarget.textContent=e}}dataListTargetConnected(){this._selectOptions=JSON.parse(this.dataListTarget.textContent),this._datalistLoaded=!0,this.hasInitSelectionValue&&this.initSelectionValueChanged()}shimElement(){Object.defineProperty(this.element,"value",{get:()=>this.value,set:e=>{this.value=e}}),this.element.focus=()=>{this.inputTarget.focus()};let e=this.element;for(;e&&!Object.getOwnPropertyDescriptor(e,"hidden");)e=Object.getPrototypeOf(e);e&&(this.baseHidden=Object.getOwnPropertyDescriptor(e,"hidden"),Object.defineProperty(this.element,"hidden",{get:()=>this.baseHidden.get.call(this.element),set:e=>{this.baseHidden.set.call(this.element,e),e?(this.hiddenTarget.disabled=!0,this.hiddenTextTarget.disabled=!0,this.inputTarget.disabled=!0,this.close()):(this.hiddenTarget.disabled=!1,this.hiddenTextTarget.disabled=!1,this.inputTarget.disabled=!1)}})),Object.defineProperty(this.element,"disabled",{get:()=>this.disabled,set:e=>{this.disabled=e}}),Object.defineProperty(this.element,"options",{get:()=>this.options,set:e=>{this.options=e}})}sibling(e){const t=this.options,n=this.selectedOption,r=t.indexOf(n),i=e?t[r+1]:t[r-1],a=e?t[0]:t[t.length-1];return i||a}select(e){const t=this.selectedOption;t&&(t.removeAttribute("aria-selected"),t.classList.remove(...this.selectedClassesOrDefault)),e.setAttribute("aria-selected","true"),e.classList.add(...this.selectedClassesOrDefault),this.inputTarget.setAttribute("aria-activedescendant",e.id),e.scrollIntoView({behavior:"auto",block:"nearest"})}onInputChangeTriggered=e=>{e.stopPropagation(),this.hiddenTextTarget.value=this.inputTarget.value};onInputClick=e=>{if(this.state="start",this.hasDataListTarget){const e=this.inputTarget.value.trim();this.fetchResults(e)}this.hiddenTextTarget.value=this.inputTarget.value};onKeydown=e=>{this.hiddenTextTarget.value=this.inputTarget.value;const t=this[`on${e.key}Keydown`];this.hiddenTextTarget.value=this.inputTarget.value,t&&t(e)};onEscapeKeydown=e=>{this.hiddenTextTarget.value=this.inputTarget.value,this.resultsShown&&(this.hideAndRemoveOptions(),e.stopPropagation(),e.preventDefault())};onArrowDownKeydown=e=>{this.hiddenTextTarget.value=this.inputTarget.value;const t=this.sibling(!0);t&&this.select(t),e.preventDefault()};onArrowUpKeydown=e=>{this.hiddenTextTarget.value=this.inputTarget.value;const t=this.sibling(!1);t&&this.select(t),e.preventDefault()};onTabKeydown=e=>{if(this.hiddenTextTarget.value=this.inputTarget.value,this.allowOtherValue)this.fireChangeEvent(this.inputTarget.value,this.inputTarget.value,null);else if(""!=this.inputTarget.value){let e=this.inputTarget.value,t=this._selectOptions.find((t=>t.text==e&&0!=t.enabled));this.value=t?t.value:""}else this.clear()};onEnterKeydown=e=>{this.hiddenTextTarget.value=this.inputTarget.value;const t=this.selectedOption;t&&this.resultsShown&&(this.commit(t),this.hasSubmitOnEnterValue||e.preventDefault())};onInputBlur=()=>{if(this.hiddenTextTarget.value=this.inputTarget.value,!this.mouseDown){if("open"==this.state)if(this.allowOtherValue)this.fireChangeEvent(this.inputTarget.value,this.inputTarget.value,null);else if(""!=this.inputTarget.value){let e=this.inputTarget.value,t=this._selectOptions.find((t=>t.text==e&&0!=t.enabled));this.value=t?t.value:""}else this.clear();this.close(),console.log("leaving")}};commit(e){if(this.hiddenTextTarget.value=this.inputTarget.value,"true"===e.getAttribute("aria-disabled"))return;if(e instanceof HTMLAnchorElement)return e.click(),void this.close();const t=e.getAttribute("data-ac-label")||e.textContent.trim(),n=e.getAttribute("data-ac-value")||t;this.inputTarget.value=t,this.hasHiddenTarget?(this.hiddenTarget.value=n,this.hiddenTarget.dispatchEvent(new Event("input")),this.hiddenTarget.dispatchEvent(new Event("change"))):this.inputTarget.value=n,this.hasHiddenTextTarget&&(this.hiddenTextTarget.value=t),this.inputTarget.focus(),this.state="finished",this.fireChangeEvent(n,t,e),this.hideAndRemoveOptions()}fireChangeEvent(e,t,n){this.hiddenTextTarget.value=this.inputTarget.value,this.element.dispatchEvent(new CustomEvent("autocomplete.change",{bubbles:!0,detail:{value:e,textValue:t,selected:n}})),""==this.inputTarget.value?(this.clearBtnTarget.disabled=!0,this.inputTarget.disabled=!1):(this.clearBtnTarget.disabled=!1,this.inputTarget.disabled=!0),this.element.dispatchEvent(new CustomEvent("change"),{bubbles:!0}),this.state="finished"}clear(){this.inputTarget.value="",this.hasHiddenTarget&&(this.hiddenTarget.value=""),this.hasHiddenTextTarget&&(this.hiddenTextTarget.value=""),this.clearBtnTarget.disabled=!0,this.inputTarget.disabled=!1,this.close()}onResultsClick=e=>{if(this.hiddenTextTarget.value=this.inputTarget.value,!(e.target instanceof Element))return;const t=e.target.closest(i);t&&this.commit(t)};onResultsMouseDown=()=>{this.hiddenTextTarget.value=this.inputTarget.value,this.mouseDown=!0,this.resultsTarget.addEventListener("mouseup",(()=>{this.mouseDown=!1}),{once:!0})};onInputChange=()=>{this.hiddenTextTarget.value=this.inputTarget.value,this.hasHiddenTarget&&(this.hiddenTarget.value=""),this.hasHiddenTextTarget&&(this.hiddenTextTarget.value="");const e=this.inputTarget.value.trim();e&&e.length>=this.minLengthValue||this.hasDataListTarget?this.fetchResults(e):this.hideAndRemoveOptions()};identifyOptions(){const e=this.resultsTarget.id||"stimulus-autocomplete";this.resultsTarget.querySelectorAll(`${i}:not([id])`).forEach((t=>t.id=`${e}-option-${a.uniqOptionId++}`))}hideAndRemoveOptions(){this.close(),this.resultsTarget.innerHTML=null}fetchResults=async e=>{if(!this.hasUrlValue){if(this.hasDataListTarget){this.resultsTarget.innerHTML=null;let t=this._selectOptions;for(let n of t)if(n.text.toLowerCase().includes(e.toLowerCase())&&(0!=n.enabled||""==e)){let t=document.createElement("li");if(t.setAttribute("data-ac-value",n.value),t.classList.add("list-group-item"),0==n.enabled?(t.setAttribute("aria-disabled","true"),t.classList.add("disabled")):t.setAttribute("aria-disabled","false"),t.setAttribute("role","option"),t.setAttribute("aria-selected","false"),""!=e){let r=n.text;t.innerHTML=r.replace(new RegExp(e,"gi"),(e=>`<span class="text-primary">${e}</span>`))}else t.innerHTML=n.text;this.resultsTarget.appendChild(t)}return void("finished"!=this.state&&(this.identifyOptions(),this.open(),this.state="open"))}throw new Error("You must provide a URL or a DataList target")}const t=this.buildURL(e);try{this.element.dispatchEvent(new CustomEvent("loadstart"));const e=await this.doFetch(t);"finished"!=this.state&&(this.replaceResults(e),this.state="open"),this.element.dispatchEvent(new CustomEvent("load")),this.element.dispatchEvent(new CustomEvent("loadend"))}catch(e){throw this.element.dispatchEvent(new CustomEvent("error")),this.element.dispatchEvent(new CustomEvent("loadend")),e}};buildURL(e){const t=new URL(this.urlValue,window.location.href),n=new URLSearchParams(t.search.slice(1));return n.append(this.queryParamValue,e),t.search=n.toString(),t.toString()}doFetch=async e=>{const t=await fetch(e,this.optionsForFetch());if(!t.ok)throw new Error(`Server responded with status ${t.status}`);return await t.text()};replaceResults(e){this.hiddenTextTarget.value=this.inputTarget.value,this.resultsTarget.innerHTML=e,this.identifyOptions(),this.options?(this.state="results",this.open()):(this.state="empty list",this.close())}open(){this.resultsShown||(this.resultsShown=!0,this.element.setAttribute("aria-expanded","true"),this.hiddenTextTarget.value=this.inputTarget.value,this.element.dispatchEvent(new CustomEvent("toggle",{detail:{action:"open",inputTarget:this.inputTarget,resultsTarget:this.resultsTarget}})))}close(){this.resultsShown&&(this.state="finished",this.resultsShown=!1,this.inputTarget.removeAttribute("aria-activedescendant"),this.element.setAttribute("aria-expanded","false"),this.hiddenTextTarget.value=this.inputTarget.value,this.element.dispatchEvent(new CustomEvent("toggle",{detail:{action:"close",inputTarget:this.inputTarget,resultsTarget:this.resultsTarget}})))}get resultsShown(){return!this.resultsTarget.hidden}set resultsShown(e){this.resultsTarget.hidden=!e}get selectedClassesOrDefault(){return this.hasSelectedClass?this.selectedClasses:["active"]}optionsForFetch(){return{headers:{"X-Requested-With":"XMLHttpRequest",Accept:"application/json"}}}}const s=(e,t=10)=>{let n=null;return(...r)=>{clearTimeout(n),n=setTimeout(e,t)}};window.Controllers||(window.Controllers={}),window.Controllers.ac=a},4634:function(e){var t={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==t.call(e)}},4705:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{submitForm(e){console.log("submitting form"),this.element.requestSubmit()}}window.Controllers||(window.Controllers={}),window.Controllers["filter-grid"]=i},4883:function(){},5037:function(e,t,n){const{Controller:r}=n(2891);window.Controllers||(window.Controllers={}),window.Controllers["nav-bar"]=class extends r{static targets=["navHeader"];navHeaderClicked(e){if("true"===e.target.getAttribute("aria-expanded")){var t=e.target.getAttribute("data-expand-url");fetch(t,this.optionsForFetch())}else{var n=e.target.getAttribute("data-collapse-url");fetch(n,this.optionsForFetch())}}navHeaderTargetConnected(e){e.addEventListener("click",this.navHeaderClicked.bind(this))}navHeaderTargetDisconnected(e){e.removeEventListener("click",this.navHeaderClicked.bind(this))}optionsForFetch(){return{headers:{"X-Requested-With":"XMLHttpRequest",Accept:"application/json"}}}}},5078:function(e,t,n){const{Controller:r}=n(2891);window.Controllers||(window.Controllers={}),window.Controllers["session-extender"]=class extends r{static values={url:String};urlValueChanged(){this.timer&&clearTimeout(this.timer);var e=this;this.timer=setTimeout((function(){alert("Session Expiring! Click ok to extend session."),fetch(e.urlValue).then((e=>e.json())).then((t=>{e.urlValueChanged()}))}),15e5)}}},5116:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["form"];submit(){this.formTarget.submit()}}window.Controllers||(window.Controllers={}),window.Controllers.gw_sharing=i},5231:function(){},5581:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["scaMember","membershipNumber","membershipExpDate"];toggleParent(e){var t=e.target.checked;this.scaMemberTarget.disabled=!t}toggleMembership(e){var t=e.target.checked;this.membershipNumberTarget.disabled=!t,this.membershipExpDateTarget.disabled=!t}}window.Controllers||(window.Controllers={}),window.Controllers["member-verify-form"]=i},5676:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["permission","form","submitBtn"];checkSubmitEnable(){let e=this.permissionTarget.value;Number(e.replace(/_/g,""))>0?(this.submitBtnTarget.disabled=!1,this.submitBtnTarget.focus()):this.submitBtnTarget.disabled=!0}}window.Controllers||(window.Controllers={}),window.Controllers["role-add-permission"]=i},6319:function(e,t,n){const{Controller:r}=n(2891);window.Controllers||(window.Controllers={}),window.Controllers["app-setting-form"]=class extends r{static targets=["submitBtn","form"];submit(e){e.preventDefault(),this.formTarget.submit()}enableSubmit(){this.submitBtnTarget.disabled=!1,this.submitBtnTarget.focus()}}},7050:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["reportsTo","reportsToBlock","deputyTo","deputyToBlock","isDeputy"];toggleIsDeputy(){this.isDeputyTarget.checked?(this.deputyToBlockTarget.hidden=!1,this.deputyToTarget.disabled=!1,this.reportsToBlockTarget.hidden=!0,this.reportsToTarget.disabled=!0):(this.deputyToBlockTarget.hidden=!0,this.deputyToTarget.disabled=!0,this.deputyToTarget.value="",this.reportsToBlockTarget.hidden=!1,this.reportsToTarget.disabled=!1)}connect(){console.log("connected"),this.toggleIsDeputy()}}window.Controllers||(window.Controllers={}),window.Controllers["office-form"]=i},7369:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static values={url:String};static targets=["assignee","submitBtn","deputyDescBlock","deputyDesc","office","endDateBlock","endDate","emailAddress","emailAddressBlock"];static outlets=["outlet-btn","member-serach"];setOfficeQuestions(){this.deputyDescBlockTarget.classList.add("d-none"),this.endDateBlockTarget.classList.add("d-none"),this.emailAddressBlockTarget.classList.add("d-none"),this.endDateTarget.disabled=!0,this.deputyDescTarget.disabled=!0,this.emailAddressTarget.disabled=!0;var e=this.officeTarget.value,t=this.assigneeTarget.getAttribute("data-ac-url-value").split("/"),n=t[t.length-1];parseInt(n)&&t.pop(),t.push(e);var r=t.join("/");this.assigneeTarget.setAttribute("data-ac-url-value",r);var i=this.officeTarget.options.find((t=>t.value==e));if(i)return i.data.is_deputy&&(this.deputyDescBlockTarget.classList.remove("d-none"),this.endDateBlockTarget.classList.remove("d-none"),this.endDateTarget.disabled=!1,this.deputyDescTarget.disabled=!1),i.data.email_address&&(this.emailAddressBlockTarget.classList.remove("d-none"),this.emailAddressTarget.disabled=!1,this.emailAddressTarget.value=i.data.email_address),void this.checkReadyToSubmit()}checkReadyToSubmit(){var e=this.assigneeTarget.value,t=this.officeTarget.value,n=parseInt(e),r=parseInt(t);this.submitBtnTarget.disabled=!(n>0&&r>0)}submitBtnTargetConnected(){this.submitBtnTarget.disabled=!0}endDateTargetConnected(){this.endDateTarget.disabled=!0}deputyDescTargetConnected(){this.deputyDescTarget.disabled=!0}connect(){this.deputyDescBlockTarget.classList.add("d-none"),this.endDateBlockTarget.classList.add("d-none"),this.emailAddressBlockTarget.classList.add("d-none")}}window.Controllers||(window.Controllers={}),window.Controllers["officers-assign-officer"]=i},7526:function(e,t){"use strict";t.byteLength=function(e){var t=o(e),n=t[0],r=t[1];return 3*(n+r)/4-r},t.toByteArray=function(e){var t,n,a=o(e),s=a[0],l=a[1],u=new i(function(e,t,n){return 3*(t+n)/4-n}(0,s,l)),c=0,d=l>0?s-4:s;for(n=0;n<d;n+=4)t=r[e.charCodeAt(n)]<<18|r[e.charCodeAt(n+1)]<<12|r[e.charCodeAt(n+2)]<<6|r[e.charCodeAt(n+3)],u[c++]=t>>16&255,u[c++]=t>>8&255,u[c++]=255&t;2===l&&(t=r[e.charCodeAt(n)]<<2|r[e.charCodeAt(n+1)]>>4,u[c++]=255&t);1===l&&(t=r[e.charCodeAt(n)]<<10|r[e.charCodeAt(n+1)]<<4|r[e.charCodeAt(n+2)]>>2,u[c++]=t>>8&255,u[c++]=255&t);return u},t.fromByteArray=function(e){for(var t,r=e.length,i=r%3,a=[],s=16383,o=0,u=r-i;o<u;o+=s)a.push(l(e,o,o+s>u?u:o+s));1===i?(t=e[r-1],a.push(n[t>>2]+n[t<<4&63]+"==")):2===i&&(t=(e[r-2]<<8)+e[r-1],a.push(n[t>>10]+n[t>>4&63]+n[t<<2&63]+"="));return a.join("")};for(var n=[],r=[],i="undefined"!=typeof Uint8Array?Uint8Array:Array,a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0;s<64;++s)n[s]=a[s],r[a.charCodeAt(s)]=s;function o(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function l(e,t,r){for(var i,a,s=[],o=t;o<r;o+=3)i=(e[o]<<16&16711680)+(e[o+1]<<8&65280)+(255&e[o+2]),s.push(n[(a=i)>>18&63]+n[a>>12&63]+n[a>>6&63]+n[63&a]);return s.join("")}r["-".charCodeAt(0)]=62,r["_".charCodeAt(0)]=63},7570:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["file","preview","loading"];preview(e){if(e.target.files.length>0){let t=URL.createObjectURL(e.target.files[0]);this.previewTarget.src=t,this.loadingTarget.classList.add("d-none"),this.previewTarget.hidden=!1}}}window.Controllers||(window.Controllers={}),window.Controllers["image-preview"]=i},7599:function(){},7942:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["new","formValue","displayList","linkType"];initialize(){this.items=[]}setLinkType(e){e.preventDefault();let t=e.target.getAttribute("data-value"),n=this.linkTypeTarget.dataset.value;this.linkTypeTarget.classList.remove("bi-"+n),this.linkTypeTarget.classList.add("bi-"+t),this.linkTypeTarget.dataset.value=t}add(e){if(e.preventDefault(),!this.newTarget.checkValidity())return void this.newTarget.reportValidity();if(!this.newTarget.value)return;let t=KMP_utils.sanitizeUrl(this.newTarget.value),n=this.linkTypeTarget.dataset.value;if(this.items.find((e=>e.url===t&&e.type===n)))return;let r={url:KMP_utils.sanitizeUrl(this.newTarget.value),type:this.linkTypeTarget.dataset.value};this.items.push(r),this.createListItem(r),this.formValueTarget.value=JSON.stringify(this.items),this.newTarget.value="",this.linkTypeTarget.dataset.value="link",this.linkTypeTarget.classList.remove("bi-"+n),this.linkTypeTarget.classList.add("bi-link")}remove(e){e.preventDefault();let t=e.target.getAttribute("data-id"),n=JSON.parse(t);this.items=this.items.filter((e=>e.url!==n.url||e.type!==n.type)),this.formValueTarget.value=JSON.stringify(this.items),e.target.parentElement.remove()}connect(){this.formValueTarget.value&&this.formValueTarget.value.length>0&&(this.items=JSON.parse(this.formValueTarget.value),this.items.forEach((e=>{this.createListItem(e)})))}createListItem(e){let t=document.createElement("button");t.innerHTML="Remove",t.setAttribute("data-action","branch-links#remove"),t.setAttribute("data-id",JSON.stringify(e)),t.setAttribute("class","btn btn-danger btn-sm"),t.setAttribute("type","button");let n=document.createElement("div");n.setAttribute("class","input-group mb-1");let r=document.createElement("span");r.setAttribute("class","input-group-text bi bi-"+e.type),n.appendChild(r);let i=document.createElement("span");i.innerHTML=e.url,i.setAttribute("class","form-control"),n.appendChild(i),n.appendChild(t),this.displayListTarget.appendChild(n)}}window.Controllers||(window.Controllers={}),window.Controllers["branch-links"]=i},7986:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["scaMember","notFound","branch","externalLinks","awardDescriptions","award","reason","events","specialty"];static values={publicProfileUrl:String,awardListUrl:String};submit(e){this.notFoundTarget.disabled=!1,this.scaMemberTarget.disabled=!1,this.specialtyTarget.disabled=!1}setAward(e){let t=e.target.dataset.awardId;this.awardTarget.value=t,this.populateSpecialties(e)}optionsForFetch(){return{headers:{"X-Requested-With":"XMLHttpRequest",Accept:"application/json"}}}populateAwardDescriptions(e){let t=this.awardListUrlValue+"/"+e.target.value;fetch(t,this.optionsForFetch()).then((e=>e.json())).then((e=>{this.awardDescriptionsTarget.innerHTML="";let t=document.createElement("ul");t.classList.add("nav","nav-pills"),t.setAttribute("role","tablist");let n=document.createElement("div");n.classList.add("tab-content"),n.classList.add("border"),n.classList.add("border-light-subtle"),n.classList.add("p-2"),n.innerHTML="",this.awardTarget.value="";let r="active",i="show",a="true",s=[];e.length>0?(e.forEach((function(e){s.push({value:e.id,text:e.name,data:e});var o=document.createElement("li");o.classList.add("nav-item"),o.setAttribute("role","presentation");var l=document.createElement("button");l.classList.add("nav-link"),"active"==r&&l.classList.add("active"),l.setAttribute("data-action","click->awards-rec-add#setAward"),l.setAttribute("id","award_"+e.id+"_btn"),l.setAttribute("data-bs-toggle","tab"),l.setAttribute("data-bs-target","#award_"+e.id),l.setAttribute("data-award-id",e.id),l.setAttribute("type","button"),l.setAttribute("role","tab"),l.setAttribute("aria-controls","award_"+e.id),l.setAttribute("aria-selected",a),l.innerHTML=e.name,o.appendChild(l);var u=document.createElement("div");u.classList.add("tab-pane"),u.classList.add("fade"),"show"==i&&u.classList.add("show"),"active"==r&&u.classList.add("active"),u.setAttribute("id","award_"+e.id),u.setAttribute("role","tabpanel"),u.setAttribute("aria-labelledby","award_"+e.id+"_btn"),u.innerHTML=e.name+": "+e.description,r="",i="",a="false",t.append(o),n.append(u)})),this.awardDescriptionsTarget.appendChild(t),this.awardDescriptionsTarget.appendChild(n),this.awardTarget.options=s,this.awardTarget.disabled=!1):(this.awardTarget.options=[{value:"No awards available",text:"No awards available"}],this.awardTarget.value="No awards available",this.awardTarget.disabled=!0)}))}populateSpecialties(e){let t=this.awardTarget.value,n=(this.awardTarget.options,this.awardTarget.options.find((e=>e.value==t))),r=[];null!=n.data.specialties&&n.data.specialties.length>0?(n.data.specialties.forEach((function(e){r.push({value:e,text:e})})),this.specialtyTarget.options=r,this.specialtyTarget.value="",this.specialtyTarget.disabled=!1,this.specialtyTarget.hidden=!1):(this.specialtyTarget.options=[{value:"No specialties available",text:"No specialties available"}],this.specialtyTarget.value="No specialties available",this.specialtyTarget.disabled=!0,this.specialtyTarget.hidden=!0)}loadScaMemberInfo(e){this.externalLinksTarget.innerHTML="";let t=Number(e.target.value.replace(/_/g,""));t>0?(this.notFoundTarget.checked=!1,this.branchTarget.hidden=!0,this.branchTarget.disabled=!0,this.loadMember(t)):(this.notFoundTarget.checked=!0,this.branchTarget.hidden=!1,this.branchTarget.disabled=!1,this.branchTarget.focus())}loadMember(e){let t=this.publicProfileUrlValue+"/"+e;fetch(t,this.optionsForFetch()).then((e=>e.json())).then((e=>{if(this.externalLinksTarget.innerHTML="",Object.keys(e.external_links).length>0){var t=document.createElement("div");t.innerHTML="<h5>Public Links</h5>",t.classList.add("col-12"),this.externalLinksTarget.appendChild(t);for(let t in e.external_links){let n=document.createElement("div");n.classList.add("col-12");let r=document.createElement("a");r.href=e.external_links[t],r.text=t,r.target="_blank",n.appendChild(r),this.externalLinksTarget.appendChild(n)}}else{var n=document.createElement("div");n.innerHTML="<h5>No links available</h5>",n.classList.add("col-12"),this.externalLinksTarget.appendChild(n)}}))}acConnected(e){switch(e.detail.awardsRecAddTarget){case"branch":this.branchTarget.disabled=!0,this.branchTarget.hidden=!0,this.branchTarget.value="";break;case"award":this.awardTarget.disabled=!0,this.awardTarget.value="Select Award Type First";break;case"scaMember":this.scaMemberTarget.value="";break;case"specialty":this.specialtyTarget.value="Select Award First",this.specialtyTarget.disabled=!0,this.specialtyTarget.hidden=!0;break;default:e.target.value=""}}connect(){this.notFoundTarget.checked=!1,this.notFoundTarget.disabled=!0,this.reasonTarget.value="",this.personToNotifyTarget.value="",this.eventsTargets.forEach((e=>{e.checked=!1}))}}window.Controllers||(window.Controllers={}),window.Controllers["awards-rec-add"]=i},8058:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static targets=["cardSet","name","scaName","branchName","membershipInfo","backgroundCheck","lastUpdate","loading","memberDetails"];static values={url:String,pwaReady:Boolean};initialize(){this.currentCard=null,this.cardCount=0}startCard(e){this.cardCount++;var t=document.createElement("div");t.classList.add("card","cardbox","m-3"),t.id="card_"+this.cardCount;var n=document.createElement("div");n.classList.add("card-body"),n.id="cardDetails_"+this.cardCount;var r=document.createElement("h3");r.classList.add("card-title","text-center","display-6"),r.textContent=e,n.appendChild(r),t.appendChild(n),this.cardSetTarget.appendChild(t),this.currentCard=n}pwaReadyValueChanged(){console.log("pwaReadyValueChanged"),this.pwaReadyValue&&this.loadCard()}optionsForFetch(){return{headers:{"X-Requested-With":"XMLHttpRequest",Accept:"application/json"}}}loadCard(){this.cardSetTarget.innerHTML="",this.loadingTarget.hidden=!1,this.memberDetailsTarget.hidden=!0,this.pwaReadyValue?(console.log("PWA ready"),fetch(this.urlValue,this.optionsForFetch()).then((e=>e.json())).then((e=>{if(this.loadingTarget.hidden=!0,this.memberDetailsTarget.hidden=!1,this.nameTarget.textContent=e.member.first_name+" "+e.member.last_name,this.scaNameTarget.textContent=e.member.sca_name,this.branchNameTarget.textContent=e.member.branch.name,e.member.membership_number&&e.member.membership_number.length>0){var t=new Date(e.member.membership_expires_on);t=t<new Date?"Expired":" - "+t.toLocaleDateString(),this.membershipInfoTarget.textContent=e.member.membership_number+" "+t}else this.membershipInfoTarget.textContent="No Membership Info";if(e.member.background_check_expires_on){var n=new Date(e.member.background_check_expires_on);n=n<new Date?"Expired":"Current"+n.toLocaleDateString(),this.backgroundCheckTarget.textContent=n}else this.backgroundCheckTarget.textContent="Not on file";this.lastUpdateTarget.textContent=(new Date).toLocaleString();for(let t in e)if("member"!==t){var r=e[t];for(let e in r){var i=r[e];if(Object.keys(i).length>0){this.startCard(e);var a=document.createElement("table");a.classList.add("table","card-body-table");var s=document.createElement("tbody");a.appendChild(s);for(let e in i){var o=i[e];if(0!==o.length){var l=document.createElement("tr"),u=document.createElement("th");u.classList.add("col-12","text-center"),u.colSpan="2",u.textContent=e,l.appendChild(u),s.appendChild(l);var c=0,d=(l=document.createElement("tr"),"text-center");for(let e=0;e<o.length;e++){var h=o[e];if(2==c?(s.appendChild(l),l=document.createElement("tr"),d="text-center",c=0):d="text-center",h.indexOf(":")>2){var p=h.split(":"),f=document.createElement("tr"),g=document.createElement("td");g.classList.add("col-6","text-end"),g.textContent=p[0];var m=document.createElement("td");m.classList.add("col-6","text-start"),m.textContent=p[1],f.appendChild(g),f.appendChild(m),s.appendChild(f)}else{var v=1;if(e+1==o.length&&0==c)v=2;var y=document.createElement("td");y.classList.add("col-6",d),y.colSpan=v,y.textContent=h,l.appendChild(y),c++}}s.appendChild(l)}}this.currentCard.appendChild(a)}}}}))):console.log("PWA not ready")}connect(){console.log("MemberMobileCardProfile connected")}}window.Controllers||(window.Controllers={}),window.Controllers["member-mobile-card-profile"]=i},8287:function(e,t,n){"use strict";var r=n(7526),i=n(251),a=n(4634);function s(){return l.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function o(e,t){if(s()<t)throw new RangeError("Invalid typed array length");return l.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=l.prototype:(null===e&&(e=new l(t)),e.length=t),e}function l(e,t,n){if(!(l.TYPED_ARRAY_SUPPORT||this instanceof l))return new l(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return d(this,e)}return u(this,e,t,n)}function u(e,t,n,r){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r);l.TYPED_ARRAY_SUPPORT?(e=t).__proto__=l.prototype:e=h(e,t);return e}(e,t,n,r):"string"==typeof t?function(e,t,n){"string"==typeof n&&""!==n||(n="utf8");if(!l.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|f(t,n);e=o(e,r);var i=e.write(t,n);i!==r&&(e=e.slice(0,i));return e}(e,t,n):function(e,t){if(l.isBuffer(t)){var n=0|p(t.length);return 0===(e=o(e,n)).length||t.copy(e,0,0,n),e}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||function(e){return e!=e}(t.length)?o(e,0):h(e,t);if("Buffer"===t.type&&a(t.data))return h(e,t.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function c(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function d(e,t){if(c(t),e=o(e,t<0?0:0|p(t)),!l.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function h(e,t){var n=t.length<0?0:0|p(t.length);e=o(e,n);for(var r=0;r<n;r+=1)e[r]=255&t[r];return e}function p(e){if(e>=s())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+s().toString(16)+" bytes");return 0|e}function f(e,t){if(l.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return Z(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return M(e).length;default:if(r)return Z(e).length;t=(""+t).toLowerCase(),r=!0}}function g(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return B(this,t,n);case"utf8":case"utf-8":return E(this,t,n);case"ascii":return O(this,t,n);case"latin1":case"binary":return I(this,t,n);case"base64":return C(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return R(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function m(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function v(e,t,n,r,i){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=i?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(i)return-1;n=e.length-1}else if(n<0){if(!i)return-1;n=0}if("string"==typeof t&&(t=l.from(t,r)),l.isBuffer(t))return 0===t.length?-1:y(e,t,n,r,i);if("number"==typeof t)return t&=255,l.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):y(e,[t],n,r,i);throw new TypeError("val must be string, number or Buffer")}function y(e,t,n,r,i){var a,s=1,o=e.length,l=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;s=2,o/=2,l/=2,n/=2}function u(e,t){return 1===s?e[t]:e.readUInt16BE(t*s)}if(i){var c=-1;for(a=n;a<o;a++)if(u(e,a)===u(t,-1===c?0:a-c)){if(-1===c&&(c=a),a-c+1===l)return c*s}else-1!==c&&(a-=a-c),c=-1}else for(n+l>o&&(n=o-l),a=n;a>=0;a--){for(var d=!0,h=0;h<l;h++)if(u(e,a+h)!==u(t,h)){d=!1;break}if(d)return a}return-1}function b(e,t,n,r){n=Number(n)||0;var i=e.length-n;r?(r=Number(r))>i&&(r=i):r=i;var a=t.length;if(a%2!=0)throw new TypeError("Invalid hex string");r>a/2&&(r=a/2);for(var s=0;s<r;++s){var o=parseInt(t.substr(2*s,2),16);if(isNaN(o))return s;e[n+s]=o}return s}function w(e,t,n,r){return W(Z(t,e.length-n),e,n,r)}function x(e,t,n,r){return W(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function k(e,t,n,r){return x(e,t,n,r)}function T(e,t,n,r){return W(M(t),e,n,r)}function A(e,t,n,r){return W(function(e,t){for(var n,r,i,a=[],s=0;s<e.length&&!((t-=2)<0);++s)r=(n=e.charCodeAt(s))>>8,i=n%256,a.push(i),a.push(r);return a}(t,e.length-n),e,n,r)}function C(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function E(e,t,n){n=Math.min(e.length,n);for(var r=[],i=t;i<n;){var a,s,o,l,u=e[i],c=null,d=u>239?4:u>223?3:u>191?2:1;if(i+d<=n)switch(d){case 1:u<128&&(c=u);break;case 2:128==(192&(a=e[i+1]))&&(l=(31&u)<<6|63&a)>127&&(c=l);break;case 3:a=e[i+1],s=e[i+2],128==(192&a)&&128==(192&s)&&(l=(15&u)<<12|(63&a)<<6|63&s)>2047&&(l<55296||l>57343)&&(c=l);break;case 4:a=e[i+1],s=e[i+2],o=e[i+3],128==(192&a)&&128==(192&s)&&128==(192&o)&&(l=(15&u)<<18|(63&a)<<12|(63&s)<<6|63&o)>65535&&l<1114112&&(c=l)}null===c?(c=65533,d=1):c>65535&&(c-=65536,r.push(c>>>10&1023|55296),c=56320|1023&c),r.push(c),i+=d}return function(e){var t=e.length;if(t<=S)return String.fromCharCode.apply(String,e);var n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=S));return n}(r)}t.hp=l,t.IS=50,l.TYPED_ARRAY_SUPPORT=void 0!==n.g.TYPED_ARRAY_SUPPORT?n.g.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),s(),l.poolSize=8192,l._augment=function(e){return e.__proto__=l.prototype,e},l.from=function(e,t,n){return u(null,e,t,n)},l.TYPED_ARRAY_SUPPORT&&(l.prototype.__proto__=Uint8Array.prototype,l.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&l[Symbol.species]===l&&Object.defineProperty(l,Symbol.species,{value:null,configurable:!0})),l.alloc=function(e,t,n){return function(e,t,n,r){return c(t),t<=0?o(e,t):void 0!==n?"string"==typeof r?o(e,t).fill(n,r):o(e,t).fill(n):o(e,t)}(null,e,t,n)},l.allocUnsafe=function(e){return d(null,e)},l.allocUnsafeSlow=function(e){return d(null,e)},l.isBuffer=function(e){return!(null==e||!e._isBuffer)},l.compare=function(e,t){if(!l.isBuffer(e)||!l.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,r=t.length,i=0,a=Math.min(n,r);i<a;++i)if(e[i]!==t[i]){n=e[i],r=t[i];break}return n<r?-1:r<n?1:0},l.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},l.concat=function(e,t){if(!a(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return l.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=l.allocUnsafe(t),i=0;for(n=0;n<e.length;++n){var s=e[n];if(!l.isBuffer(s))throw new TypeError('"list" argument must be an Array of Buffers');s.copy(r,i),i+=s.length}return r},l.byteLength=f,l.prototype._isBuffer=!0,l.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)m(this,t,t+1);return this},l.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)m(this,t,t+3),m(this,t+1,t+2);return this},l.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)m(this,t,t+7),m(this,t+1,t+6),m(this,t+2,t+5),m(this,t+3,t+4);return this},l.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?E(this,0,e):g.apply(this,arguments)},l.prototype.equals=function(e){if(!l.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===l.compare(this,e)},l.prototype.inspect=function(){var e="",n=t.IS;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},l.prototype.compare=function(e,t,n,r,i){if(!l.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===i&&(i=this.length),t<0||n>e.length||r<0||i>this.length)throw new RangeError("out of range index");if(r>=i&&t>=n)return 0;if(r>=i)return-1;if(t>=n)return 1;if(this===e)return 0;for(var a=(i>>>=0)-(r>>>=0),s=(n>>>=0)-(t>>>=0),o=Math.min(a,s),u=this.slice(r,i),c=e.slice(t,n),d=0;d<o;++d)if(u[d]!==c[d]){a=u[d],s=c[d];break}return a<s?-1:s<a?1:0},l.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},l.prototype.indexOf=function(e,t,n){return v(this,e,t,n,!0)},l.prototype.lastIndexOf=function(e,t,n){return v(this,e,t,n,!1)},l.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var i=this.length-t;if((void 0===n||n>i)&&(n=i),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var a=!1;;)switch(r){case"hex":return b(this,e,t,n);case"utf8":case"utf-8":return w(this,e,t,n);case"ascii":return x(this,e,t,n);case"latin1":case"binary":return k(this,e,t,n);case"base64":return T(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return A(this,e,t,n);default:if(a)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),a=!0}},l.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var S=4096;function O(e,t,n){var r="";n=Math.min(e.length,n);for(var i=t;i<n;++i)r+=String.fromCharCode(127&e[i]);return r}function I(e,t,n){var r="";n=Math.min(e.length,n);for(var i=t;i<n;++i)r+=String.fromCharCode(e[i]);return r}function B(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var i="",a=t;a<n;++a)i+=J(e[a]);return i}function R(e,t,n){for(var r=e.slice(t,n),i="",a=0;a<r.length;a+=2)i+=String.fromCharCode(r[a]+256*r[a+1]);return i}function D(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function N(e,t,n,r,i,a){if(!l.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>i||t<a)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function L(e,t,n,r){t<0&&(t=65535+t+1);for(var i=0,a=Math.min(e.length-n,2);i<a;++i)e[n+i]=(t&255<<8*(r?i:1-i))>>>8*(r?i:1-i)}function U(e,t,n,r){t<0&&(t=4294967295+t+1);for(var i=0,a=Math.min(e.length-n,4);i<a;++i)e[n+i]=t>>>8*(r?i:3-i)&255}function P(e,t,n,r,i,a){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function V(e,t,n,r,a){return a||P(e,0,n,4),i.write(e,t,n,r,23,4),n+4}function j(e,t,n,r,a){return a||P(e,0,n,8),i.write(e,t,n,r,52,8),n+8}l.prototype.slice=function(e,t){var n,r=this.length;if((e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e),l.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=l.prototype;else{var i=t-e;n=new l(i,void 0);for(var a=0;a<i;++a)n[a]=this[a+e]}return n},l.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||D(e,t,this.length);for(var r=this[e],i=1,a=0;++a<t&&(i*=256);)r+=this[e+a]*i;return r},l.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||D(e,t,this.length);for(var r=this[e+--t],i=1;t>0&&(i*=256);)r+=this[e+--t]*i;return r},l.prototype.readUInt8=function(e,t){return t||D(e,1,this.length),this[e]},l.prototype.readUInt16LE=function(e,t){return t||D(e,2,this.length),this[e]|this[e+1]<<8},l.prototype.readUInt16BE=function(e,t){return t||D(e,2,this.length),this[e]<<8|this[e+1]},l.prototype.readUInt32LE=function(e,t){return t||D(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},l.prototype.readUInt32BE=function(e,t){return t||D(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},l.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||D(e,t,this.length);for(var r=this[e],i=1,a=0;++a<t&&(i*=256);)r+=this[e+a]*i;return r>=(i*=128)&&(r-=Math.pow(2,8*t)),r},l.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||D(e,t,this.length);for(var r=t,i=1,a=this[e+--r];r>0&&(i*=256);)a+=this[e+--r]*i;return a>=(i*=128)&&(a-=Math.pow(2,8*t)),a},l.prototype.readInt8=function(e,t){return t||D(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},l.prototype.readInt16LE=function(e,t){t||D(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},l.prototype.readInt16BE=function(e,t){t||D(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},l.prototype.readInt32LE=function(e,t){return t||D(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},l.prototype.readInt32BE=function(e,t){return t||D(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},l.prototype.readFloatLE=function(e,t){return t||D(e,4,this.length),i.read(this,e,!0,23,4)},l.prototype.readFloatBE=function(e,t){return t||D(e,4,this.length),i.read(this,e,!1,23,4)},l.prototype.readDoubleLE=function(e,t){return t||D(e,8,this.length),i.read(this,e,!0,52,8)},l.prototype.readDoubleBE=function(e,t){return t||D(e,8,this.length),i.read(this,e,!1,52,8)},l.prototype.writeUIntLE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||N(this,e,t,n,Math.pow(2,8*n)-1,0);var i=1,a=0;for(this[t]=255&e;++a<n&&(i*=256);)this[t+a]=e/i&255;return t+n},l.prototype.writeUIntBE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||N(this,e,t,n,Math.pow(2,8*n)-1,0);var i=n-1,a=1;for(this[t+i]=255&e;--i>=0&&(a*=256);)this[t+i]=e/a&255;return t+n},l.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||N(this,e,t,1,255,0),l.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},l.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||N(this,e,t,2,65535,0),l.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):L(this,e,t,!0),t+2},l.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||N(this,e,t,2,65535,0),l.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):L(this,e,t,!1),t+2},l.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||N(this,e,t,4,4294967295,0),l.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):U(this,e,t,!0),t+4},l.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||N(this,e,t,4,4294967295,0),l.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):U(this,e,t,!1),t+4},l.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var i=Math.pow(2,8*n-1);N(this,e,t,n,i-1,-i)}var a=0,s=1,o=0;for(this[t]=255&e;++a<n&&(s*=256);)e<0&&0===o&&0!==this[t+a-1]&&(o=1),this[t+a]=(e/s|0)-o&255;return t+n},l.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var i=Math.pow(2,8*n-1);N(this,e,t,n,i-1,-i)}var a=n-1,s=1,o=0;for(this[t+a]=255&e;--a>=0&&(s*=256);)e<0&&0===o&&0!==this[t+a+1]&&(o=1),this[t+a]=(e/s|0)-o&255;return t+n},l.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||N(this,e,t,1,127,-128),l.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},l.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||N(this,e,t,2,32767,-32768),l.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):L(this,e,t,!0),t+2},l.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||N(this,e,t,2,32767,-32768),l.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):L(this,e,t,!1),t+2},l.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||N(this,e,t,4,2147483647,-2147483648),l.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):U(this,e,t,!0),t+4},l.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||N(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),l.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):U(this,e,t,!1),t+4},l.prototype.writeFloatLE=function(e,t,n){return V(this,e,t,!0,n)},l.prototype.writeFloatBE=function(e,t,n){return V(this,e,t,!1,n)},l.prototype.writeDoubleLE=function(e,t,n){return j(this,e,t,!0,n)},l.prototype.writeDoubleBE=function(e,t,n){return j(this,e,t,!1,n)},l.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var i,a=r-n;if(this===e&&n<t&&t<r)for(i=a-1;i>=0;--i)e[i+t]=this[i+n];else if(a<1e3||!l.TYPED_ARRAY_SUPPORT)for(i=0;i<a;++i)e[i+t]=this[i+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+a),t);return a},l.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===e.length){var i=e.charCodeAt(0);i<256&&(e=i)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!l.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var a;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(a=t;a<n;++a)this[a]=e;else{var s=l.isBuffer(e)?e:Z(new l(e,r).toString()),o=s.length;for(a=0;a<n-t;++a)this[a+t]=s[a%o]}return this};var F=/[^+\/0-9A-Za-z-_]/g;function J(e){return e<16?"0"+e.toString(16):e.toString(16)}function Z(e,t){var n;t=t||1/0;for(var r=e.length,i=null,a=[],s=0;s<r;++s){if((n=e.charCodeAt(s))>55295&&n<57344){if(!i){if(n>56319){(t-=3)>-1&&a.push(239,191,189);continue}if(s+1===r){(t-=3)>-1&&a.push(239,191,189);continue}i=n;continue}if(n<56320){(t-=3)>-1&&a.push(239,191,189),i=n;continue}n=65536+(i-55296<<10|n-56320)}else i&&(t-=3)>-1&&a.push(239,191,189);if(i=null,n<128){if((t-=1)<0)break;a.push(n)}else if(n<2048){if((t-=2)<0)break;a.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;a.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;a.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return a}function M(e){return r.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(F,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function W(e,t,n,r){for(var i=0;i<r&&!(i+n>=t.length||i>=e.length);++i)t[i+n]=e[i];return i}},8584:function(e,t,n){const{Controller:r}=n(2891);window.Controllers||(window.Controllers={}),window.Controllers["delay-forward"]=class extends r{static values={url:String,delayMs:Number};connect(){console.log("DelayForwardController connected"),this.timeout=null,this.forward()}forward(){this.timeout&&clearTimeout(this.timeout),this.timeout=setTimeout((()=>{console.log("Forwarding to "+this.urlValue),window.location.href=this.urlValue}),this.delayMsValue)}disconnect(){this.timeout&&clearTimeout(this.timeout)}}},8726:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static values={btnData:Object,requireData:Boolean};btnDataValueChanged(){null===this.btnDataValue&&(this.btnDataValue={}),this.requireDataValue&&0===Object.keys(this.btnDataValue).length?this.element.disabled=!0:this.element.disabled=!1}addBtnData(e){this.btnDataValue=e}fireNotice(e){let t=this.btnDataValue;this.dispatch("outlet-button-clicked",{detail:t})}addListener(e){this.element.addEventListener("outlet-btn:outlet-button-clicked",e)}removeListener(e){this.element.removeEventListener("outlet-btn:outlet-button-clicked",e)}}window.Controllers||(window.Controllers={}),window.Controllers["outlet-btn"]=i},9147:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static values={url:String};static targets=["activity","approvers","submitBtn","memberId"];getApprovers(e){this.approversTarget.value="";let t=this.activityTarget.value,n=this.urlValue+"/"+t+"/"+this.memberIdTarget.value;fetch(n,this.optionsForFetch()).then((e=>e.json())).then((e=>{let t=[];e.forEach((e=>{t.push({value:e.id,text:e.sca_name})})),this.approversTarget.options=t,this.submitBtnTarget.disabled=!0,this.approversTarget.disabled=!1}))}acConnected(){this.hasApproversTarget&&(this.approversTarget.disabled=!0)}optionsForFetch(){return{headers:{"X-Requested-With":"XMLHttpRequest",Accept:"application/json"}}}checkReadyToSubmit(){let e=this.approversTarget.value,t=parseInt(e);this.submitBtnTarget.disabled=!(t>0)}submitBtnTargetConnected(){this.submitBtnTarget.disabled=!0}approversTargetConnected(){this.approversTarget.disabled=!0}}window.Controllers||(window.Controllers={}),window.Controllers["activities-request-auth"]=i},9275:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static values={url:String};static targets=["activity","approvers","submitBtn","memberId","id"];static outlets=["outlet-btn"];setId(e){this.idTarget.value=e.detail.id,this.activityTarget.value=e.detail.activity,this.getApprovers()}outletBtnOutletConnected(e,t){e.addListener(this.setId.bind(this))}outletBtnOutletDisconnected(e){e.removeListener(this.setId.bind(this))}getApprovers(){if(this.hasApproversTarget){this.approversTarget.value="";let e=this.activityTarget.value,t=this.urlValue+"/"+e+"/"+this.memberIdTarget.value;fetch(t,this.optionsForFetch()).then((e=>e.json())).then((e=>{let t=[];e.forEach((e=>{t.push({value:e.id,text:e.sca_name})})),this.approversTarget.options=t,this.submitBtnTarget.disabled=!0,this.approversTarget.disabled=!1}))}}optionsForFetch(){return{headers:{"X-Requested-With":"XMLHttpRequest",Accept:"application/json"}}}checkReadyToSubmit(){let e=this.approversTarget.value,t=parseInt(e);this.submitBtnTarget.disabled=!(t>0)}submitBtnTargetConnected(){this.submitBtnTarget.disabled=!0}}window.Controllers||(window.Controllers={}),window.Controllers["activities-renew-auth"]=i},9655:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static values={modalBtn:String};modalBtnValueChanged(){document.getElementById(this.modalBtnValue).click()}}window.Controllers||(window.Controllers={}),window.Controllers["modal-opener"]=i},9707:function(e,t,n){"use strict";var r=n(2891);class i extends r.Controller{static values={url:String,filename:String};static targets=["button"];async download(e){e.preventDefault();const t=this.urlValue||this.element.getAttribute("href")||this.element.dataset.url;if(t)try{const e=await fetch(t,{headers:{"X-Requested-With":"XMLHttpRequest"}});if(!e.ok)throw new Error(`Failed to download CSV: ${e.status}`);const n=await e.blob(),r=window.URL.createObjectURL(n),i=document.createElement("a");i.href=r,i.download=this.filenameValue||"export.csv",document.body.appendChild(i),i.click(),setTimeout((()=>{window.URL.revokeObjectURL(r),i.remove()}),100)}catch(e){alert("Error downloading CSV: "+e.message)}else alert("No CSV URL provided.")}connect(){this.hasButtonTarget?this.buttonTarget.addEventListener("click",this.download.bind(this)):this.element.addEventListener("click",this.download.bind(this))}disconnect(){this.hasButtonTarget?this.buttonTarget.removeEventListener("click",this.download.bind(this)):this.element.removeEventListener("click",this.download.bind(this))}}window.Controllers||(window.Controllers={}),window.Controllers["csv-download"]=i}},function(e){var t=function(t){return e(e.s=t)};e.O(0,[652,252,161,352,929],(function(){return t(6319),t(4617),t(7942),t(9707),t(8584),t(3470),t(4705),t(1654),t(7570),t(2579),t(2895),t(8058),t(1753),t(167),t(5581),t(9655),t(5037),t(8726),t(2042),t(3340),t(3863),t(3251),t(5676),t(318),t(5078),t(3473),t(5116),t(9275),t(9147),t(1436),t(7986),t(3282),t(3997),t(2939),t(1275),t(77),t(3338),t(7369),t(1154),t(7050),t(1446),t(2354),t(1841),t(5231),t(7599),t(4883)}));e.O()}]);
//# sourceMappingURL=controllers.js.map